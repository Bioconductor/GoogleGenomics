// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/variants.proto

#ifndef PROTOBUF_google_2fgenomics_2fv1_2fvariants_2eproto__INCLUDED
#define PROTOBUF_google_2fgenomics_2fv1_2fvariants_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace api {
}  // namespace api
namespace genomics {
namespace v1 {
class CallSet;
class CallSetDefaultTypeInternal;
extern CallSetDefaultTypeInternal _CallSet_default_instance_;
class CallSet_InfoEntry;
class CallSet_InfoEntryDefaultTypeInternal;
extern CallSet_InfoEntryDefaultTypeInternal _CallSet_InfoEntry_default_instance_;
class CreateCallSetRequest;
class CreateCallSetRequestDefaultTypeInternal;
extern CreateCallSetRequestDefaultTypeInternal _CreateCallSetRequest_default_instance_;
class CreateVariantRequest;
class CreateVariantRequestDefaultTypeInternal;
extern CreateVariantRequestDefaultTypeInternal _CreateVariantRequest_default_instance_;
class CreateVariantSetRequest;
class CreateVariantSetRequestDefaultTypeInternal;
extern CreateVariantSetRequestDefaultTypeInternal _CreateVariantSetRequest_default_instance_;
class DeleteCallSetRequest;
class DeleteCallSetRequestDefaultTypeInternal;
extern DeleteCallSetRequestDefaultTypeInternal _DeleteCallSetRequest_default_instance_;
class DeleteVariantRequest;
class DeleteVariantRequestDefaultTypeInternal;
extern DeleteVariantRequestDefaultTypeInternal _DeleteVariantRequest_default_instance_;
class DeleteVariantSetRequest;
class DeleteVariantSetRequestDefaultTypeInternal;
extern DeleteVariantSetRequestDefaultTypeInternal _DeleteVariantSetRequest_default_instance_;
class ExportVariantSetRequest;
class ExportVariantSetRequestDefaultTypeInternal;
extern ExportVariantSetRequestDefaultTypeInternal _ExportVariantSetRequest_default_instance_;
class GetCallSetRequest;
class GetCallSetRequestDefaultTypeInternal;
extern GetCallSetRequestDefaultTypeInternal _GetCallSetRequest_default_instance_;
class GetVariantRequest;
class GetVariantRequestDefaultTypeInternal;
extern GetVariantRequestDefaultTypeInternal _GetVariantRequest_default_instance_;
class GetVariantSetRequest;
class GetVariantSetRequestDefaultTypeInternal;
extern GetVariantSetRequestDefaultTypeInternal _GetVariantSetRequest_default_instance_;
class ImportVariantsRequest;
class ImportVariantsRequestDefaultTypeInternal;
extern ImportVariantsRequestDefaultTypeInternal _ImportVariantsRequest_default_instance_;
class ImportVariantsRequest_InfoMergeConfigEntry;
class ImportVariantsRequest_InfoMergeConfigEntryDefaultTypeInternal;
extern ImportVariantsRequest_InfoMergeConfigEntryDefaultTypeInternal _ImportVariantsRequest_InfoMergeConfigEntry_default_instance_;
class ImportVariantsResponse;
class ImportVariantsResponseDefaultTypeInternal;
extern ImportVariantsResponseDefaultTypeInternal _ImportVariantsResponse_default_instance_;
class MergeVariantsRequest;
class MergeVariantsRequestDefaultTypeInternal;
extern MergeVariantsRequestDefaultTypeInternal _MergeVariantsRequest_default_instance_;
class MergeVariantsRequest_InfoMergeConfigEntry;
class MergeVariantsRequest_InfoMergeConfigEntryDefaultTypeInternal;
extern MergeVariantsRequest_InfoMergeConfigEntryDefaultTypeInternal _MergeVariantsRequest_InfoMergeConfigEntry_default_instance_;
class ReferenceBound;
class ReferenceBoundDefaultTypeInternal;
extern ReferenceBoundDefaultTypeInternal _ReferenceBound_default_instance_;
class SearchCallSetsRequest;
class SearchCallSetsRequestDefaultTypeInternal;
extern SearchCallSetsRequestDefaultTypeInternal _SearchCallSetsRequest_default_instance_;
class SearchCallSetsResponse;
class SearchCallSetsResponseDefaultTypeInternal;
extern SearchCallSetsResponseDefaultTypeInternal _SearchCallSetsResponse_default_instance_;
class SearchVariantSetsRequest;
class SearchVariantSetsRequestDefaultTypeInternal;
extern SearchVariantSetsRequestDefaultTypeInternal _SearchVariantSetsRequest_default_instance_;
class SearchVariantSetsResponse;
class SearchVariantSetsResponseDefaultTypeInternal;
extern SearchVariantSetsResponseDefaultTypeInternal _SearchVariantSetsResponse_default_instance_;
class SearchVariantsRequest;
class SearchVariantsRequestDefaultTypeInternal;
extern SearchVariantsRequestDefaultTypeInternal _SearchVariantsRequest_default_instance_;
class SearchVariantsResponse;
class SearchVariantsResponseDefaultTypeInternal;
extern SearchVariantsResponseDefaultTypeInternal _SearchVariantsResponse_default_instance_;
class StreamVariantsRequest;
class StreamVariantsRequestDefaultTypeInternal;
extern StreamVariantsRequestDefaultTypeInternal _StreamVariantsRequest_default_instance_;
class StreamVariantsResponse;
class StreamVariantsResponseDefaultTypeInternal;
extern StreamVariantsResponseDefaultTypeInternal _StreamVariantsResponse_default_instance_;
class UpdateCallSetRequest;
class UpdateCallSetRequestDefaultTypeInternal;
extern UpdateCallSetRequestDefaultTypeInternal _UpdateCallSetRequest_default_instance_;
class UpdateVariantRequest;
class UpdateVariantRequestDefaultTypeInternal;
extern UpdateVariantRequestDefaultTypeInternal _UpdateVariantRequest_default_instance_;
class UpdateVariantSetRequest;
class UpdateVariantSetRequestDefaultTypeInternal;
extern UpdateVariantSetRequestDefaultTypeInternal _UpdateVariantSetRequest_default_instance_;
class Variant;
class VariantDefaultTypeInternal;
extern VariantDefaultTypeInternal _Variant_default_instance_;
class VariantCall;
class VariantCallDefaultTypeInternal;
extern VariantCallDefaultTypeInternal _VariantCall_default_instance_;
class VariantCall_InfoEntry;
class VariantCall_InfoEntryDefaultTypeInternal;
extern VariantCall_InfoEntryDefaultTypeInternal _VariantCall_InfoEntry_default_instance_;
class VariantSet;
class VariantSetDefaultTypeInternal;
extern VariantSetDefaultTypeInternal _VariantSet_default_instance_;
class VariantSetMetadata;
class VariantSetMetadataDefaultTypeInternal;
extern VariantSetMetadataDefaultTypeInternal _VariantSetMetadata_default_instance_;
class VariantSetMetadata_InfoEntry;
class VariantSetMetadata_InfoEntryDefaultTypeInternal;
extern VariantSetMetadata_InfoEntryDefaultTypeInternal _VariantSetMetadata_InfoEntry_default_instance_;
class Variant_InfoEntry;
class Variant_InfoEntryDefaultTypeInternal;
extern Variant_InfoEntryDefaultTypeInternal _Variant_InfoEntry_default_instance_;
}  // namespace v1
}  // namespace genomics
namespace longrunning {
class CancelOperationRequest;
class CancelOperationRequestDefaultTypeInternal;
extern CancelOperationRequestDefaultTypeInternal _CancelOperationRequest_default_instance_;
class DeleteOperationRequest;
class DeleteOperationRequestDefaultTypeInternal;
extern DeleteOperationRequestDefaultTypeInternal _DeleteOperationRequest_default_instance_;
class GetOperationRequest;
class GetOperationRequestDefaultTypeInternal;
extern GetOperationRequestDefaultTypeInternal _GetOperationRequest_default_instance_;
class ListOperationsRequest;
class ListOperationsRequestDefaultTypeInternal;
extern ListOperationsRequestDefaultTypeInternal _ListOperationsRequest_default_instance_;
class ListOperationsResponse;
class ListOperationsResponseDefaultTypeInternal;
extern ListOperationsResponseDefaultTypeInternal _ListOperationsResponse_default_instance_;
class Operation;
class OperationDefaultTypeInternal;
extern OperationDefaultTypeInternal _Operation_default_instance_;
}  // namespace longrunning
namespace protobuf {
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class FieldMask;
class FieldMaskDefaultTypeInternal;
extern FieldMaskDefaultTypeInternal _FieldMask_default_instance_;
class ListValue;
class ListValueDefaultTypeInternal;
extern ListValueDefaultTypeInternal _ListValue_default_instance_;
class Struct;
class StructDefaultTypeInternal;
extern StructDefaultTypeInternal _Struct_default_instance_;
class Struct_FieldsEntry;
class Struct_FieldsEntryDefaultTypeInternal;
extern Struct_FieldsEntryDefaultTypeInternal _Struct_FieldsEntry_default_instance_;
class Value;
class ValueDefaultTypeInternal;
extern ValueDefaultTypeInternal _Value_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace google {
namespace genomics {
namespace v1 {

namespace protobuf_google_2fgenomics_2fv1_2fvariants_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_google_2fgenomics_2fv1_2fvariants_2eproto

enum VariantSetMetadata_Type {
  VariantSetMetadata_Type_TYPE_UNSPECIFIED = 0,
  VariantSetMetadata_Type_INTEGER = 1,
  VariantSetMetadata_Type_FLOAT = 2,
  VariantSetMetadata_Type_FLAG = 3,
  VariantSetMetadata_Type_CHARACTER = 4,
  VariantSetMetadata_Type_STRING = 5,
  VariantSetMetadata_Type_VariantSetMetadata_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VariantSetMetadata_Type_VariantSetMetadata_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VariantSetMetadata_Type_IsValid(int value);
const VariantSetMetadata_Type VariantSetMetadata_Type_Type_MIN = VariantSetMetadata_Type_TYPE_UNSPECIFIED;
const VariantSetMetadata_Type VariantSetMetadata_Type_Type_MAX = VariantSetMetadata_Type_STRING;
const int VariantSetMetadata_Type_Type_ARRAYSIZE = VariantSetMetadata_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* VariantSetMetadata_Type_descriptor();
inline const ::std::string& VariantSetMetadata_Type_Name(VariantSetMetadata_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    VariantSetMetadata_Type_descriptor(), value);
}
inline bool VariantSetMetadata_Type_Parse(
    const ::std::string& name, VariantSetMetadata_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VariantSetMetadata_Type>(
    VariantSetMetadata_Type_descriptor(), name, value);
}
enum ImportVariantsRequest_Format {
  ImportVariantsRequest_Format_FORMAT_UNSPECIFIED = 0,
  ImportVariantsRequest_Format_FORMAT_VCF = 1,
  ImportVariantsRequest_Format_FORMAT_COMPLETE_GENOMICS = 2,
  ImportVariantsRequest_Format_ImportVariantsRequest_Format_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ImportVariantsRequest_Format_ImportVariantsRequest_Format_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ImportVariantsRequest_Format_IsValid(int value);
const ImportVariantsRequest_Format ImportVariantsRequest_Format_Format_MIN = ImportVariantsRequest_Format_FORMAT_UNSPECIFIED;
const ImportVariantsRequest_Format ImportVariantsRequest_Format_Format_MAX = ImportVariantsRequest_Format_FORMAT_COMPLETE_GENOMICS;
const int ImportVariantsRequest_Format_Format_ARRAYSIZE = ImportVariantsRequest_Format_Format_MAX + 1;

const ::google::protobuf::EnumDescriptor* ImportVariantsRequest_Format_descriptor();
inline const ::std::string& ImportVariantsRequest_Format_Name(ImportVariantsRequest_Format value) {
  return ::google::protobuf::internal::NameOfEnum(
    ImportVariantsRequest_Format_descriptor(), value);
}
inline bool ImportVariantsRequest_Format_Parse(
    const ::std::string& name, ImportVariantsRequest_Format* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImportVariantsRequest_Format>(
    ImportVariantsRequest_Format_descriptor(), name, value);
}
enum ExportVariantSetRequest_Format {
  ExportVariantSetRequest_Format_FORMAT_UNSPECIFIED = 0,
  ExportVariantSetRequest_Format_FORMAT_BIGQUERY = 1,
  ExportVariantSetRequest_Format_ExportVariantSetRequest_Format_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExportVariantSetRequest_Format_ExportVariantSetRequest_Format_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExportVariantSetRequest_Format_IsValid(int value);
const ExportVariantSetRequest_Format ExportVariantSetRequest_Format_Format_MIN = ExportVariantSetRequest_Format_FORMAT_UNSPECIFIED;
const ExportVariantSetRequest_Format ExportVariantSetRequest_Format_Format_MAX = ExportVariantSetRequest_Format_FORMAT_BIGQUERY;
const int ExportVariantSetRequest_Format_Format_ARRAYSIZE = ExportVariantSetRequest_Format_Format_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExportVariantSetRequest_Format_descriptor();
inline const ::std::string& ExportVariantSetRequest_Format_Name(ExportVariantSetRequest_Format value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExportVariantSetRequest_Format_descriptor(), value);
}
inline bool ExportVariantSetRequest_Format_Parse(
    const ::std::string& name, ExportVariantSetRequest_Format* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExportVariantSetRequest_Format>(
    ExportVariantSetRequest_Format_descriptor(), name, value);
}
enum InfoMergeOperation {
  INFO_MERGE_OPERATION_UNSPECIFIED = 0,
  IGNORE_NEW = 1,
  MOVE_TO_CALLS = 2,
  InfoMergeOperation_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InfoMergeOperation_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InfoMergeOperation_IsValid(int value);
const InfoMergeOperation InfoMergeOperation_MIN = INFO_MERGE_OPERATION_UNSPECIFIED;
const InfoMergeOperation InfoMergeOperation_MAX = MOVE_TO_CALLS;
const int InfoMergeOperation_ARRAYSIZE = InfoMergeOperation_MAX + 1;

const ::google::protobuf::EnumDescriptor* InfoMergeOperation_descriptor();
inline const ::std::string& InfoMergeOperation_Name(InfoMergeOperation value) {
  return ::google::protobuf::internal::NameOfEnum(
    InfoMergeOperation_descriptor(), value);
}
inline bool InfoMergeOperation_Parse(
    const ::std::string& name, InfoMergeOperation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InfoMergeOperation>(
    InfoMergeOperation_descriptor(), name, value);
}
// ===================================================================


// -------------------------------------------------------------------

class VariantSetMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.VariantSetMetadata) */ {
 public:
  VariantSetMetadata();
  virtual ~VariantSetMetadata();

  VariantSetMetadata(const VariantSetMetadata& from);

  inline VariantSetMetadata& operator=(const VariantSetMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const VariantSetMetadata& default_instance();

  static inline const VariantSetMetadata* internal_default_instance() {
    return reinterpret_cast<const VariantSetMetadata*>(
               &_VariantSetMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(VariantSetMetadata* other);
  void Swap(VariantSetMetadata* other);

  // implements Message ----------------------------------------------

  inline VariantSetMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  VariantSetMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VariantSetMetadata& from);
  void MergeFrom(const VariantSetMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VariantSetMetadata* other);
  protected:
  explicit VariantSetMetadata(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef VariantSetMetadata_Type Type;
  static const Type TYPE_UNSPECIFIED =
    VariantSetMetadata_Type_TYPE_UNSPECIFIED;
  static const Type INTEGER =
    VariantSetMetadata_Type_INTEGER;
  static const Type FLOAT =
    VariantSetMetadata_Type_FLOAT;
  static const Type FLAG =
    VariantSetMetadata_Type_FLAG;
  static const Type CHARACTER =
    VariantSetMetadata_Type_CHARACTER;
  static const Type STRING =
    VariantSetMetadata_Type_STRING;
  static inline bool Type_IsValid(int value) {
    return VariantSetMetadata_Type_IsValid(value);
  }
  static const Type Type_MIN =
    VariantSetMetadata_Type_Type_MIN;
  static const Type Type_MAX =
    VariantSetMetadata_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    VariantSetMetadata_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return VariantSetMetadata_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return VariantSetMetadata_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return VariantSetMetadata_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<string, .google.protobuf.ListValue> info = 3;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
      mutable_info();

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);
  ::std::string* unsafe_arena_release_key();
  void unsafe_arena_set_allocated_key(
      ::std::string* key);

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);
  ::std::string* unsafe_arena_release_value();
  void unsafe_arena_set_allocated_value(
      ::std::string* value);

  // string id = 4;
  void clear_id();
  static const int kIdFieldNumber = 4;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);
  ::std::string* unsafe_arena_release_id();
  void unsafe_arena_set_allocated_id(
      ::std::string* id);

  // string description = 7;
  void clear_description();
  static const int kDescriptionFieldNumber = 7;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);
  ::std::string* unsafe_arena_release_description();
  void unsafe_arena_set_allocated_description(
      ::std::string* description);

  // string number = 8;
  void clear_number();
  static const int kNumberFieldNumber = 8;
  const ::std::string& number() const;
  void set_number(const ::std::string& value);
  void set_number(const char* value);
  void set_number(const char* value, size_t size);
  ::std::string* mutable_number();
  ::std::string* release_number();
  void set_allocated_number(::std::string* number);
  ::std::string* unsafe_arena_release_number();
  void unsafe_arena_set_allocated_number(
      ::std::string* number);

  // .google.genomics.v1.VariantSetMetadata.Type type = 5;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::genomics::v1::VariantSetMetadata_Type type() const;
  void set_type(::google::genomics::v1::VariantSetMetadata_Type value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.VariantSetMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  public:
  class VariantSetMetadata_InfoEntry : public ::google::protobuf::internal::MapEntry<VariantSetMetadata_InfoEntry, 
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<VariantSetMetadata_InfoEntry, 
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    VariantSetMetadata_InfoEntry();
    VariantSetMetadata_InfoEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const VariantSetMetadata_InfoEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_VariantSetMetadata_InfoEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      VariantSetMetadata_InfoEntry,
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > info_;
  private:
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr number_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VariantSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.VariantSet) */ {
 public:
  VariantSet();
  virtual ~VariantSet();

  VariantSet(const VariantSet& from);

  inline VariantSet& operator=(const VariantSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const VariantSet& default_instance();

  static inline const VariantSet* internal_default_instance() {
    return reinterpret_cast<const VariantSet*>(
               &_VariantSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(VariantSet* other);
  void Swap(VariantSet* other);

  // implements Message ----------------------------------------------

  inline VariantSet* New() const PROTOBUF_FINAL { return New(NULL); }

  VariantSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VariantSet& from);
  void MergeFrom(const VariantSet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VariantSet* other);
  protected:
  explicit VariantSet(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.VariantSetMetadata metadata = 4;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 4;
  const ::google::genomics::v1::VariantSetMetadata& metadata(int index) const;
  ::google::genomics::v1::VariantSetMetadata* mutable_metadata(int index);
  ::google::genomics::v1::VariantSetMetadata* add_metadata();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantSetMetadata >*
      mutable_metadata();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantSetMetadata >&
      metadata() const;

  // repeated .google.genomics.v1.ReferenceBound reference_bounds = 5;
  int reference_bounds_size() const;
  void clear_reference_bounds();
  static const int kReferenceBoundsFieldNumber = 5;
  const ::google::genomics::v1::ReferenceBound& reference_bounds(int index) const;
  ::google::genomics::v1::ReferenceBound* mutable_reference_bounds(int index);
  ::google::genomics::v1::ReferenceBound* add_reference_bounds();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReferenceBound >*
      mutable_reference_bounds();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReferenceBound >&
      reference_bounds() const;

  // string dataset_id = 1;
  void clear_dataset_id();
  static const int kDatasetIdFieldNumber = 1;
  const ::std::string& dataset_id() const;
  void set_dataset_id(const ::std::string& value);
  void set_dataset_id(const char* value);
  void set_dataset_id(const char* value, size_t size);
  ::std::string* mutable_dataset_id();
  ::std::string* release_dataset_id();
  void set_allocated_dataset_id(::std::string* dataset_id);
  ::std::string* unsafe_arena_release_dataset_id();
  void unsafe_arena_set_allocated_dataset_id(
      ::std::string* dataset_id);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);
  ::std::string* unsafe_arena_release_id();
  void unsafe_arena_set_allocated_id(
      ::std::string* id);

  // string reference_set_id = 6;
  void clear_reference_set_id();
  static const int kReferenceSetIdFieldNumber = 6;
  const ::std::string& reference_set_id() const;
  void set_reference_set_id(const ::std::string& value);
  void set_reference_set_id(const char* value);
  void set_reference_set_id(const char* value, size_t size);
  ::std::string* mutable_reference_set_id();
  ::std::string* release_reference_set_id();
  void set_allocated_reference_set_id(::std::string* reference_set_id);
  ::std::string* unsafe_arena_release_reference_set_id();
  void unsafe_arena_set_allocated_reference_set_id(
      ::std::string* reference_set_id);

  // string name = 7;
  void clear_name();
  static const int kNameFieldNumber = 7;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string description = 8;
  void clear_description();
  static const int kDescriptionFieldNumber = 8;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);
  ::std::string* unsafe_arena_release_description();
  void unsafe_arena_set_allocated_description(
      ::std::string* description);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.VariantSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantSetMetadata > metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReferenceBound > reference_bounds_;
  ::google::protobuf::internal::ArenaStringPtr dataset_id_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr reference_set_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class Variant : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.Variant) */ {
 public:
  Variant();
  virtual ~Variant();

  Variant(const Variant& from);

  inline Variant& operator=(const Variant& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Variant& default_instance();

  static inline const Variant* internal_default_instance() {
    return reinterpret_cast<const Variant*>(
               &_Variant_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(Variant* other);
  void Swap(Variant* other);

  // implements Message ----------------------------------------------

  inline Variant* New() const PROTOBUF_FINAL { return New(NULL); }

  Variant* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Variant& from);
  void MergeFrom(const Variant& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Variant* other);
  protected:
  explicit Variant(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated string names = 3;
  int names_size() const;
  void clear_names();
  static const int kNamesFieldNumber = 3;
  const ::std::string& names(int index) const;
  ::std::string* mutable_names(int index);
  void set_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_names(int index, ::std::string&& value);
  #endif
  void set_names(int index, const char* value);
  void set_names(int index, const char* value, size_t size);
  ::std::string* add_names();
  void add_names(const ::std::string& value);
  #if LANG_CXX11
  void add_names(::std::string&& value);
  #endif
  void add_names(const char* value);
  void add_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_names();

  // repeated string alternate_bases = 7;
  int alternate_bases_size() const;
  void clear_alternate_bases();
  static const int kAlternateBasesFieldNumber = 7;
  const ::std::string& alternate_bases(int index) const;
  ::std::string* mutable_alternate_bases(int index);
  void set_alternate_bases(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_alternate_bases(int index, ::std::string&& value);
  #endif
  void set_alternate_bases(int index, const char* value);
  void set_alternate_bases(int index, const char* value, size_t size);
  ::std::string* add_alternate_bases();
  void add_alternate_bases(const ::std::string& value);
  #if LANG_CXX11
  void add_alternate_bases(::std::string&& value);
  #endif
  void add_alternate_bases(const char* value);
  void add_alternate_bases(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& alternate_bases() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_alternate_bases();

  // repeated string filter = 9;
  int filter_size() const;
  void clear_filter();
  static const int kFilterFieldNumber = 9;
  const ::std::string& filter(int index) const;
  ::std::string* mutable_filter(int index);
  void set_filter(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_filter(int index, ::std::string&& value);
  #endif
  void set_filter(int index, const char* value);
  void set_filter(int index, const char* value, size_t size);
  ::std::string* add_filter();
  void add_filter(const ::std::string& value);
  #if LANG_CXX11
  void add_filter(::std::string&& value);
  #endif
  void add_filter(const char* value);
  void add_filter(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& filter() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_filter();

  // map<string, .google.protobuf.ListValue> info = 10;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 10;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
      mutable_info();

  // repeated .google.genomics.v1.VariantCall calls = 11;
  int calls_size() const;
  void clear_calls();
  static const int kCallsFieldNumber = 11;
  const ::google::genomics::v1::VariantCall& calls(int index) const;
  ::google::genomics::v1::VariantCall* mutable_calls(int index);
  ::google::genomics::v1::VariantCall* add_calls();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantCall >*
      mutable_calls();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantCall >&
      calls() const;

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);
  ::std::string* unsafe_arena_release_id();
  void unsafe_arena_set_allocated_id(
      ::std::string* id);

  // string reference_bases = 6;
  void clear_reference_bases();
  static const int kReferenceBasesFieldNumber = 6;
  const ::std::string& reference_bases() const;
  void set_reference_bases(const ::std::string& value);
  void set_reference_bases(const char* value);
  void set_reference_bases(const char* value, size_t size);
  ::std::string* mutable_reference_bases();
  ::std::string* release_reference_bases();
  void set_allocated_reference_bases(::std::string* reference_bases);
  ::std::string* unsafe_arena_release_reference_bases();
  void unsafe_arena_set_allocated_reference_bases(
      ::std::string* reference_bases);

  // string reference_name = 14;
  void clear_reference_name();
  static const int kReferenceNameFieldNumber = 14;
  const ::std::string& reference_name() const;
  void set_reference_name(const ::std::string& value);
  void set_reference_name(const char* value);
  void set_reference_name(const char* value, size_t size);
  ::std::string* mutable_reference_name();
  ::std::string* release_reference_name();
  void set_allocated_reference_name(::std::string* reference_name);
  ::std::string* unsafe_arena_release_reference_name();
  void unsafe_arena_set_allocated_reference_name(
      ::std::string* reference_name);

  // string variant_set_id = 15;
  void clear_variant_set_id();
  static const int kVariantSetIdFieldNumber = 15;
  const ::std::string& variant_set_id() const;
  void set_variant_set_id(const ::std::string& value);
  void set_variant_set_id(const char* value);
  void set_variant_set_id(const char* value, size_t size);
  ::std::string* mutable_variant_set_id();
  ::std::string* release_variant_set_id();
  void set_allocated_variant_set_id(::std::string* variant_set_id);
  ::std::string* unsafe_arena_release_variant_set_id();
  void unsafe_arena_set_allocated_variant_set_id(
      ::std::string* variant_set_id);

  // double quality = 8;
  void clear_quality();
  static const int kQualityFieldNumber = 8;
  double quality() const;
  void set_quality(double value);

  // int64 created = 12;
  void clear_created();
  static const int kCreatedFieldNumber = 12;
  ::google::protobuf::int64 created() const;
  void set_created(::google::protobuf::int64 value);

  // int64 end = 13;
  void clear_end();
  static const int kEndFieldNumber = 13;
  ::google::protobuf::int64 end() const;
  void set_end(::google::protobuf::int64 value);

  // int64 start = 16;
  void clear_start();
  static const int kStartFieldNumber = 16;
  ::google::protobuf::int64 start() const;
  void set_start(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.Variant)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> names_;
  ::google::protobuf::RepeatedPtrField< ::std::string> alternate_bases_;
  ::google::protobuf::RepeatedPtrField< ::std::string> filter_;
  public:
  class Variant_InfoEntry : public ::google::protobuf::internal::MapEntry<Variant_InfoEntry, 
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<Variant_InfoEntry, 
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    Variant_InfoEntry();
    Variant_InfoEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const Variant_InfoEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_Variant_InfoEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      Variant_InfoEntry,
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > info_;
  private:
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantCall > calls_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr reference_bases_;
  ::google::protobuf::internal::ArenaStringPtr reference_name_;
  ::google::protobuf::internal::ArenaStringPtr variant_set_id_;
  double quality_;
  ::google::protobuf::int64 created_;
  ::google::protobuf::int64 end_;
  ::google::protobuf::int64 start_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class VariantCall : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.VariantCall) */ {
 public:
  VariantCall();
  virtual ~VariantCall();

  VariantCall(const VariantCall& from);

  inline VariantCall& operator=(const VariantCall& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const VariantCall& default_instance();

  static inline const VariantCall* internal_default_instance() {
    return reinterpret_cast<const VariantCall*>(
               &_VariantCall_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(VariantCall* other);
  void Swap(VariantCall* other);

  // implements Message ----------------------------------------------

  inline VariantCall* New() const PROTOBUF_FINAL { return New(NULL); }

  VariantCall* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VariantCall& from);
  void MergeFrom(const VariantCall& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VariantCall* other);
  protected:
  explicit VariantCall(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .google.protobuf.ListValue> info = 2;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
      mutable_info();

  // repeated double genotype_likelihood = 6;
  int genotype_likelihood_size() const;
  void clear_genotype_likelihood();
  static const int kGenotypeLikelihoodFieldNumber = 6;
  double genotype_likelihood(int index) const;
  void set_genotype_likelihood(int index, double value);
  void add_genotype_likelihood(double value);
  const ::google::protobuf::RepeatedField< double >&
      genotype_likelihood() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_genotype_likelihood();

  // repeated int32 genotype = 7;
  int genotype_size() const;
  void clear_genotype();
  static const int kGenotypeFieldNumber = 7;
  ::google::protobuf::int32 genotype(int index) const;
  void set_genotype(int index, ::google::protobuf::int32 value);
  void add_genotype(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      genotype() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_genotype();

  // string phaseset = 5;
  void clear_phaseset();
  static const int kPhasesetFieldNumber = 5;
  const ::std::string& phaseset() const;
  void set_phaseset(const ::std::string& value);
  void set_phaseset(const char* value);
  void set_phaseset(const char* value, size_t size);
  ::std::string* mutable_phaseset();
  ::std::string* release_phaseset();
  void set_allocated_phaseset(::std::string* phaseset);
  ::std::string* unsafe_arena_release_phaseset();
  void unsafe_arena_set_allocated_phaseset(
      ::std::string* phaseset);

  // string call_set_id = 8;
  void clear_call_set_id();
  static const int kCallSetIdFieldNumber = 8;
  const ::std::string& call_set_id() const;
  void set_call_set_id(const ::std::string& value);
  void set_call_set_id(const char* value);
  void set_call_set_id(const char* value, size_t size);
  ::std::string* mutable_call_set_id();
  ::std::string* release_call_set_id();
  void set_allocated_call_set_id(::std::string* call_set_id);
  ::std::string* unsafe_arena_release_call_set_id();
  void unsafe_arena_set_allocated_call_set_id(
      ::std::string* call_set_id);

  // string call_set_name = 9;
  void clear_call_set_name();
  static const int kCallSetNameFieldNumber = 9;
  const ::std::string& call_set_name() const;
  void set_call_set_name(const ::std::string& value);
  void set_call_set_name(const char* value);
  void set_call_set_name(const char* value, size_t size);
  ::std::string* mutable_call_set_name();
  ::std::string* release_call_set_name();
  void set_allocated_call_set_name(::std::string* call_set_name);
  ::std::string* unsafe_arena_release_call_set_name();
  void unsafe_arena_set_allocated_call_set_name(
      ::std::string* call_set_name);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.VariantCall)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  public:
  class VariantCall_InfoEntry : public ::google::protobuf::internal::MapEntry<VariantCall_InfoEntry, 
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<VariantCall_InfoEntry, 
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    VariantCall_InfoEntry();
    VariantCall_InfoEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const VariantCall_InfoEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_VariantCall_InfoEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      VariantCall_InfoEntry,
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > info_;
  private:
  ::google::protobuf::RepeatedField< double > genotype_likelihood_;
  mutable int _genotype_likelihood_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > genotype_;
  mutable int _genotype_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr phaseset_;
  ::google::protobuf::internal::ArenaStringPtr call_set_id_;
  ::google::protobuf::internal::ArenaStringPtr call_set_name_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class CallSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.CallSet) */ {
 public:
  CallSet();
  virtual ~CallSet();

  CallSet(const CallSet& from);

  inline CallSet& operator=(const CallSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CallSet& default_instance();

  static inline const CallSet* internal_default_instance() {
    return reinterpret_cast<const CallSet*>(
               &_CallSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(CallSet* other);
  void Swap(CallSet* other);

  // implements Message ----------------------------------------------

  inline CallSet* New() const PROTOBUF_FINAL { return New(NULL); }

  CallSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CallSet& from);
  void MergeFrom(const CallSet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CallSet* other);
  protected:
  explicit CallSet(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .google.protobuf.ListValue> info = 4;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
      mutable_info();

  // repeated string variant_set_ids = 6;
  int variant_set_ids_size() const;
  void clear_variant_set_ids();
  static const int kVariantSetIdsFieldNumber = 6;
  const ::std::string& variant_set_ids(int index) const;
  ::std::string* mutable_variant_set_ids(int index);
  void set_variant_set_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_variant_set_ids(int index, ::std::string&& value);
  #endif
  void set_variant_set_ids(int index, const char* value);
  void set_variant_set_ids(int index, const char* value, size_t size);
  ::std::string* add_variant_set_ids();
  void add_variant_set_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_variant_set_ids(::std::string&& value);
  #endif
  void add_variant_set_ids(const char* value);
  void add_variant_set_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& variant_set_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_variant_set_ids();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);
  ::std::string* unsafe_arena_release_id();
  void unsafe_arena_set_allocated_id(
      ::std::string* id);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string sample_id = 7;
  void clear_sample_id();
  static const int kSampleIdFieldNumber = 7;
  const ::std::string& sample_id() const;
  void set_sample_id(const ::std::string& value);
  void set_sample_id(const char* value);
  void set_sample_id(const char* value, size_t size);
  ::std::string* mutable_sample_id();
  ::std::string* release_sample_id();
  void set_allocated_sample_id(::std::string* sample_id);
  ::std::string* unsafe_arena_release_sample_id();
  void unsafe_arena_set_allocated_sample_id(
      ::std::string* sample_id);

  // int64 created = 5;
  void clear_created();
  static const int kCreatedFieldNumber = 5;
  ::google::protobuf::int64 created() const;
  void set_created(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.CallSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  public:
  class CallSet_InfoEntry : public ::google::protobuf::internal::MapEntry<CallSet_InfoEntry, 
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<CallSet_InfoEntry, 
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    CallSet_InfoEntry();
    CallSet_InfoEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const CallSet_InfoEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_CallSet_InfoEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      CallSet_InfoEntry,
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > info_;
  private:
  ::google::protobuf::RepeatedPtrField< ::std::string> variant_set_ids_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr sample_id_;
  ::google::protobuf::int64 created_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReferenceBound : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.ReferenceBound) */ {
 public:
  ReferenceBound();
  virtual ~ReferenceBound();

  ReferenceBound(const ReferenceBound& from);

  inline ReferenceBound& operator=(const ReferenceBound& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReferenceBound& default_instance();

  static inline const ReferenceBound* internal_default_instance() {
    return reinterpret_cast<const ReferenceBound*>(
               &_ReferenceBound_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(ReferenceBound* other);
  void Swap(ReferenceBound* other);

  // implements Message ----------------------------------------------

  inline ReferenceBound* New() const PROTOBUF_FINAL { return New(NULL); }

  ReferenceBound* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReferenceBound& from);
  void MergeFrom(const ReferenceBound& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReferenceBound* other);
  protected:
  explicit ReferenceBound(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string reference_name = 1;
  void clear_reference_name();
  static const int kReferenceNameFieldNumber = 1;
  const ::std::string& reference_name() const;
  void set_reference_name(const ::std::string& value);
  void set_reference_name(const char* value);
  void set_reference_name(const char* value, size_t size);
  ::std::string* mutable_reference_name();
  ::std::string* release_reference_name();
  void set_allocated_reference_name(::std::string* reference_name);
  ::std::string* unsafe_arena_release_reference_name();
  void unsafe_arena_set_allocated_reference_name(
      ::std::string* reference_name);

  // int64 upper_bound = 2;
  void clear_upper_bound();
  static const int kUpperBoundFieldNumber = 2;
  ::google::protobuf::int64 upper_bound() const;
  void set_upper_bound(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.ReferenceBound)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr reference_name_;
  ::google::protobuf::int64 upper_bound_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ImportVariantsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.ImportVariantsRequest) */ {
 public:
  ImportVariantsRequest();
  virtual ~ImportVariantsRequest();

  ImportVariantsRequest(const ImportVariantsRequest& from);

  inline ImportVariantsRequest& operator=(const ImportVariantsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportVariantsRequest& default_instance();

  static inline const ImportVariantsRequest* internal_default_instance() {
    return reinterpret_cast<const ImportVariantsRequest*>(
               &_ImportVariantsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void UnsafeArenaSwap(ImportVariantsRequest* other);
  void Swap(ImportVariantsRequest* other);

  // implements Message ----------------------------------------------

  inline ImportVariantsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ImportVariantsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImportVariantsRequest& from);
  void MergeFrom(const ImportVariantsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImportVariantsRequest* other);
  protected:
  explicit ImportVariantsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef ImportVariantsRequest_Format Format;
  static const Format FORMAT_UNSPECIFIED =
    ImportVariantsRequest_Format_FORMAT_UNSPECIFIED;
  static const Format FORMAT_VCF =
    ImportVariantsRequest_Format_FORMAT_VCF;
  static const Format FORMAT_COMPLETE_GENOMICS =
    ImportVariantsRequest_Format_FORMAT_COMPLETE_GENOMICS;
  static inline bool Format_IsValid(int value) {
    return ImportVariantsRequest_Format_IsValid(value);
  }
  static const Format Format_MIN =
    ImportVariantsRequest_Format_Format_MIN;
  static const Format Format_MAX =
    ImportVariantsRequest_Format_Format_MAX;
  static const int Format_ARRAYSIZE =
    ImportVariantsRequest_Format_Format_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Format_descriptor() {
    return ImportVariantsRequest_Format_descriptor();
  }
  static inline const ::std::string& Format_Name(Format value) {
    return ImportVariantsRequest_Format_Name(value);
  }
  static inline bool Format_Parse(const ::std::string& name,
      Format* value) {
    return ImportVariantsRequest_Format_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string source_uris = 2;
  int source_uris_size() const;
  void clear_source_uris();
  static const int kSourceUrisFieldNumber = 2;
  const ::std::string& source_uris(int index) const;
  ::std::string* mutable_source_uris(int index);
  void set_source_uris(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_source_uris(int index, ::std::string&& value);
  #endif
  void set_source_uris(int index, const char* value);
  void set_source_uris(int index, const char* value, size_t size);
  ::std::string* add_source_uris();
  void add_source_uris(const ::std::string& value);
  #if LANG_CXX11
  void add_source_uris(::std::string&& value);
  #endif
  void add_source_uris(const char* value);
  void add_source_uris(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& source_uris() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_source_uris();

  // map<string, .google.genomics.v1.InfoMergeOperation> info_merge_config = 6;
  int info_merge_config_size() const;
  void clear_info_merge_config();
  static const int kInfoMergeConfigFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::google::genomics::v1::InfoMergeOperation >&
      info_merge_config() const;
  ::google::protobuf::Map< ::std::string, ::google::genomics::v1::InfoMergeOperation >*
      mutable_info_merge_config();

  // string variant_set_id = 1;
  void clear_variant_set_id();
  static const int kVariantSetIdFieldNumber = 1;
  const ::std::string& variant_set_id() const;
  void set_variant_set_id(const ::std::string& value);
  void set_variant_set_id(const char* value);
  void set_variant_set_id(const char* value, size_t size);
  ::std::string* mutable_variant_set_id();
  ::std::string* release_variant_set_id();
  void set_allocated_variant_set_id(::std::string* variant_set_id);
  ::std::string* unsafe_arena_release_variant_set_id();
  void unsafe_arena_set_allocated_variant_set_id(
      ::std::string* variant_set_id);

  // .google.genomics.v1.ImportVariantsRequest.Format format = 3;
  void clear_format();
  static const int kFormatFieldNumber = 3;
  ::google::genomics::v1::ImportVariantsRequest_Format format() const;
  void set_format(::google::genomics::v1::ImportVariantsRequest_Format value);

  // bool normalize_reference_names = 5;
  void clear_normalize_reference_names();
  static const int kNormalizeReferenceNamesFieldNumber = 5;
  bool normalize_reference_names() const;
  void set_normalize_reference_names(bool value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.ImportVariantsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> source_uris_;
  public:
  class ImportVariantsRequest_InfoMergeConfigEntry : public ::google::protobuf::internal::MapEntry<ImportVariantsRequest_InfoMergeConfigEntry, 
      ::std::string, ::google::genomics::v1::InfoMergeOperation,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ImportVariantsRequest_InfoMergeConfigEntry, 
      ::std::string, ::google::genomics::v1::InfoMergeOperation,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
      0 > SuperType;
    ImportVariantsRequest_InfoMergeConfigEntry();
    ImportVariantsRequest_InfoMergeConfigEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ImportVariantsRequest_InfoMergeConfigEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ImportVariantsRequest_InfoMergeConfigEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      ImportVariantsRequest_InfoMergeConfigEntry,
      ::std::string, ::google::genomics::v1::InfoMergeOperation,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
      0 > info_merge_config_;
  private:
  ::google::protobuf::internal::ArenaStringPtr variant_set_id_;
  int format_;
  bool normalize_reference_names_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImportVariantsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.ImportVariantsResponse) */ {
 public:
  ImportVariantsResponse();
  virtual ~ImportVariantsResponse();

  ImportVariantsResponse(const ImportVariantsResponse& from);

  inline ImportVariantsResponse& operator=(const ImportVariantsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImportVariantsResponse& default_instance();

  static inline const ImportVariantsResponse* internal_default_instance() {
    return reinterpret_cast<const ImportVariantsResponse*>(
               &_ImportVariantsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void UnsafeArenaSwap(ImportVariantsResponse* other);
  void Swap(ImportVariantsResponse* other);

  // implements Message ----------------------------------------------

  inline ImportVariantsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ImportVariantsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImportVariantsResponse& from);
  void MergeFrom(const ImportVariantsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImportVariantsResponse* other);
  protected:
  explicit ImportVariantsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string call_set_ids = 1;
  int call_set_ids_size() const;
  void clear_call_set_ids();
  static const int kCallSetIdsFieldNumber = 1;
  const ::std::string& call_set_ids(int index) const;
  ::std::string* mutable_call_set_ids(int index);
  void set_call_set_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_call_set_ids(int index, ::std::string&& value);
  #endif
  void set_call_set_ids(int index, const char* value);
  void set_call_set_ids(int index, const char* value, size_t size);
  ::std::string* add_call_set_ids();
  void add_call_set_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_call_set_ids(::std::string&& value);
  #endif
  void add_call_set_ids(const char* value);
  void add_call_set_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& call_set_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_call_set_ids();

  // @@protoc_insertion_point(class_scope:google.genomics.v1.ImportVariantsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> call_set_ids_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateVariantSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.CreateVariantSetRequest) */ {
 public:
  CreateVariantSetRequest();
  virtual ~CreateVariantSetRequest();

  CreateVariantSetRequest(const CreateVariantSetRequest& from);

  inline CreateVariantSetRequest& operator=(const CreateVariantSetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateVariantSetRequest& default_instance();

  static inline const CreateVariantSetRequest* internal_default_instance() {
    return reinterpret_cast<const CreateVariantSetRequest*>(
               &_CreateVariantSetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void UnsafeArenaSwap(CreateVariantSetRequest* other);
  void Swap(CreateVariantSetRequest* other);

  // implements Message ----------------------------------------------

  inline CreateVariantSetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateVariantSetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateVariantSetRequest& from);
  void MergeFrom(const CreateVariantSetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateVariantSetRequest* other);
  protected:
  explicit CreateVariantSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.genomics.v1.VariantSet variant_set = 1;
  bool has_variant_set() const;
  void clear_variant_set();
  static const int kVariantSetFieldNumber = 1;
  private:
  void _slow_mutable_variant_set();
  void _slow_set_allocated_variant_set(
      ::google::protobuf::Arena* message_arena, ::google::genomics::v1::VariantSet** variant_set);
  ::google::genomics::v1::VariantSet* _slow_release_variant_set();
  public:
  const ::google::genomics::v1::VariantSet& variant_set() const;
  ::google::genomics::v1::VariantSet* mutable_variant_set();
  ::google::genomics::v1::VariantSet* release_variant_set();
  void set_allocated_variant_set(::google::genomics::v1::VariantSet* variant_set);
  ::google::genomics::v1::VariantSet* unsafe_arena_release_variant_set();
  void unsafe_arena_set_allocated_variant_set(
      ::google::genomics::v1::VariantSet* variant_set);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.CreateVariantSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::genomics::v1::VariantSet* variant_set_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExportVariantSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.ExportVariantSetRequest) */ {
 public:
  ExportVariantSetRequest();
  virtual ~ExportVariantSetRequest();

  ExportVariantSetRequest(const ExportVariantSetRequest& from);

  inline ExportVariantSetRequest& operator=(const ExportVariantSetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExportVariantSetRequest& default_instance();

  static inline const ExportVariantSetRequest* internal_default_instance() {
    return reinterpret_cast<const ExportVariantSetRequest*>(
               &_ExportVariantSetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void UnsafeArenaSwap(ExportVariantSetRequest* other);
  void Swap(ExportVariantSetRequest* other);

  // implements Message ----------------------------------------------

  inline ExportVariantSetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ExportVariantSetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExportVariantSetRequest& from);
  void MergeFrom(const ExportVariantSetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExportVariantSetRequest* other);
  protected:
  explicit ExportVariantSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ExportVariantSetRequest_Format Format;
  static const Format FORMAT_UNSPECIFIED =
    ExportVariantSetRequest_Format_FORMAT_UNSPECIFIED;
  static const Format FORMAT_BIGQUERY =
    ExportVariantSetRequest_Format_FORMAT_BIGQUERY;
  static inline bool Format_IsValid(int value) {
    return ExportVariantSetRequest_Format_IsValid(value);
  }
  static const Format Format_MIN =
    ExportVariantSetRequest_Format_Format_MIN;
  static const Format Format_MAX =
    ExportVariantSetRequest_Format_Format_MAX;
  static const int Format_ARRAYSIZE =
    ExportVariantSetRequest_Format_Format_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Format_descriptor() {
    return ExportVariantSetRequest_Format_descriptor();
  }
  static inline const ::std::string& Format_Name(Format value) {
    return ExportVariantSetRequest_Format_Name(value);
  }
  static inline bool Format_Parse(const ::std::string& name,
      Format* value) {
    return ExportVariantSetRequest_Format_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string call_set_ids = 2;
  int call_set_ids_size() const;
  void clear_call_set_ids();
  static const int kCallSetIdsFieldNumber = 2;
  const ::std::string& call_set_ids(int index) const;
  ::std::string* mutable_call_set_ids(int index);
  void set_call_set_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_call_set_ids(int index, ::std::string&& value);
  #endif
  void set_call_set_ids(int index, const char* value);
  void set_call_set_ids(int index, const char* value, size_t size);
  ::std::string* add_call_set_ids();
  void add_call_set_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_call_set_ids(::std::string&& value);
  #endif
  void add_call_set_ids(const char* value);
  void add_call_set_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& call_set_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_call_set_ids();

  // string variant_set_id = 1;
  void clear_variant_set_id();
  static const int kVariantSetIdFieldNumber = 1;
  const ::std::string& variant_set_id() const;
  void set_variant_set_id(const ::std::string& value);
  void set_variant_set_id(const char* value);
  void set_variant_set_id(const char* value, size_t size);
  ::std::string* mutable_variant_set_id();
  ::std::string* release_variant_set_id();
  void set_allocated_variant_set_id(::std::string* variant_set_id);
  ::std::string* unsafe_arena_release_variant_set_id();
  void unsafe_arena_set_allocated_variant_set_id(
      ::std::string* variant_set_id);

  // string project_id = 3;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 3;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);
  ::std::string* unsafe_arena_release_project_id();
  void unsafe_arena_set_allocated_project_id(
      ::std::string* project_id);

  // string bigquery_dataset = 5;
  void clear_bigquery_dataset();
  static const int kBigqueryDatasetFieldNumber = 5;
  const ::std::string& bigquery_dataset() const;
  void set_bigquery_dataset(const ::std::string& value);
  void set_bigquery_dataset(const char* value);
  void set_bigquery_dataset(const char* value, size_t size);
  ::std::string* mutable_bigquery_dataset();
  ::std::string* release_bigquery_dataset();
  void set_allocated_bigquery_dataset(::std::string* bigquery_dataset);
  ::std::string* unsafe_arena_release_bigquery_dataset();
  void unsafe_arena_set_allocated_bigquery_dataset(
      ::std::string* bigquery_dataset);

  // string bigquery_table = 6;
  void clear_bigquery_table();
  static const int kBigqueryTableFieldNumber = 6;
  const ::std::string& bigquery_table() const;
  void set_bigquery_table(const ::std::string& value);
  void set_bigquery_table(const char* value);
  void set_bigquery_table(const char* value, size_t size);
  ::std::string* mutable_bigquery_table();
  ::std::string* release_bigquery_table();
  void set_allocated_bigquery_table(::std::string* bigquery_table);
  ::std::string* unsafe_arena_release_bigquery_table();
  void unsafe_arena_set_allocated_bigquery_table(
      ::std::string* bigquery_table);

  // .google.genomics.v1.ExportVariantSetRequest.Format format = 4;
  void clear_format();
  static const int kFormatFieldNumber = 4;
  ::google::genomics::v1::ExportVariantSetRequest_Format format() const;
  void set_format(::google::genomics::v1::ExportVariantSetRequest_Format value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.ExportVariantSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> call_set_ids_;
  ::google::protobuf::internal::ArenaStringPtr variant_set_id_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr bigquery_dataset_;
  ::google::protobuf::internal::ArenaStringPtr bigquery_table_;
  int format_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetVariantSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.GetVariantSetRequest) */ {
 public:
  GetVariantSetRequest();
  virtual ~GetVariantSetRequest();

  GetVariantSetRequest(const GetVariantSetRequest& from);

  inline GetVariantSetRequest& operator=(const GetVariantSetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVariantSetRequest& default_instance();

  static inline const GetVariantSetRequest* internal_default_instance() {
    return reinterpret_cast<const GetVariantSetRequest*>(
               &_GetVariantSetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(GetVariantSetRequest* other);
  void Swap(GetVariantSetRequest* other);

  // implements Message ----------------------------------------------

  inline GetVariantSetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVariantSetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVariantSetRequest& from);
  void MergeFrom(const GetVariantSetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVariantSetRequest* other);
  protected:
  explicit GetVariantSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string variant_set_id = 1;
  void clear_variant_set_id();
  static const int kVariantSetIdFieldNumber = 1;
  const ::std::string& variant_set_id() const;
  void set_variant_set_id(const ::std::string& value);
  void set_variant_set_id(const char* value);
  void set_variant_set_id(const char* value, size_t size);
  ::std::string* mutable_variant_set_id();
  ::std::string* release_variant_set_id();
  void set_allocated_variant_set_id(::std::string* variant_set_id);
  ::std::string* unsafe_arena_release_variant_set_id();
  void unsafe_arena_set_allocated_variant_set_id(
      ::std::string* variant_set_id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.GetVariantSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr variant_set_id_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchVariantSetsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.SearchVariantSetsRequest) */ {
 public:
  SearchVariantSetsRequest();
  virtual ~SearchVariantSetsRequest();

  SearchVariantSetsRequest(const SearchVariantSetsRequest& from);

  inline SearchVariantSetsRequest& operator=(const SearchVariantSetsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchVariantSetsRequest& default_instance();

  static inline const SearchVariantSetsRequest* internal_default_instance() {
    return reinterpret_cast<const SearchVariantSetsRequest*>(
               &_SearchVariantSetsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(SearchVariantSetsRequest* other);
  void Swap(SearchVariantSetsRequest* other);

  // implements Message ----------------------------------------------

  inline SearchVariantSetsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchVariantSetsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchVariantSetsRequest& from);
  void MergeFrom(const SearchVariantSetsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchVariantSetsRequest* other);
  protected:
  explicit SearchVariantSetsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string dataset_ids = 1;
  int dataset_ids_size() const;
  void clear_dataset_ids();
  static const int kDatasetIdsFieldNumber = 1;
  const ::std::string& dataset_ids(int index) const;
  ::std::string* mutable_dataset_ids(int index);
  void set_dataset_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_dataset_ids(int index, ::std::string&& value);
  #endif
  void set_dataset_ids(int index, const char* value);
  void set_dataset_ids(int index, const char* value, size_t size);
  ::std::string* add_dataset_ids();
  void add_dataset_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_dataset_ids(::std::string&& value);
  #endif
  void add_dataset_ids(const char* value);
  void add_dataset_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& dataset_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_dataset_ids();

  // string page_token = 2;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 2;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  ::std::string* unsafe_arena_release_page_token();
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 3;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.SearchVariantSetsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> dataset_ids_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchVariantSetsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.SearchVariantSetsResponse) */ {
 public:
  SearchVariantSetsResponse();
  virtual ~SearchVariantSetsResponse();

  SearchVariantSetsResponse(const SearchVariantSetsResponse& from);

  inline SearchVariantSetsResponse& operator=(const SearchVariantSetsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchVariantSetsResponse& default_instance();

  static inline const SearchVariantSetsResponse* internal_default_instance() {
    return reinterpret_cast<const SearchVariantSetsResponse*>(
               &_SearchVariantSetsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void UnsafeArenaSwap(SearchVariantSetsResponse* other);
  void Swap(SearchVariantSetsResponse* other);

  // implements Message ----------------------------------------------

  inline SearchVariantSetsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchVariantSetsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchVariantSetsResponse& from);
  void MergeFrom(const SearchVariantSetsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchVariantSetsResponse* other);
  protected:
  explicit SearchVariantSetsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.VariantSet variant_sets = 1;
  int variant_sets_size() const;
  void clear_variant_sets();
  static const int kVariantSetsFieldNumber = 1;
  const ::google::genomics::v1::VariantSet& variant_sets(int index) const;
  ::google::genomics::v1::VariantSet* mutable_variant_sets(int index);
  ::google::genomics::v1::VariantSet* add_variant_sets();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantSet >*
      mutable_variant_sets();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantSet >&
      variant_sets() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  ::std::string* unsafe_arena_release_next_page_token();
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.SearchVariantSetsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantSet > variant_sets_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteVariantSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.DeleteVariantSetRequest) */ {
 public:
  DeleteVariantSetRequest();
  virtual ~DeleteVariantSetRequest();

  DeleteVariantSetRequest(const DeleteVariantSetRequest& from);

  inline DeleteVariantSetRequest& operator=(const DeleteVariantSetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteVariantSetRequest& default_instance();

  static inline const DeleteVariantSetRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteVariantSetRequest*>(
               &_DeleteVariantSetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void UnsafeArenaSwap(DeleteVariantSetRequest* other);
  void Swap(DeleteVariantSetRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteVariantSetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteVariantSetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteVariantSetRequest& from);
  void MergeFrom(const DeleteVariantSetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteVariantSetRequest* other);
  protected:
  explicit DeleteVariantSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string variant_set_id = 1;
  void clear_variant_set_id();
  static const int kVariantSetIdFieldNumber = 1;
  const ::std::string& variant_set_id() const;
  void set_variant_set_id(const ::std::string& value);
  void set_variant_set_id(const char* value);
  void set_variant_set_id(const char* value, size_t size);
  ::std::string* mutable_variant_set_id();
  ::std::string* release_variant_set_id();
  void set_allocated_variant_set_id(::std::string* variant_set_id);
  ::std::string* unsafe_arena_release_variant_set_id();
  void unsafe_arena_set_allocated_variant_set_id(
      ::std::string* variant_set_id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.DeleteVariantSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr variant_set_id_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateVariantSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.UpdateVariantSetRequest) */ {
 public:
  UpdateVariantSetRequest();
  virtual ~UpdateVariantSetRequest();

  UpdateVariantSetRequest(const UpdateVariantSetRequest& from);

  inline UpdateVariantSetRequest& operator=(const UpdateVariantSetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateVariantSetRequest& default_instance();

  static inline const UpdateVariantSetRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateVariantSetRequest*>(
               &_UpdateVariantSetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void UnsafeArenaSwap(UpdateVariantSetRequest* other);
  void Swap(UpdateVariantSetRequest* other);

  // implements Message ----------------------------------------------

  inline UpdateVariantSetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateVariantSetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateVariantSetRequest& from);
  void MergeFrom(const UpdateVariantSetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateVariantSetRequest* other);
  protected:
  explicit UpdateVariantSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string variant_set_id = 1;
  void clear_variant_set_id();
  static const int kVariantSetIdFieldNumber = 1;
  const ::std::string& variant_set_id() const;
  void set_variant_set_id(const ::std::string& value);
  void set_variant_set_id(const char* value);
  void set_variant_set_id(const char* value, size_t size);
  ::std::string* mutable_variant_set_id();
  ::std::string* release_variant_set_id();
  void set_allocated_variant_set_id(::std::string* variant_set_id);
  ::std::string* unsafe_arena_release_variant_set_id();
  void unsafe_arena_set_allocated_variant_set_id(
      ::std::string* variant_set_id);

  // .google.genomics.v1.VariantSet variant_set = 2;
  bool has_variant_set() const;
  void clear_variant_set();
  static const int kVariantSetFieldNumber = 2;
  private:
  void _slow_mutable_variant_set();
  void _slow_set_allocated_variant_set(
      ::google::protobuf::Arena* message_arena, ::google::genomics::v1::VariantSet** variant_set);
  ::google::genomics::v1::VariantSet* _slow_release_variant_set();
  public:
  const ::google::genomics::v1::VariantSet& variant_set() const;
  ::google::genomics::v1::VariantSet* mutable_variant_set();
  ::google::genomics::v1::VariantSet* release_variant_set();
  void set_allocated_variant_set(::google::genomics::v1::VariantSet* variant_set);
  ::google::genomics::v1::VariantSet* unsafe_arena_release_variant_set();
  void unsafe_arena_set_allocated_variant_set(
      ::google::genomics::v1::VariantSet* variant_set);

  // .google.protobuf.FieldMask update_mask = 5;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 5;
  private:
  void _slow_mutable_update_mask();
  ::google::protobuf::FieldMask* _slow_release_update_mask();
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* mutable_update_mask();
  ::google::protobuf::FieldMask* release_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.UpdateVariantSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr variant_set_id_;
  ::google::genomics::v1::VariantSet* variant_set_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchVariantsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.SearchVariantsRequest) */ {
 public:
  SearchVariantsRequest();
  virtual ~SearchVariantsRequest();

  SearchVariantsRequest(const SearchVariantsRequest& from);

  inline SearchVariantsRequest& operator=(const SearchVariantsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchVariantsRequest& default_instance();

  static inline const SearchVariantsRequest* internal_default_instance() {
    return reinterpret_cast<const SearchVariantsRequest*>(
               &_SearchVariantsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void UnsafeArenaSwap(SearchVariantsRequest* other);
  void Swap(SearchVariantsRequest* other);

  // implements Message ----------------------------------------------

  inline SearchVariantsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchVariantsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchVariantsRequest& from);
  void MergeFrom(const SearchVariantsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchVariantsRequest* other);
  protected:
  explicit SearchVariantsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string variant_set_ids = 1;
  int variant_set_ids_size() const;
  void clear_variant_set_ids();
  static const int kVariantSetIdsFieldNumber = 1;
  const ::std::string& variant_set_ids(int index) const;
  ::std::string* mutable_variant_set_ids(int index);
  void set_variant_set_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_variant_set_ids(int index, ::std::string&& value);
  #endif
  void set_variant_set_ids(int index, const char* value);
  void set_variant_set_ids(int index, const char* value, size_t size);
  ::std::string* add_variant_set_ids();
  void add_variant_set_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_variant_set_ids(::std::string&& value);
  #endif
  void add_variant_set_ids(const char* value);
  void add_variant_set_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& variant_set_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_variant_set_ids();

  // repeated string call_set_ids = 3;
  int call_set_ids_size() const;
  void clear_call_set_ids();
  static const int kCallSetIdsFieldNumber = 3;
  const ::std::string& call_set_ids(int index) const;
  ::std::string* mutable_call_set_ids(int index);
  void set_call_set_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_call_set_ids(int index, ::std::string&& value);
  #endif
  void set_call_set_ids(int index, const char* value);
  void set_call_set_ids(int index, const char* value, size_t size);
  ::std::string* add_call_set_ids();
  void add_call_set_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_call_set_ids(::std::string&& value);
  #endif
  void add_call_set_ids(const char* value);
  void add_call_set_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& call_set_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_call_set_ids();

  // string variant_name = 2;
  void clear_variant_name();
  static const int kVariantNameFieldNumber = 2;
  const ::std::string& variant_name() const;
  void set_variant_name(const ::std::string& value);
  void set_variant_name(const char* value);
  void set_variant_name(const char* value, size_t size);
  ::std::string* mutable_variant_name();
  ::std::string* release_variant_name();
  void set_allocated_variant_name(::std::string* variant_name);
  ::std::string* unsafe_arena_release_variant_name();
  void unsafe_arena_set_allocated_variant_name(
      ::std::string* variant_name);

  // string reference_name = 4;
  void clear_reference_name();
  static const int kReferenceNameFieldNumber = 4;
  const ::std::string& reference_name() const;
  void set_reference_name(const ::std::string& value);
  void set_reference_name(const char* value);
  void set_reference_name(const char* value, size_t size);
  ::std::string* mutable_reference_name();
  ::std::string* release_reference_name();
  void set_allocated_reference_name(::std::string* reference_name);
  ::std::string* unsafe_arena_release_reference_name();
  void unsafe_arena_set_allocated_reference_name(
      ::std::string* reference_name);

  // string page_token = 7;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 7;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  ::std::string* unsafe_arena_release_page_token();
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int64 start = 5;
  void clear_start();
  static const int kStartFieldNumber = 5;
  ::google::protobuf::int64 start() const;
  void set_start(::google::protobuf::int64 value);

  // int64 end = 6;
  void clear_end();
  static const int kEndFieldNumber = 6;
  ::google::protobuf::int64 end() const;
  void set_end(::google::protobuf::int64 value);

  // int32 page_size = 8;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 8;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // int32 max_calls = 9;
  void clear_max_calls();
  static const int kMaxCallsFieldNumber = 9;
  ::google::protobuf::int32 max_calls() const;
  void set_max_calls(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.SearchVariantsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> variant_set_ids_;
  ::google::protobuf::RepeatedPtrField< ::std::string> call_set_ids_;
  ::google::protobuf::internal::ArenaStringPtr variant_name_;
  ::google::protobuf::internal::ArenaStringPtr reference_name_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int64 start_;
  ::google::protobuf::int64 end_;
  ::google::protobuf::int32 page_size_;
  ::google::protobuf::int32 max_calls_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchVariantsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.SearchVariantsResponse) */ {
 public:
  SearchVariantsResponse();
  virtual ~SearchVariantsResponse();

  SearchVariantsResponse(const SearchVariantsResponse& from);

  inline SearchVariantsResponse& operator=(const SearchVariantsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchVariantsResponse& default_instance();

  static inline const SearchVariantsResponse* internal_default_instance() {
    return reinterpret_cast<const SearchVariantsResponse*>(
               &_SearchVariantsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void UnsafeArenaSwap(SearchVariantsResponse* other);
  void Swap(SearchVariantsResponse* other);

  // implements Message ----------------------------------------------

  inline SearchVariantsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchVariantsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchVariantsResponse& from);
  void MergeFrom(const SearchVariantsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchVariantsResponse* other);
  protected:
  explicit SearchVariantsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.Variant variants = 1;
  int variants_size() const;
  void clear_variants();
  static const int kVariantsFieldNumber = 1;
  const ::google::genomics::v1::Variant& variants(int index) const;
  ::google::genomics::v1::Variant* mutable_variants(int index);
  ::google::genomics::v1::Variant* add_variants();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Variant >*
      mutable_variants();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Variant >&
      variants() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  ::std::string* unsafe_arena_release_next_page_token();
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.SearchVariantsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Variant > variants_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateVariantRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.CreateVariantRequest) */ {
 public:
  CreateVariantRequest();
  virtual ~CreateVariantRequest();

  CreateVariantRequest(const CreateVariantRequest& from);

  inline CreateVariantRequest& operator=(const CreateVariantRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateVariantRequest& default_instance();

  static inline const CreateVariantRequest* internal_default_instance() {
    return reinterpret_cast<const CreateVariantRequest*>(
               &_CreateVariantRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void UnsafeArenaSwap(CreateVariantRequest* other);
  void Swap(CreateVariantRequest* other);

  // implements Message ----------------------------------------------

  inline CreateVariantRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateVariantRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateVariantRequest& from);
  void MergeFrom(const CreateVariantRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateVariantRequest* other);
  protected:
  explicit CreateVariantRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.genomics.v1.Variant variant = 1;
  bool has_variant() const;
  void clear_variant();
  static const int kVariantFieldNumber = 1;
  private:
  void _slow_mutable_variant();
  void _slow_set_allocated_variant(
      ::google::protobuf::Arena* message_arena, ::google::genomics::v1::Variant** variant);
  ::google::genomics::v1::Variant* _slow_release_variant();
  public:
  const ::google::genomics::v1::Variant& variant() const;
  ::google::genomics::v1::Variant* mutable_variant();
  ::google::genomics::v1::Variant* release_variant();
  void set_allocated_variant(::google::genomics::v1::Variant* variant);
  ::google::genomics::v1::Variant* unsafe_arena_release_variant();
  void unsafe_arena_set_allocated_variant(
      ::google::genomics::v1::Variant* variant);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.CreateVariantRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::genomics::v1::Variant* variant_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateVariantRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.UpdateVariantRequest) */ {
 public:
  UpdateVariantRequest();
  virtual ~UpdateVariantRequest();

  UpdateVariantRequest(const UpdateVariantRequest& from);

  inline UpdateVariantRequest& operator=(const UpdateVariantRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateVariantRequest& default_instance();

  static inline const UpdateVariantRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateVariantRequest*>(
               &_UpdateVariantRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void UnsafeArenaSwap(UpdateVariantRequest* other);
  void Swap(UpdateVariantRequest* other);

  // implements Message ----------------------------------------------

  inline UpdateVariantRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateVariantRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateVariantRequest& from);
  void MergeFrom(const UpdateVariantRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateVariantRequest* other);
  protected:
  explicit UpdateVariantRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string variant_id = 1;
  void clear_variant_id();
  static const int kVariantIdFieldNumber = 1;
  const ::std::string& variant_id() const;
  void set_variant_id(const ::std::string& value);
  void set_variant_id(const char* value);
  void set_variant_id(const char* value, size_t size);
  ::std::string* mutable_variant_id();
  ::std::string* release_variant_id();
  void set_allocated_variant_id(::std::string* variant_id);
  ::std::string* unsafe_arena_release_variant_id();
  void unsafe_arena_set_allocated_variant_id(
      ::std::string* variant_id);

  // .google.genomics.v1.Variant variant = 2;
  bool has_variant() const;
  void clear_variant();
  static const int kVariantFieldNumber = 2;
  private:
  void _slow_mutable_variant();
  void _slow_set_allocated_variant(
      ::google::protobuf::Arena* message_arena, ::google::genomics::v1::Variant** variant);
  ::google::genomics::v1::Variant* _slow_release_variant();
  public:
  const ::google::genomics::v1::Variant& variant() const;
  ::google::genomics::v1::Variant* mutable_variant();
  ::google::genomics::v1::Variant* release_variant();
  void set_allocated_variant(::google::genomics::v1::Variant* variant);
  ::google::genomics::v1::Variant* unsafe_arena_release_variant();
  void unsafe_arena_set_allocated_variant(
      ::google::genomics::v1::Variant* variant);

  // .google.protobuf.FieldMask update_mask = 3;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 3;
  private:
  void _slow_mutable_update_mask();
  ::google::protobuf::FieldMask* _slow_release_update_mask();
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* mutable_update_mask();
  ::google::protobuf::FieldMask* release_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.UpdateVariantRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr variant_id_;
  ::google::genomics::v1::Variant* variant_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteVariantRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.DeleteVariantRequest) */ {
 public:
  DeleteVariantRequest();
  virtual ~DeleteVariantRequest();

  DeleteVariantRequest(const DeleteVariantRequest& from);

  inline DeleteVariantRequest& operator=(const DeleteVariantRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteVariantRequest& default_instance();

  static inline const DeleteVariantRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteVariantRequest*>(
               &_DeleteVariantRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void UnsafeArenaSwap(DeleteVariantRequest* other);
  void Swap(DeleteVariantRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteVariantRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteVariantRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteVariantRequest& from);
  void MergeFrom(const DeleteVariantRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteVariantRequest* other);
  protected:
  explicit DeleteVariantRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string variant_id = 1;
  void clear_variant_id();
  static const int kVariantIdFieldNumber = 1;
  const ::std::string& variant_id() const;
  void set_variant_id(const ::std::string& value);
  void set_variant_id(const char* value);
  void set_variant_id(const char* value, size_t size);
  ::std::string* mutable_variant_id();
  ::std::string* release_variant_id();
  void set_allocated_variant_id(::std::string* variant_id);
  ::std::string* unsafe_arena_release_variant_id();
  void unsafe_arena_set_allocated_variant_id(
      ::std::string* variant_id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.DeleteVariantRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr variant_id_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetVariantRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.GetVariantRequest) */ {
 public:
  GetVariantRequest();
  virtual ~GetVariantRequest();

  GetVariantRequest(const GetVariantRequest& from);

  inline GetVariantRequest& operator=(const GetVariantRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVariantRequest& default_instance();

  static inline const GetVariantRequest* internal_default_instance() {
    return reinterpret_cast<const GetVariantRequest*>(
               &_GetVariantRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void UnsafeArenaSwap(GetVariantRequest* other);
  void Swap(GetVariantRequest* other);

  // implements Message ----------------------------------------------

  inline GetVariantRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVariantRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVariantRequest& from);
  void MergeFrom(const GetVariantRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVariantRequest* other);
  protected:
  explicit GetVariantRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string variant_id = 1;
  void clear_variant_id();
  static const int kVariantIdFieldNumber = 1;
  const ::std::string& variant_id() const;
  void set_variant_id(const ::std::string& value);
  void set_variant_id(const char* value);
  void set_variant_id(const char* value, size_t size);
  ::std::string* mutable_variant_id();
  ::std::string* release_variant_id();
  void set_allocated_variant_id(::std::string* variant_id);
  ::std::string* unsafe_arena_release_variant_id();
  void unsafe_arena_set_allocated_variant_id(
      ::std::string* variant_id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.GetVariantRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr variant_id_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class MergeVariantsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.MergeVariantsRequest) */ {
 public:
  MergeVariantsRequest();
  virtual ~MergeVariantsRequest();

  MergeVariantsRequest(const MergeVariantsRequest& from);

  inline MergeVariantsRequest& operator=(const MergeVariantsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const MergeVariantsRequest& default_instance();

  static inline const MergeVariantsRequest* internal_default_instance() {
    return reinterpret_cast<const MergeVariantsRequest*>(
               &_MergeVariantsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void UnsafeArenaSwap(MergeVariantsRequest* other);
  void Swap(MergeVariantsRequest* other);

  // implements Message ----------------------------------------------

  inline MergeVariantsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  MergeVariantsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MergeVariantsRequest& from);
  void MergeFrom(const MergeVariantsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MergeVariantsRequest* other);
  protected:
  explicit MergeVariantsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.Variant variants = 2;
  int variants_size() const;
  void clear_variants();
  static const int kVariantsFieldNumber = 2;
  const ::google::genomics::v1::Variant& variants(int index) const;
  ::google::genomics::v1::Variant* mutable_variants(int index);
  ::google::genomics::v1::Variant* add_variants();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Variant >*
      mutable_variants();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Variant >&
      variants() const;

  // map<string, .google.genomics.v1.InfoMergeOperation> info_merge_config = 3;
  int info_merge_config_size() const;
  void clear_info_merge_config();
  static const int kInfoMergeConfigFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::google::genomics::v1::InfoMergeOperation >&
      info_merge_config() const;
  ::google::protobuf::Map< ::std::string, ::google::genomics::v1::InfoMergeOperation >*
      mutable_info_merge_config();

  // string variant_set_id = 1;
  void clear_variant_set_id();
  static const int kVariantSetIdFieldNumber = 1;
  const ::std::string& variant_set_id() const;
  void set_variant_set_id(const ::std::string& value);
  void set_variant_set_id(const char* value);
  void set_variant_set_id(const char* value, size_t size);
  ::std::string* mutable_variant_set_id();
  ::std::string* release_variant_set_id();
  void set_allocated_variant_set_id(::std::string* variant_set_id);
  ::std::string* unsafe_arena_release_variant_set_id();
  void unsafe_arena_set_allocated_variant_set_id(
      ::std::string* variant_set_id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.MergeVariantsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Variant > variants_;
  public:
  class MergeVariantsRequest_InfoMergeConfigEntry : public ::google::protobuf::internal::MapEntry<MergeVariantsRequest_InfoMergeConfigEntry, 
      ::std::string, ::google::genomics::v1::InfoMergeOperation,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<MergeVariantsRequest_InfoMergeConfigEntry, 
      ::std::string, ::google::genomics::v1::InfoMergeOperation,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
      0 > SuperType;
    MergeVariantsRequest_InfoMergeConfigEntry();
    MergeVariantsRequest_InfoMergeConfigEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const MergeVariantsRequest_InfoMergeConfigEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_MergeVariantsRequest_InfoMergeConfigEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      MergeVariantsRequest_InfoMergeConfigEntry,
      ::std::string, ::google::genomics::v1::InfoMergeOperation,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM,
      0 > info_merge_config_;
  private:
  ::google::protobuf::internal::ArenaStringPtr variant_set_id_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchCallSetsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.SearchCallSetsRequest) */ {
 public:
  SearchCallSetsRequest();
  virtual ~SearchCallSetsRequest();

  SearchCallSetsRequest(const SearchCallSetsRequest& from);

  inline SearchCallSetsRequest& operator=(const SearchCallSetsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchCallSetsRequest& default_instance();

  static inline const SearchCallSetsRequest* internal_default_instance() {
    return reinterpret_cast<const SearchCallSetsRequest*>(
               &_SearchCallSetsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void UnsafeArenaSwap(SearchCallSetsRequest* other);
  void Swap(SearchCallSetsRequest* other);

  // implements Message ----------------------------------------------

  inline SearchCallSetsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchCallSetsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchCallSetsRequest& from);
  void MergeFrom(const SearchCallSetsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchCallSetsRequest* other);
  protected:
  explicit SearchCallSetsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string variant_set_ids = 1;
  int variant_set_ids_size() const;
  void clear_variant_set_ids();
  static const int kVariantSetIdsFieldNumber = 1;
  const ::std::string& variant_set_ids(int index) const;
  ::std::string* mutable_variant_set_ids(int index);
  void set_variant_set_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_variant_set_ids(int index, ::std::string&& value);
  #endif
  void set_variant_set_ids(int index, const char* value);
  void set_variant_set_ids(int index, const char* value, size_t size);
  ::std::string* add_variant_set_ids();
  void add_variant_set_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_variant_set_ids(::std::string&& value);
  #endif
  void add_variant_set_ids(const char* value);
  void add_variant_set_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& variant_set_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_variant_set_ids();

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string page_token = 3;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 3;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);
  ::std::string* unsafe_arena_release_page_token();
  void unsafe_arena_set_allocated_page_token(
      ::std::string* page_token);

  // int32 page_size = 4;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 4;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.SearchCallSetsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> variant_set_ids_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchCallSetsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.SearchCallSetsResponse) */ {
 public:
  SearchCallSetsResponse();
  virtual ~SearchCallSetsResponse();

  SearchCallSetsResponse(const SearchCallSetsResponse& from);

  inline SearchCallSetsResponse& operator=(const SearchCallSetsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchCallSetsResponse& default_instance();

  static inline const SearchCallSetsResponse* internal_default_instance() {
    return reinterpret_cast<const SearchCallSetsResponse*>(
               &_SearchCallSetsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void UnsafeArenaSwap(SearchCallSetsResponse* other);
  void Swap(SearchCallSetsResponse* other);

  // implements Message ----------------------------------------------

  inline SearchCallSetsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchCallSetsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchCallSetsResponse& from);
  void MergeFrom(const SearchCallSetsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchCallSetsResponse* other);
  protected:
  explicit SearchCallSetsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.CallSet call_sets = 1;
  int call_sets_size() const;
  void clear_call_sets();
  static const int kCallSetsFieldNumber = 1;
  const ::google::genomics::v1::CallSet& call_sets(int index) const;
  ::google::genomics::v1::CallSet* mutable_call_sets(int index);
  ::google::genomics::v1::CallSet* add_call_sets();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::CallSet >*
      mutable_call_sets();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::CallSet >&
      call_sets() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);
  ::std::string* unsafe_arena_release_next_page_token();
  void unsafe_arena_set_allocated_next_page_token(
      ::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.SearchCallSetsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::CallSet > call_sets_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateCallSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.CreateCallSetRequest) */ {
 public:
  CreateCallSetRequest();
  virtual ~CreateCallSetRequest();

  CreateCallSetRequest(const CreateCallSetRequest& from);

  inline CreateCallSetRequest& operator=(const CreateCallSetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateCallSetRequest& default_instance();

  static inline const CreateCallSetRequest* internal_default_instance() {
    return reinterpret_cast<const CreateCallSetRequest*>(
               &_CreateCallSetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void UnsafeArenaSwap(CreateCallSetRequest* other);
  void Swap(CreateCallSetRequest* other);

  // implements Message ----------------------------------------------

  inline CreateCallSetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateCallSetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateCallSetRequest& from);
  void MergeFrom(const CreateCallSetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateCallSetRequest* other);
  protected:
  explicit CreateCallSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.genomics.v1.CallSet call_set = 1;
  bool has_call_set() const;
  void clear_call_set();
  static const int kCallSetFieldNumber = 1;
  private:
  void _slow_mutable_call_set();
  void _slow_set_allocated_call_set(
      ::google::protobuf::Arena* message_arena, ::google::genomics::v1::CallSet** call_set);
  ::google::genomics::v1::CallSet* _slow_release_call_set();
  public:
  const ::google::genomics::v1::CallSet& call_set() const;
  ::google::genomics::v1::CallSet* mutable_call_set();
  ::google::genomics::v1::CallSet* release_call_set();
  void set_allocated_call_set(::google::genomics::v1::CallSet* call_set);
  ::google::genomics::v1::CallSet* unsafe_arena_release_call_set();
  void unsafe_arena_set_allocated_call_set(
      ::google::genomics::v1::CallSet* call_set);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.CreateCallSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::genomics::v1::CallSet* call_set_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateCallSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.UpdateCallSetRequest) */ {
 public:
  UpdateCallSetRequest();
  virtual ~UpdateCallSetRequest();

  UpdateCallSetRequest(const UpdateCallSetRequest& from);

  inline UpdateCallSetRequest& operator=(const UpdateCallSetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateCallSetRequest& default_instance();

  static inline const UpdateCallSetRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateCallSetRequest*>(
               &_UpdateCallSetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void UnsafeArenaSwap(UpdateCallSetRequest* other);
  void Swap(UpdateCallSetRequest* other);

  // implements Message ----------------------------------------------

  inline UpdateCallSetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateCallSetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateCallSetRequest& from);
  void MergeFrom(const UpdateCallSetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateCallSetRequest* other);
  protected:
  explicit UpdateCallSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string call_set_id = 1;
  void clear_call_set_id();
  static const int kCallSetIdFieldNumber = 1;
  const ::std::string& call_set_id() const;
  void set_call_set_id(const ::std::string& value);
  void set_call_set_id(const char* value);
  void set_call_set_id(const char* value, size_t size);
  ::std::string* mutable_call_set_id();
  ::std::string* release_call_set_id();
  void set_allocated_call_set_id(::std::string* call_set_id);
  ::std::string* unsafe_arena_release_call_set_id();
  void unsafe_arena_set_allocated_call_set_id(
      ::std::string* call_set_id);

  // .google.genomics.v1.CallSet call_set = 2;
  bool has_call_set() const;
  void clear_call_set();
  static const int kCallSetFieldNumber = 2;
  private:
  void _slow_mutable_call_set();
  void _slow_set_allocated_call_set(
      ::google::protobuf::Arena* message_arena, ::google::genomics::v1::CallSet** call_set);
  ::google::genomics::v1::CallSet* _slow_release_call_set();
  public:
  const ::google::genomics::v1::CallSet& call_set() const;
  ::google::genomics::v1::CallSet* mutable_call_set();
  ::google::genomics::v1::CallSet* release_call_set();
  void set_allocated_call_set(::google::genomics::v1::CallSet* call_set);
  ::google::genomics::v1::CallSet* unsafe_arena_release_call_set();
  void unsafe_arena_set_allocated_call_set(
      ::google::genomics::v1::CallSet* call_set);

  // .google.protobuf.FieldMask update_mask = 3;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 3;
  private:
  void _slow_mutable_update_mask();
  ::google::protobuf::FieldMask* _slow_release_update_mask();
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* mutable_update_mask();
  ::google::protobuf::FieldMask* release_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);
  ::google::protobuf::FieldMask* unsafe_arena_release_update_mask();
  void unsafe_arena_set_allocated_update_mask(
      ::google::protobuf::FieldMask* update_mask);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.UpdateCallSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr call_set_id_;
  ::google::genomics::v1::CallSet* call_set_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteCallSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.DeleteCallSetRequest) */ {
 public:
  DeleteCallSetRequest();
  virtual ~DeleteCallSetRequest();

  DeleteCallSetRequest(const DeleteCallSetRequest& from);

  inline DeleteCallSetRequest& operator=(const DeleteCallSetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteCallSetRequest& default_instance();

  static inline const DeleteCallSetRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteCallSetRequest*>(
               &_DeleteCallSetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void UnsafeArenaSwap(DeleteCallSetRequest* other);
  void Swap(DeleteCallSetRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteCallSetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteCallSetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteCallSetRequest& from);
  void MergeFrom(const DeleteCallSetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteCallSetRequest* other);
  protected:
  explicit DeleteCallSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string call_set_id = 1;
  void clear_call_set_id();
  static const int kCallSetIdFieldNumber = 1;
  const ::std::string& call_set_id() const;
  void set_call_set_id(const ::std::string& value);
  void set_call_set_id(const char* value);
  void set_call_set_id(const char* value, size_t size);
  ::std::string* mutable_call_set_id();
  ::std::string* release_call_set_id();
  void set_allocated_call_set_id(::std::string* call_set_id);
  ::std::string* unsafe_arena_release_call_set_id();
  void unsafe_arena_set_allocated_call_set_id(
      ::std::string* call_set_id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.DeleteCallSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr call_set_id_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCallSetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.GetCallSetRequest) */ {
 public:
  GetCallSetRequest();
  virtual ~GetCallSetRequest();

  GetCallSetRequest(const GetCallSetRequest& from);

  inline GetCallSetRequest& operator=(const GetCallSetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCallSetRequest& default_instance();

  static inline const GetCallSetRequest* internal_default_instance() {
    return reinterpret_cast<const GetCallSetRequest*>(
               &_GetCallSetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void UnsafeArenaSwap(GetCallSetRequest* other);
  void Swap(GetCallSetRequest* other);

  // implements Message ----------------------------------------------

  inline GetCallSetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCallSetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCallSetRequest& from);
  void MergeFrom(const GetCallSetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCallSetRequest* other);
  protected:
  explicit GetCallSetRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string call_set_id = 1;
  void clear_call_set_id();
  static const int kCallSetIdFieldNumber = 1;
  const ::std::string& call_set_id() const;
  void set_call_set_id(const ::std::string& value);
  void set_call_set_id(const char* value);
  void set_call_set_id(const char* value, size_t size);
  ::std::string* mutable_call_set_id();
  ::std::string* release_call_set_id();
  void set_allocated_call_set_id(::std::string* call_set_id);
  ::std::string* unsafe_arena_release_call_set_id();
  void unsafe_arena_set_allocated_call_set_id(
      ::std::string* call_set_id);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.GetCallSetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr call_set_id_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StreamVariantsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.StreamVariantsRequest) */ {
 public:
  StreamVariantsRequest();
  virtual ~StreamVariantsRequest();

  StreamVariantsRequest(const StreamVariantsRequest& from);

  inline StreamVariantsRequest& operator=(const StreamVariantsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamVariantsRequest& default_instance();

  static inline const StreamVariantsRequest* internal_default_instance() {
    return reinterpret_cast<const StreamVariantsRequest*>(
               &_StreamVariantsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void UnsafeArenaSwap(StreamVariantsRequest* other);
  void Swap(StreamVariantsRequest* other);

  // implements Message ----------------------------------------------

  inline StreamVariantsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  StreamVariantsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StreamVariantsRequest& from);
  void MergeFrom(const StreamVariantsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StreamVariantsRequest* other);
  protected:
  explicit StreamVariantsRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string call_set_ids = 3;
  int call_set_ids_size() const;
  void clear_call_set_ids();
  static const int kCallSetIdsFieldNumber = 3;
  const ::std::string& call_set_ids(int index) const;
  ::std::string* mutable_call_set_ids(int index);
  void set_call_set_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_call_set_ids(int index, ::std::string&& value);
  #endif
  void set_call_set_ids(int index, const char* value);
  void set_call_set_ids(int index, const char* value, size_t size);
  ::std::string* add_call_set_ids();
  void add_call_set_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_call_set_ids(::std::string&& value);
  #endif
  void add_call_set_ids(const char* value);
  void add_call_set_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& call_set_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_call_set_ids();

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);
  ::std::string* unsafe_arena_release_project_id();
  void unsafe_arena_set_allocated_project_id(
      ::std::string* project_id);

  // string variant_set_id = 2;
  void clear_variant_set_id();
  static const int kVariantSetIdFieldNumber = 2;
  const ::std::string& variant_set_id() const;
  void set_variant_set_id(const ::std::string& value);
  void set_variant_set_id(const char* value);
  void set_variant_set_id(const char* value, size_t size);
  ::std::string* mutable_variant_set_id();
  ::std::string* release_variant_set_id();
  void set_allocated_variant_set_id(::std::string* variant_set_id);
  ::std::string* unsafe_arena_release_variant_set_id();
  void unsafe_arena_set_allocated_variant_set_id(
      ::std::string* variant_set_id);

  // string reference_name = 4;
  void clear_reference_name();
  static const int kReferenceNameFieldNumber = 4;
  const ::std::string& reference_name() const;
  void set_reference_name(const ::std::string& value);
  void set_reference_name(const char* value);
  void set_reference_name(const char* value, size_t size);
  ::std::string* mutable_reference_name();
  ::std::string* release_reference_name();
  void set_allocated_reference_name(::std::string* reference_name);
  ::std::string* unsafe_arena_release_reference_name();
  void unsafe_arena_set_allocated_reference_name(
      ::std::string* reference_name);

  // int64 start = 5;
  void clear_start();
  static const int kStartFieldNumber = 5;
  ::google::protobuf::int64 start() const;
  void set_start(::google::protobuf::int64 value);

  // int64 end = 6;
  void clear_end();
  static const int kEndFieldNumber = 6;
  ::google::protobuf::int64 end() const;
  void set_end(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.StreamVariantsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> call_set_ids_;
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr variant_set_id_;
  ::google::protobuf::internal::ArenaStringPtr reference_name_;
  ::google::protobuf::int64 start_;
  ::google::protobuf::int64 end_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StreamVariantsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.StreamVariantsResponse) */ {
 public:
  StreamVariantsResponse();
  virtual ~StreamVariantsResponse();

  StreamVariantsResponse(const StreamVariantsResponse& from);

  inline StreamVariantsResponse& operator=(const StreamVariantsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const StreamVariantsResponse& default_instance();

  static inline const StreamVariantsResponse* internal_default_instance() {
    return reinterpret_cast<const StreamVariantsResponse*>(
               &_StreamVariantsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void UnsafeArenaSwap(StreamVariantsResponse* other);
  void Swap(StreamVariantsResponse* other);

  // implements Message ----------------------------------------------

  inline StreamVariantsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  StreamVariantsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StreamVariantsResponse& from);
  void MergeFrom(const StreamVariantsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StreamVariantsResponse* other);
  protected:
  explicit StreamVariantsResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.Variant variants = 1;
  int variants_size() const;
  void clear_variants();
  static const int kVariantsFieldNumber = 1;
  const ::google::genomics::v1::Variant& variants(int index) const;
  ::google::genomics::v1::Variant* mutable_variants(int index);
  ::google::genomics::v1::Variant* add_variants();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Variant >*
      mutable_variants();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Variant >&
      variants() const;

  // @@protoc_insertion_point(class_scope:google.genomics.v1.StreamVariantsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Variant > variants_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2fvariants_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// VariantSetMetadata

// string key = 1;
inline void VariantSetMetadata::clear_key() {
  key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantSetMetadata::key() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantSetMetadata.key)
  return key_.Get();
}
inline void VariantSetMetadata::set_key(const ::std::string& value) {
  
  key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantSetMetadata.key)
}
inline void VariantSetMetadata::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantSetMetadata.key)
}
inline void VariantSetMetadata::set_key(const char* value,
    size_t size) {
  
  key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantSetMetadata.key)
}
inline ::std::string* VariantSetMetadata::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantSetMetadata.key)
  return key_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSetMetadata::release_key() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantSetMetadata.key)
  
  return key_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSetMetadata::unsafe_arena_release_key() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantSetMetadata.key)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return key_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantSetMetadata::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantSetMetadata.key)
}
inline void VariantSetMetadata::unsafe_arena_set_allocated_key(
    ::std::string* key) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (key != NULL) {
    
  } else {
    
  }
  key_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      key, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantSetMetadata.key)
}

// string value = 2;
inline void VariantSetMetadata::clear_value() {
  value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantSetMetadata::value() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantSetMetadata.value)
  return value_.Get();
}
inline void VariantSetMetadata::set_value(const ::std::string& value) {
  
  value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantSetMetadata.value)
}
inline void VariantSetMetadata::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantSetMetadata.value)
}
inline void VariantSetMetadata::set_value(const char* value,
    size_t size) {
  
  value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantSetMetadata.value)
}
inline ::std::string* VariantSetMetadata::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantSetMetadata.value)
  return value_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSetMetadata::release_value() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantSetMetadata.value)
  
  return value_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSetMetadata::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantSetMetadata.value)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return value_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantSetMetadata::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantSetMetadata.value)
}
inline void VariantSetMetadata::unsafe_arena_set_allocated_value(
    ::std::string* value) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (value != NULL) {
    
  } else {
    
  }
  value_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantSetMetadata.value)
}

// string id = 4;
inline void VariantSetMetadata::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantSetMetadata::id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantSetMetadata.id)
  return id_.Get();
}
inline void VariantSetMetadata::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantSetMetadata.id)
}
inline void VariantSetMetadata::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantSetMetadata.id)
}
inline void VariantSetMetadata::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantSetMetadata.id)
}
inline ::std::string* VariantSetMetadata::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantSetMetadata.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSetMetadata::release_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantSetMetadata.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSetMetadata::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantSetMetadata.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantSetMetadata::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantSetMetadata.id)
}
inline void VariantSetMetadata::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantSetMetadata.id)
}

// .google.genomics.v1.VariantSetMetadata.Type type = 5;
inline void VariantSetMetadata::clear_type() {
  type_ = 0;
}
inline ::google::genomics::v1::VariantSetMetadata_Type VariantSetMetadata::type() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantSetMetadata.type)
  return static_cast< ::google::genomics::v1::VariantSetMetadata_Type >(type_);
}
inline void VariantSetMetadata::set_type(::google::genomics::v1::VariantSetMetadata_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantSetMetadata.type)
}

// string number = 8;
inline void VariantSetMetadata::clear_number() {
  number_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantSetMetadata::number() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantSetMetadata.number)
  return number_.Get();
}
inline void VariantSetMetadata::set_number(const ::std::string& value) {
  
  number_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantSetMetadata.number)
}
inline void VariantSetMetadata::set_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  number_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantSetMetadata.number)
}
inline void VariantSetMetadata::set_number(const char* value,
    size_t size) {
  
  number_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantSetMetadata.number)
}
inline ::std::string* VariantSetMetadata::mutable_number() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantSetMetadata.number)
  return number_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSetMetadata::release_number() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantSetMetadata.number)
  
  return number_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSetMetadata::unsafe_arena_release_number() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantSetMetadata.number)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return number_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantSetMetadata::set_allocated_number(::std::string* number) {
  if (number != NULL) {
    
  } else {
    
  }
  number_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), number,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantSetMetadata.number)
}
inline void VariantSetMetadata::unsafe_arena_set_allocated_number(
    ::std::string* number) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (number != NULL) {
    
  } else {
    
  }
  number_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      number, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantSetMetadata.number)
}

// string description = 7;
inline void VariantSetMetadata::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantSetMetadata::description() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantSetMetadata.description)
  return description_.Get();
}
inline void VariantSetMetadata::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantSetMetadata.description)
}
inline void VariantSetMetadata::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantSetMetadata.description)
}
inline void VariantSetMetadata::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantSetMetadata.description)
}
inline ::std::string* VariantSetMetadata::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantSetMetadata.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSetMetadata::release_description() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantSetMetadata.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSetMetadata::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantSetMetadata.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantSetMetadata::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantSetMetadata.description)
}
inline void VariantSetMetadata::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantSetMetadata.description)
}

// map<string, .google.protobuf.ListValue> info = 3;
inline int VariantSetMetadata::info_size() const {
  return info_.size();
}
inline void VariantSetMetadata::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
VariantSetMetadata::info() const {
  // @@protoc_insertion_point(field_map:google.genomics.v1.VariantSetMetadata.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
VariantSetMetadata::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:google.genomics.v1.VariantSetMetadata.info)
  return info_.MutableMap();
}

// -------------------------------------------------------------------

// VariantSet

// string dataset_id = 1;
inline void VariantSet::clear_dataset_id() {
  dataset_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantSet::dataset_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantSet.dataset_id)
  return dataset_id_.Get();
}
inline void VariantSet::set_dataset_id(const ::std::string& value) {
  
  dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantSet.dataset_id)
}
inline void VariantSet::set_dataset_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantSet.dataset_id)
}
inline void VariantSet::set_dataset_id(const char* value,
    size_t size) {
  
  dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantSet.dataset_id)
}
inline ::std::string* VariantSet::mutable_dataset_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantSet.dataset_id)
  return dataset_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSet::release_dataset_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantSet.dataset_id)
  
  return dataset_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSet::unsafe_arena_release_dataset_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantSet.dataset_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return dataset_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantSet::set_allocated_dataset_id(::std::string* dataset_id) {
  if (dataset_id != NULL) {
    
  } else {
    
  }
  dataset_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataset_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantSet.dataset_id)
}
inline void VariantSet::unsafe_arena_set_allocated_dataset_id(
    ::std::string* dataset_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (dataset_id != NULL) {
    
  } else {
    
  }
  dataset_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      dataset_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantSet.dataset_id)
}

// string id = 2;
inline void VariantSet::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantSet::id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantSet.id)
  return id_.Get();
}
inline void VariantSet::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantSet.id)
}
inline void VariantSet::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantSet.id)
}
inline void VariantSet::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantSet.id)
}
inline ::std::string* VariantSet::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantSet.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSet::release_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantSet.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSet::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantSet.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantSet::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantSet.id)
}
inline void VariantSet::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantSet.id)
}

// string reference_set_id = 6;
inline void VariantSet::clear_reference_set_id() {
  reference_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantSet::reference_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantSet.reference_set_id)
  return reference_set_id_.Get();
}
inline void VariantSet::set_reference_set_id(const ::std::string& value) {
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantSet.reference_set_id)
}
inline void VariantSet::set_reference_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantSet.reference_set_id)
}
inline void VariantSet::set_reference_set_id(const char* value,
    size_t size) {
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantSet.reference_set_id)
}
inline ::std::string* VariantSet::mutable_reference_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantSet.reference_set_id)
  return reference_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSet::release_reference_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantSet.reference_set_id)
  
  return reference_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSet::unsafe_arena_release_reference_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantSet.reference_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantSet::set_allocated_reference_set_id(::std::string* reference_set_id) {
  if (reference_set_id != NULL) {
    
  } else {
    
  }
  reference_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantSet.reference_set_id)
}
inline void VariantSet::unsafe_arena_set_allocated_reference_set_id(
    ::std::string* reference_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_set_id != NULL) {
    
  } else {
    
  }
  reference_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantSet.reference_set_id)
}

// repeated .google.genomics.v1.ReferenceBound reference_bounds = 5;
inline int VariantSet::reference_bounds_size() const {
  return reference_bounds_.size();
}
inline void VariantSet::clear_reference_bounds() {
  reference_bounds_.Clear();
}
inline const ::google::genomics::v1::ReferenceBound& VariantSet::reference_bounds(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantSet.reference_bounds)
  return reference_bounds_.Get(index);
}
inline ::google::genomics::v1::ReferenceBound* VariantSet::mutable_reference_bounds(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantSet.reference_bounds)
  return reference_bounds_.Mutable(index);
}
inline ::google::genomics::v1::ReferenceBound* VariantSet::add_reference_bounds() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.VariantSet.reference_bounds)
  return reference_bounds_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReferenceBound >*
VariantSet::mutable_reference_bounds() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.VariantSet.reference_bounds)
  return &reference_bounds_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReferenceBound >&
VariantSet::reference_bounds() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.VariantSet.reference_bounds)
  return reference_bounds_;
}

// repeated .google.genomics.v1.VariantSetMetadata metadata = 4;
inline int VariantSet::metadata_size() const {
  return metadata_.size();
}
inline void VariantSet::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::genomics::v1::VariantSetMetadata& VariantSet::metadata(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantSet.metadata)
  return metadata_.Get(index);
}
inline ::google::genomics::v1::VariantSetMetadata* VariantSet::mutable_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantSet.metadata)
  return metadata_.Mutable(index);
}
inline ::google::genomics::v1::VariantSetMetadata* VariantSet::add_metadata() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.VariantSet.metadata)
  return metadata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantSetMetadata >*
VariantSet::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.VariantSet.metadata)
  return &metadata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantSetMetadata >&
VariantSet::metadata() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.VariantSet.metadata)
  return metadata_;
}

// string name = 7;
inline void VariantSet::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantSet::name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantSet.name)
  return name_.Get();
}
inline void VariantSet::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantSet.name)
}
inline void VariantSet::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantSet.name)
}
inline void VariantSet::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantSet.name)
}
inline ::std::string* VariantSet::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantSet.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSet::release_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantSet.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSet::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantSet.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantSet::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantSet.name)
}
inline void VariantSet::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantSet.name)
}

// string description = 8;
inline void VariantSet::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantSet::description() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantSet.description)
  return description_.Get();
}
inline void VariantSet::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantSet.description)
}
inline void VariantSet::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantSet.description)
}
inline void VariantSet::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantSet.description)
}
inline ::std::string* VariantSet::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantSet.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSet::release_description() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantSet.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantSet::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantSet.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantSet::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantSet.description)
}
inline void VariantSet::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantSet.description)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Variant

// string variant_set_id = 15;
inline void Variant::clear_variant_set_id() {
  variant_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Variant::variant_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Variant.variant_set_id)
  return variant_set_id_.Get();
}
inline void Variant::set_variant_set_id(const ::std::string& value) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.Variant.variant_set_id)
}
inline void Variant::set_variant_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Variant.variant_set_id)
}
inline void Variant::set_variant_set_id(const char* value,
    size_t size) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Variant.variant_set_id)
}
inline ::std::string* Variant::mutable_variant_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Variant.variant_set_id)
  return variant_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variant::release_variant_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Variant.variant_set_id)
  
  return variant_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variant::unsafe_arena_release_variant_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Variant.variant_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return variant_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Variant::set_allocated_variant_set_id(::std::string* variant_set_id) {
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variant_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Variant.variant_set_id)
}
inline void Variant::unsafe_arena_set_allocated_variant_set_id(
    ::std::string* variant_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      variant_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Variant.variant_set_id)
}

// string id = 2;
inline void Variant::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Variant::id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Variant.id)
  return id_.Get();
}
inline void Variant::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.Variant.id)
}
inline void Variant::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Variant.id)
}
inline void Variant::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Variant.id)
}
inline ::std::string* Variant::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Variant.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variant::release_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Variant.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variant::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Variant.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Variant::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Variant.id)
}
inline void Variant::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Variant.id)
}

// repeated string names = 3;
inline int Variant::names_size() const {
  return names_.size();
}
inline void Variant::clear_names() {
  names_.Clear();
}
inline const ::std::string& Variant::names(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Variant.names)
  return names_.Get(index);
}
inline ::std::string* Variant::mutable_names(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Variant.names)
  return names_.Mutable(index);
}
inline void Variant::set_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.Variant.names)
  names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Variant::set_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.Variant.names)
  names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Variant::set_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Variant.names)
}
inline void Variant::set_names(int index, const char* value, size_t size) {
  names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Variant.names)
}
inline ::std::string* Variant::add_names() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.Variant.names)
  return names_.Add();
}
inline void Variant::add_names(const ::std::string& value) {
  names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.Variant.names)
}
#if LANG_CXX11
inline void Variant::add_names(::std::string&& value) {
  names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.Variant.names)
}
#endif
inline void Variant::add_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.Variant.names)
}
inline void Variant::add_names(const char* value, size_t size) {
  names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.Variant.names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Variant::names() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.Variant.names)
  return names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Variant::mutable_names() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.Variant.names)
  return &names_;
}

// int64 created = 12;
inline void Variant::clear_created() {
  created_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Variant::created() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Variant.created)
  return created_;
}
inline void Variant::set_created(::google::protobuf::int64 value) {
  
  created_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Variant.created)
}

// string reference_name = 14;
inline void Variant::clear_reference_name() {
  reference_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Variant::reference_name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Variant.reference_name)
  return reference_name_.Get();
}
inline void Variant::set_reference_name(const ::std::string& value) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.Variant.reference_name)
}
inline void Variant::set_reference_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Variant.reference_name)
}
inline void Variant::set_reference_name(const char* value,
    size_t size) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Variant.reference_name)
}
inline ::std::string* Variant::mutable_reference_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Variant.reference_name)
  return reference_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variant::release_reference_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Variant.reference_name)
  
  return reference_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variant::unsafe_arena_release_reference_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Variant.reference_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Variant::set_allocated_reference_name(::std::string* reference_name) {
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Variant.reference_name)
}
inline void Variant::unsafe_arena_set_allocated_reference_name(
    ::std::string* reference_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Variant.reference_name)
}

// int64 start = 16;
inline void Variant::clear_start() {
  start_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Variant::start() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Variant.start)
  return start_;
}
inline void Variant::set_start(::google::protobuf::int64 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Variant.start)
}

// int64 end = 13;
inline void Variant::clear_end() {
  end_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Variant::end() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Variant.end)
  return end_;
}
inline void Variant::set_end(::google::protobuf::int64 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Variant.end)
}

// string reference_bases = 6;
inline void Variant::clear_reference_bases() {
  reference_bases_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Variant::reference_bases() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Variant.reference_bases)
  return reference_bases_.Get();
}
inline void Variant::set_reference_bases(const ::std::string& value) {
  
  reference_bases_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.Variant.reference_bases)
}
inline void Variant::set_reference_bases(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reference_bases_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Variant.reference_bases)
}
inline void Variant::set_reference_bases(const char* value,
    size_t size) {
  
  reference_bases_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Variant.reference_bases)
}
inline ::std::string* Variant::mutable_reference_bases() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Variant.reference_bases)
  return reference_bases_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variant::release_reference_bases() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Variant.reference_bases)
  
  return reference_bases_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Variant::unsafe_arena_release_reference_bases() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Variant.reference_bases)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_bases_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Variant::set_allocated_reference_bases(::std::string* reference_bases) {
  if (reference_bases != NULL) {
    
  } else {
    
  }
  reference_bases_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_bases,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Variant.reference_bases)
}
inline void Variant::unsafe_arena_set_allocated_reference_bases(
    ::std::string* reference_bases) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_bases != NULL) {
    
  } else {
    
  }
  reference_bases_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_bases, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Variant.reference_bases)
}

// repeated string alternate_bases = 7;
inline int Variant::alternate_bases_size() const {
  return alternate_bases_.size();
}
inline void Variant::clear_alternate_bases() {
  alternate_bases_.Clear();
}
inline const ::std::string& Variant::alternate_bases(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Variant.alternate_bases)
  return alternate_bases_.Get(index);
}
inline ::std::string* Variant::mutable_alternate_bases(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Variant.alternate_bases)
  return alternate_bases_.Mutable(index);
}
inline void Variant::set_alternate_bases(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.Variant.alternate_bases)
  alternate_bases_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Variant::set_alternate_bases(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.Variant.alternate_bases)
  alternate_bases_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Variant::set_alternate_bases(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  alternate_bases_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Variant.alternate_bases)
}
inline void Variant::set_alternate_bases(int index, const char* value, size_t size) {
  alternate_bases_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Variant.alternate_bases)
}
inline ::std::string* Variant::add_alternate_bases() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.Variant.alternate_bases)
  return alternate_bases_.Add();
}
inline void Variant::add_alternate_bases(const ::std::string& value) {
  alternate_bases_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.Variant.alternate_bases)
}
#if LANG_CXX11
inline void Variant::add_alternate_bases(::std::string&& value) {
  alternate_bases_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.Variant.alternate_bases)
}
#endif
inline void Variant::add_alternate_bases(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  alternate_bases_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.Variant.alternate_bases)
}
inline void Variant::add_alternate_bases(const char* value, size_t size) {
  alternate_bases_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.Variant.alternate_bases)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Variant::alternate_bases() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.Variant.alternate_bases)
  return alternate_bases_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Variant::mutable_alternate_bases() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.Variant.alternate_bases)
  return &alternate_bases_;
}

// double quality = 8;
inline void Variant::clear_quality() {
  quality_ = 0;
}
inline double Variant::quality() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Variant.quality)
  return quality_;
}
inline void Variant::set_quality(double value) {
  
  quality_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Variant.quality)
}

// repeated string filter = 9;
inline int Variant::filter_size() const {
  return filter_.size();
}
inline void Variant::clear_filter() {
  filter_.Clear();
}
inline const ::std::string& Variant::filter(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Variant.filter)
  return filter_.Get(index);
}
inline ::std::string* Variant::mutable_filter(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Variant.filter)
  return filter_.Mutable(index);
}
inline void Variant::set_filter(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.Variant.filter)
  filter_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Variant::set_filter(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.Variant.filter)
  filter_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Variant::set_filter(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  filter_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Variant.filter)
}
inline void Variant::set_filter(int index, const char* value, size_t size) {
  filter_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Variant.filter)
}
inline ::std::string* Variant::add_filter() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.Variant.filter)
  return filter_.Add();
}
inline void Variant::add_filter(const ::std::string& value) {
  filter_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.Variant.filter)
}
#if LANG_CXX11
inline void Variant::add_filter(::std::string&& value) {
  filter_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.Variant.filter)
}
#endif
inline void Variant::add_filter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  filter_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.Variant.filter)
}
inline void Variant::add_filter(const char* value, size_t size) {
  filter_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.Variant.filter)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Variant::filter() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.Variant.filter)
  return filter_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Variant::mutable_filter() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.Variant.filter)
  return &filter_;
}

// map<string, .google.protobuf.ListValue> info = 10;
inline int Variant::info_size() const {
  return info_.size();
}
inline void Variant::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
Variant::info() const {
  // @@protoc_insertion_point(field_map:google.genomics.v1.Variant.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
Variant::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:google.genomics.v1.Variant.info)
  return info_.MutableMap();
}

// repeated .google.genomics.v1.VariantCall calls = 11;
inline int Variant::calls_size() const {
  return calls_.size();
}
inline void Variant::clear_calls() {
  calls_.Clear();
}
inline const ::google::genomics::v1::VariantCall& Variant::calls(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Variant.calls)
  return calls_.Get(index);
}
inline ::google::genomics::v1::VariantCall* Variant::mutable_calls(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Variant.calls)
  return calls_.Mutable(index);
}
inline ::google::genomics::v1::VariantCall* Variant::add_calls() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.Variant.calls)
  return calls_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantCall >*
Variant::mutable_calls() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.Variant.calls)
  return &calls_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantCall >&
Variant::calls() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.Variant.calls)
  return calls_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// VariantCall

// string call_set_id = 8;
inline void VariantCall::clear_call_set_id() {
  call_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantCall::call_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantCall.call_set_id)
  return call_set_id_.Get();
}
inline void VariantCall::set_call_set_id(const ::std::string& value) {
  
  call_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantCall.call_set_id)
}
inline void VariantCall::set_call_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  call_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantCall.call_set_id)
}
inline void VariantCall::set_call_set_id(const char* value,
    size_t size) {
  
  call_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantCall.call_set_id)
}
inline ::std::string* VariantCall::mutable_call_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantCall.call_set_id)
  return call_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantCall::release_call_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantCall.call_set_id)
  
  return call_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantCall::unsafe_arena_release_call_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantCall.call_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return call_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantCall::set_allocated_call_set_id(::std::string* call_set_id) {
  if (call_set_id != NULL) {
    
  } else {
    
  }
  call_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), call_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantCall.call_set_id)
}
inline void VariantCall::unsafe_arena_set_allocated_call_set_id(
    ::std::string* call_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (call_set_id != NULL) {
    
  } else {
    
  }
  call_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      call_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantCall.call_set_id)
}

// string call_set_name = 9;
inline void VariantCall::clear_call_set_name() {
  call_set_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantCall::call_set_name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantCall.call_set_name)
  return call_set_name_.Get();
}
inline void VariantCall::set_call_set_name(const ::std::string& value) {
  
  call_set_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantCall.call_set_name)
}
inline void VariantCall::set_call_set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  call_set_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantCall.call_set_name)
}
inline void VariantCall::set_call_set_name(const char* value,
    size_t size) {
  
  call_set_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantCall.call_set_name)
}
inline ::std::string* VariantCall::mutable_call_set_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantCall.call_set_name)
  return call_set_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantCall::release_call_set_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantCall.call_set_name)
  
  return call_set_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantCall::unsafe_arena_release_call_set_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantCall.call_set_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return call_set_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantCall::set_allocated_call_set_name(::std::string* call_set_name) {
  if (call_set_name != NULL) {
    
  } else {
    
  }
  call_set_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), call_set_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantCall.call_set_name)
}
inline void VariantCall::unsafe_arena_set_allocated_call_set_name(
    ::std::string* call_set_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (call_set_name != NULL) {
    
  } else {
    
  }
  call_set_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      call_set_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantCall.call_set_name)
}

// repeated int32 genotype = 7;
inline int VariantCall::genotype_size() const {
  return genotype_.size();
}
inline void VariantCall::clear_genotype() {
  genotype_.Clear();
}
inline ::google::protobuf::int32 VariantCall::genotype(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantCall.genotype)
  return genotype_.Get(index);
}
inline void VariantCall::set_genotype(int index, ::google::protobuf::int32 value) {
  genotype_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantCall.genotype)
}
inline void VariantCall::add_genotype(::google::protobuf::int32 value) {
  genotype_.Add(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.VariantCall.genotype)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
VariantCall::genotype() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.VariantCall.genotype)
  return genotype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
VariantCall::mutable_genotype() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.VariantCall.genotype)
  return &genotype_;
}

// string phaseset = 5;
inline void VariantCall::clear_phaseset() {
  phaseset_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& VariantCall::phaseset() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantCall.phaseset)
  return phaseset_.Get();
}
inline void VariantCall::set_phaseset(const ::std::string& value) {
  
  phaseset_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantCall.phaseset)
}
inline void VariantCall::set_phaseset(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phaseset_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.VariantCall.phaseset)
}
inline void VariantCall::set_phaseset(const char* value,
    size_t size) {
  
  phaseset_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.VariantCall.phaseset)
}
inline ::std::string* VariantCall::mutable_phaseset() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.VariantCall.phaseset)
  return phaseset_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantCall::release_phaseset() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.VariantCall.phaseset)
  
  return phaseset_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* VariantCall::unsafe_arena_release_phaseset() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.VariantCall.phaseset)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return phaseset_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void VariantCall::set_allocated_phaseset(::std::string* phaseset) {
  if (phaseset != NULL) {
    
  } else {
    
  }
  phaseset_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phaseset,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.VariantCall.phaseset)
}
inline void VariantCall::unsafe_arena_set_allocated_phaseset(
    ::std::string* phaseset) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (phaseset != NULL) {
    
  } else {
    
  }
  phaseset_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      phaseset, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.VariantCall.phaseset)
}

// repeated double genotype_likelihood = 6;
inline int VariantCall::genotype_likelihood_size() const {
  return genotype_likelihood_.size();
}
inline void VariantCall::clear_genotype_likelihood() {
  genotype_likelihood_.Clear();
}
inline double VariantCall::genotype_likelihood(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.VariantCall.genotype_likelihood)
  return genotype_likelihood_.Get(index);
}
inline void VariantCall::set_genotype_likelihood(int index, double value) {
  genotype_likelihood_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.genomics.v1.VariantCall.genotype_likelihood)
}
inline void VariantCall::add_genotype_likelihood(double value) {
  genotype_likelihood_.Add(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.VariantCall.genotype_likelihood)
}
inline const ::google::protobuf::RepeatedField< double >&
VariantCall::genotype_likelihood() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.VariantCall.genotype_likelihood)
  return genotype_likelihood_;
}
inline ::google::protobuf::RepeatedField< double >*
VariantCall::mutable_genotype_likelihood() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.VariantCall.genotype_likelihood)
  return &genotype_likelihood_;
}

// map<string, .google.protobuf.ListValue> info = 2;
inline int VariantCall::info_size() const {
  return info_.size();
}
inline void VariantCall::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
VariantCall::info() const {
  // @@protoc_insertion_point(field_map:google.genomics.v1.VariantCall.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
VariantCall::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:google.genomics.v1.VariantCall.info)
  return info_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CallSet

// string id = 1;
inline void CallSet::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CallSet::id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.CallSet.id)
  return id_.Get();
}
inline void CallSet::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.CallSet.id)
}
inline void CallSet::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.CallSet.id)
}
inline void CallSet::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.CallSet.id)
}
inline ::std::string* CallSet::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.CallSet.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CallSet::release_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.CallSet.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CallSet::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.CallSet.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CallSet::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.CallSet.id)
}
inline void CallSet::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.CallSet.id)
}

// string name = 2;
inline void CallSet::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CallSet::name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.CallSet.name)
  return name_.Get();
}
inline void CallSet::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.CallSet.name)
}
inline void CallSet::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.CallSet.name)
}
inline void CallSet::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.CallSet.name)
}
inline ::std::string* CallSet::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.CallSet.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CallSet::release_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.CallSet.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CallSet::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.CallSet.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CallSet::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.CallSet.name)
}
inline void CallSet::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.CallSet.name)
}

// string sample_id = 7;
inline void CallSet::clear_sample_id() {
  sample_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CallSet::sample_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.CallSet.sample_id)
  return sample_id_.Get();
}
inline void CallSet::set_sample_id(const ::std::string& value) {
  
  sample_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.CallSet.sample_id)
}
inline void CallSet::set_sample_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sample_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.CallSet.sample_id)
}
inline void CallSet::set_sample_id(const char* value,
    size_t size) {
  
  sample_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.CallSet.sample_id)
}
inline ::std::string* CallSet::mutable_sample_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.CallSet.sample_id)
  return sample_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CallSet::release_sample_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.CallSet.sample_id)
  
  return sample_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CallSet::unsafe_arena_release_sample_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.CallSet.sample_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return sample_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CallSet::set_allocated_sample_id(::std::string* sample_id) {
  if (sample_id != NULL) {
    
  } else {
    
  }
  sample_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sample_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.CallSet.sample_id)
}
inline void CallSet::unsafe_arena_set_allocated_sample_id(
    ::std::string* sample_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (sample_id != NULL) {
    
  } else {
    
  }
  sample_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      sample_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.CallSet.sample_id)
}

// repeated string variant_set_ids = 6;
inline int CallSet::variant_set_ids_size() const {
  return variant_set_ids_.size();
}
inline void CallSet::clear_variant_set_ids() {
  variant_set_ids_.Clear();
}
inline const ::std::string& CallSet::variant_set_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.CallSet.variant_set_ids)
  return variant_set_ids_.Get(index);
}
inline ::std::string* CallSet::mutable_variant_set_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.CallSet.variant_set_ids)
  return variant_set_ids_.Mutable(index);
}
inline void CallSet::set_variant_set_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.CallSet.variant_set_ids)
  variant_set_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CallSet::set_variant_set_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.CallSet.variant_set_ids)
  variant_set_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CallSet::set_variant_set_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  variant_set_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.CallSet.variant_set_ids)
}
inline void CallSet::set_variant_set_ids(int index, const char* value, size_t size) {
  variant_set_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.CallSet.variant_set_ids)
}
inline ::std::string* CallSet::add_variant_set_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.CallSet.variant_set_ids)
  return variant_set_ids_.Add();
}
inline void CallSet::add_variant_set_ids(const ::std::string& value) {
  variant_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.CallSet.variant_set_ids)
}
#if LANG_CXX11
inline void CallSet::add_variant_set_ids(::std::string&& value) {
  variant_set_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.CallSet.variant_set_ids)
}
#endif
inline void CallSet::add_variant_set_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  variant_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.CallSet.variant_set_ids)
}
inline void CallSet::add_variant_set_ids(const char* value, size_t size) {
  variant_set_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.CallSet.variant_set_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CallSet::variant_set_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.CallSet.variant_set_ids)
  return variant_set_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CallSet::mutable_variant_set_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.CallSet.variant_set_ids)
  return &variant_set_ids_;
}

// int64 created = 5;
inline void CallSet::clear_created() {
  created_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CallSet::created() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.CallSet.created)
  return created_;
}
inline void CallSet::set_created(::google::protobuf::int64 value) {
  
  created_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.CallSet.created)
}

// map<string, .google.protobuf.ListValue> info = 4;
inline int CallSet::info_size() const {
  return info_.size();
}
inline void CallSet::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
CallSet::info() const {
  // @@protoc_insertion_point(field_map:google.genomics.v1.CallSet.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
CallSet::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:google.genomics.v1.CallSet.info)
  return info_.MutableMap();
}

// -------------------------------------------------------------------

// ReferenceBound

// string reference_name = 1;
inline void ReferenceBound::clear_reference_name() {
  reference_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReferenceBound::reference_name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReferenceBound.reference_name)
  return reference_name_.Get();
}
inline void ReferenceBound::set_reference_name(const ::std::string& value) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReferenceBound.reference_name)
}
inline void ReferenceBound::set_reference_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReferenceBound.reference_name)
}
inline void ReferenceBound::set_reference_name(const char* value,
    size_t size) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReferenceBound.reference_name)
}
inline ::std::string* ReferenceBound::mutable_reference_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReferenceBound.reference_name)
  return reference_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReferenceBound::release_reference_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReferenceBound.reference_name)
  
  return reference_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReferenceBound::unsafe_arena_release_reference_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReferenceBound.reference_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReferenceBound::set_allocated_reference_name(::std::string* reference_name) {
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReferenceBound.reference_name)
}
inline void ReferenceBound::unsafe_arena_set_allocated_reference_name(
    ::std::string* reference_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReferenceBound.reference_name)
}

// int64 upper_bound = 2;
inline void ReferenceBound::clear_upper_bound() {
  upper_bound_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ReferenceBound::upper_bound() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReferenceBound.upper_bound)
  return upper_bound_;
}
inline void ReferenceBound::set_upper_bound(::google::protobuf::int64 value) {
  
  upper_bound_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReferenceBound.upper_bound)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ImportVariantsRequest

// string variant_set_id = 1;
inline void ImportVariantsRequest::clear_variant_set_id() {
  variant_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ImportVariantsRequest::variant_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ImportVariantsRequest.variant_set_id)
  return variant_set_id_.Get();
}
inline void ImportVariantsRequest::set_variant_set_id(const ::std::string& value) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ImportVariantsRequest.variant_set_id)
}
inline void ImportVariantsRequest::set_variant_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ImportVariantsRequest.variant_set_id)
}
inline void ImportVariantsRequest::set_variant_set_id(const char* value,
    size_t size) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ImportVariantsRequest.variant_set_id)
}
inline ::std::string* ImportVariantsRequest::mutable_variant_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ImportVariantsRequest.variant_set_id)
  return variant_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ImportVariantsRequest::release_variant_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ImportVariantsRequest.variant_set_id)
  
  return variant_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ImportVariantsRequest::unsafe_arena_release_variant_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ImportVariantsRequest.variant_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return variant_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ImportVariantsRequest::set_allocated_variant_set_id(::std::string* variant_set_id) {
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variant_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ImportVariantsRequest.variant_set_id)
}
inline void ImportVariantsRequest::unsafe_arena_set_allocated_variant_set_id(
    ::std::string* variant_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      variant_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ImportVariantsRequest.variant_set_id)
}

// repeated string source_uris = 2;
inline int ImportVariantsRequest::source_uris_size() const {
  return source_uris_.size();
}
inline void ImportVariantsRequest::clear_source_uris() {
  source_uris_.Clear();
}
inline const ::std::string& ImportVariantsRequest::source_uris(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ImportVariantsRequest.source_uris)
  return source_uris_.Get(index);
}
inline ::std::string* ImportVariantsRequest::mutable_source_uris(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ImportVariantsRequest.source_uris)
  return source_uris_.Mutable(index);
}
inline void ImportVariantsRequest::set_source_uris(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.ImportVariantsRequest.source_uris)
  source_uris_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ImportVariantsRequest::set_source_uris(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.ImportVariantsRequest.source_uris)
  source_uris_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ImportVariantsRequest::set_source_uris(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  source_uris_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ImportVariantsRequest.source_uris)
}
inline void ImportVariantsRequest::set_source_uris(int index, const char* value, size_t size) {
  source_uris_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ImportVariantsRequest.source_uris)
}
inline ::std::string* ImportVariantsRequest::add_source_uris() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.ImportVariantsRequest.source_uris)
  return source_uris_.Add();
}
inline void ImportVariantsRequest::add_source_uris(const ::std::string& value) {
  source_uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.ImportVariantsRequest.source_uris)
}
#if LANG_CXX11
inline void ImportVariantsRequest::add_source_uris(::std::string&& value) {
  source_uris_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.ImportVariantsRequest.source_uris)
}
#endif
inline void ImportVariantsRequest::add_source_uris(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  source_uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.ImportVariantsRequest.source_uris)
}
inline void ImportVariantsRequest::add_source_uris(const char* value, size_t size) {
  source_uris_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.ImportVariantsRequest.source_uris)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ImportVariantsRequest::source_uris() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.ImportVariantsRequest.source_uris)
  return source_uris_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ImportVariantsRequest::mutable_source_uris() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.ImportVariantsRequest.source_uris)
  return &source_uris_;
}

// .google.genomics.v1.ImportVariantsRequest.Format format = 3;
inline void ImportVariantsRequest::clear_format() {
  format_ = 0;
}
inline ::google::genomics::v1::ImportVariantsRequest_Format ImportVariantsRequest::format() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ImportVariantsRequest.format)
  return static_cast< ::google::genomics::v1::ImportVariantsRequest_Format >(format_);
}
inline void ImportVariantsRequest::set_format(::google::genomics::v1::ImportVariantsRequest_Format value) {
  
  format_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.ImportVariantsRequest.format)
}

// bool normalize_reference_names = 5;
inline void ImportVariantsRequest::clear_normalize_reference_names() {
  normalize_reference_names_ = false;
}
inline bool ImportVariantsRequest::normalize_reference_names() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ImportVariantsRequest.normalize_reference_names)
  return normalize_reference_names_;
}
inline void ImportVariantsRequest::set_normalize_reference_names(bool value) {
  
  normalize_reference_names_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.ImportVariantsRequest.normalize_reference_names)
}

// map<string, .google.genomics.v1.InfoMergeOperation> info_merge_config = 6;
inline int ImportVariantsRequest::info_merge_config_size() const {
  return info_merge_config_.size();
}
inline void ImportVariantsRequest::clear_info_merge_config() {
  info_merge_config_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::genomics::v1::InfoMergeOperation >&
ImportVariantsRequest::info_merge_config() const {
  // @@protoc_insertion_point(field_map:google.genomics.v1.ImportVariantsRequest.info_merge_config)
  return info_merge_config_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::genomics::v1::InfoMergeOperation >*
ImportVariantsRequest::mutable_info_merge_config() {
  // @@protoc_insertion_point(field_mutable_map:google.genomics.v1.ImportVariantsRequest.info_merge_config)
  return info_merge_config_.MutableMap();
}

// -------------------------------------------------------------------

// ImportVariantsResponse

// repeated string call_set_ids = 1;
inline int ImportVariantsResponse::call_set_ids_size() const {
  return call_set_ids_.size();
}
inline void ImportVariantsResponse::clear_call_set_ids() {
  call_set_ids_.Clear();
}
inline const ::std::string& ImportVariantsResponse::call_set_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ImportVariantsResponse.call_set_ids)
  return call_set_ids_.Get(index);
}
inline ::std::string* ImportVariantsResponse::mutable_call_set_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ImportVariantsResponse.call_set_ids)
  return call_set_ids_.Mutable(index);
}
inline void ImportVariantsResponse::set_call_set_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.ImportVariantsResponse.call_set_ids)
  call_set_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ImportVariantsResponse::set_call_set_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.ImportVariantsResponse.call_set_ids)
  call_set_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ImportVariantsResponse::set_call_set_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  call_set_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ImportVariantsResponse.call_set_ids)
}
inline void ImportVariantsResponse::set_call_set_ids(int index, const char* value, size_t size) {
  call_set_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ImportVariantsResponse.call_set_ids)
}
inline ::std::string* ImportVariantsResponse::add_call_set_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.ImportVariantsResponse.call_set_ids)
  return call_set_ids_.Add();
}
inline void ImportVariantsResponse::add_call_set_ids(const ::std::string& value) {
  call_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.ImportVariantsResponse.call_set_ids)
}
#if LANG_CXX11
inline void ImportVariantsResponse::add_call_set_ids(::std::string&& value) {
  call_set_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.ImportVariantsResponse.call_set_ids)
}
#endif
inline void ImportVariantsResponse::add_call_set_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  call_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.ImportVariantsResponse.call_set_ids)
}
inline void ImportVariantsResponse::add_call_set_ids(const char* value, size_t size) {
  call_set_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.ImportVariantsResponse.call_set_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ImportVariantsResponse::call_set_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.ImportVariantsResponse.call_set_ids)
  return call_set_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ImportVariantsResponse::mutable_call_set_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.ImportVariantsResponse.call_set_ids)
  return &call_set_ids_;
}

// -------------------------------------------------------------------

// CreateVariantSetRequest

// .google.genomics.v1.VariantSet variant_set = 1;
inline bool CreateVariantSetRequest::has_variant_set() const {
  return this != internal_default_instance() && variant_set_ != NULL;
}
inline void CreateVariantSetRequest::clear_variant_set() {
  if (GetArenaNoVirtual() == NULL && variant_set_ != NULL) delete variant_set_;
  variant_set_ = NULL;
}
inline const ::google::genomics::v1::VariantSet& CreateVariantSetRequest::variant_set() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.CreateVariantSetRequest.variant_set)
  return variant_set_ != NULL ? *variant_set_
                         : *::google::genomics::v1::VariantSet::internal_default_instance();
}
inline ::google::genomics::v1::VariantSet* CreateVariantSetRequest::mutable_variant_set() {
  
  if (variant_set_ == NULL) {
    _slow_mutable_variant_set();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.CreateVariantSetRequest.variant_set)
  return variant_set_;
}
inline ::google::genomics::v1::VariantSet* CreateVariantSetRequest::release_variant_set() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.CreateVariantSetRequest.variant_set)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_variant_set();
  } else {
    ::google::genomics::v1::VariantSet* temp = variant_set_;
    variant_set_ = NULL;
    return temp;
  }
}
inline  void CreateVariantSetRequest::set_allocated_variant_set(::google::genomics::v1::VariantSet* variant_set) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete variant_set_;
  }
  if (variant_set != NULL) {
    _slow_set_allocated_variant_set(message_arena, &variant_set);
  }
  variant_set_ = variant_set;
  if (variant_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.CreateVariantSetRequest.variant_set)
}

// -------------------------------------------------------------------

// ExportVariantSetRequest

// string variant_set_id = 1;
inline void ExportVariantSetRequest::clear_variant_set_id() {
  variant_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ExportVariantSetRequest::variant_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ExportVariantSetRequest.variant_set_id)
  return variant_set_id_.Get();
}
inline void ExportVariantSetRequest::set_variant_set_id(const ::std::string& value) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ExportVariantSetRequest.variant_set_id)
}
inline void ExportVariantSetRequest::set_variant_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ExportVariantSetRequest.variant_set_id)
}
inline void ExportVariantSetRequest::set_variant_set_id(const char* value,
    size_t size) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ExportVariantSetRequest.variant_set_id)
}
inline ::std::string* ExportVariantSetRequest::mutable_variant_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ExportVariantSetRequest.variant_set_id)
  return variant_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportVariantSetRequest::release_variant_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ExportVariantSetRequest.variant_set_id)
  
  return variant_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportVariantSetRequest::unsafe_arena_release_variant_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ExportVariantSetRequest.variant_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return variant_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ExportVariantSetRequest::set_allocated_variant_set_id(::std::string* variant_set_id) {
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variant_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ExportVariantSetRequest.variant_set_id)
}
inline void ExportVariantSetRequest::unsafe_arena_set_allocated_variant_set_id(
    ::std::string* variant_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      variant_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ExportVariantSetRequest.variant_set_id)
}

// repeated string call_set_ids = 2;
inline int ExportVariantSetRequest::call_set_ids_size() const {
  return call_set_ids_.size();
}
inline void ExportVariantSetRequest::clear_call_set_ids() {
  call_set_ids_.Clear();
}
inline const ::std::string& ExportVariantSetRequest::call_set_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ExportVariantSetRequest.call_set_ids)
  return call_set_ids_.Get(index);
}
inline ::std::string* ExportVariantSetRequest::mutable_call_set_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ExportVariantSetRequest.call_set_ids)
  return call_set_ids_.Mutable(index);
}
inline void ExportVariantSetRequest::set_call_set_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.ExportVariantSetRequest.call_set_ids)
  call_set_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ExportVariantSetRequest::set_call_set_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.ExportVariantSetRequest.call_set_ids)
  call_set_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ExportVariantSetRequest::set_call_set_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  call_set_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ExportVariantSetRequest.call_set_ids)
}
inline void ExportVariantSetRequest::set_call_set_ids(int index, const char* value, size_t size) {
  call_set_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ExportVariantSetRequest.call_set_ids)
}
inline ::std::string* ExportVariantSetRequest::add_call_set_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.ExportVariantSetRequest.call_set_ids)
  return call_set_ids_.Add();
}
inline void ExportVariantSetRequest::add_call_set_ids(const ::std::string& value) {
  call_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.ExportVariantSetRequest.call_set_ids)
}
#if LANG_CXX11
inline void ExportVariantSetRequest::add_call_set_ids(::std::string&& value) {
  call_set_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.ExportVariantSetRequest.call_set_ids)
}
#endif
inline void ExportVariantSetRequest::add_call_set_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  call_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.ExportVariantSetRequest.call_set_ids)
}
inline void ExportVariantSetRequest::add_call_set_ids(const char* value, size_t size) {
  call_set_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.ExportVariantSetRequest.call_set_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ExportVariantSetRequest::call_set_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.ExportVariantSetRequest.call_set_ids)
  return call_set_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ExportVariantSetRequest::mutable_call_set_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.ExportVariantSetRequest.call_set_ids)
  return &call_set_ids_;
}

// string project_id = 3;
inline void ExportVariantSetRequest::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ExportVariantSetRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ExportVariantSetRequest.project_id)
  return project_id_.Get();
}
inline void ExportVariantSetRequest::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ExportVariantSetRequest.project_id)
}
inline void ExportVariantSetRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ExportVariantSetRequest.project_id)
}
inline void ExportVariantSetRequest::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ExportVariantSetRequest.project_id)
}
inline ::std::string* ExportVariantSetRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ExportVariantSetRequest.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportVariantSetRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ExportVariantSetRequest.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportVariantSetRequest::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ExportVariantSetRequest.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ExportVariantSetRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ExportVariantSetRequest.project_id)
}
inline void ExportVariantSetRequest::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ExportVariantSetRequest.project_id)
}

// .google.genomics.v1.ExportVariantSetRequest.Format format = 4;
inline void ExportVariantSetRequest::clear_format() {
  format_ = 0;
}
inline ::google::genomics::v1::ExportVariantSetRequest_Format ExportVariantSetRequest::format() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ExportVariantSetRequest.format)
  return static_cast< ::google::genomics::v1::ExportVariantSetRequest_Format >(format_);
}
inline void ExportVariantSetRequest::set_format(::google::genomics::v1::ExportVariantSetRequest_Format value) {
  
  format_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.ExportVariantSetRequest.format)
}

// string bigquery_dataset = 5;
inline void ExportVariantSetRequest::clear_bigquery_dataset() {
  bigquery_dataset_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ExportVariantSetRequest::bigquery_dataset() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ExportVariantSetRequest.bigquery_dataset)
  return bigquery_dataset_.Get();
}
inline void ExportVariantSetRequest::set_bigquery_dataset(const ::std::string& value) {
  
  bigquery_dataset_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ExportVariantSetRequest.bigquery_dataset)
}
inline void ExportVariantSetRequest::set_bigquery_dataset(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bigquery_dataset_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ExportVariantSetRequest.bigquery_dataset)
}
inline void ExportVariantSetRequest::set_bigquery_dataset(const char* value,
    size_t size) {
  
  bigquery_dataset_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ExportVariantSetRequest.bigquery_dataset)
}
inline ::std::string* ExportVariantSetRequest::mutable_bigquery_dataset() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ExportVariantSetRequest.bigquery_dataset)
  return bigquery_dataset_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportVariantSetRequest::release_bigquery_dataset() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ExportVariantSetRequest.bigquery_dataset)
  
  return bigquery_dataset_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportVariantSetRequest::unsafe_arena_release_bigquery_dataset() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ExportVariantSetRequest.bigquery_dataset)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return bigquery_dataset_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ExportVariantSetRequest::set_allocated_bigquery_dataset(::std::string* bigquery_dataset) {
  if (bigquery_dataset != NULL) {
    
  } else {
    
  }
  bigquery_dataset_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bigquery_dataset,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ExportVariantSetRequest.bigquery_dataset)
}
inline void ExportVariantSetRequest::unsafe_arena_set_allocated_bigquery_dataset(
    ::std::string* bigquery_dataset) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (bigquery_dataset != NULL) {
    
  } else {
    
  }
  bigquery_dataset_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      bigquery_dataset, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ExportVariantSetRequest.bigquery_dataset)
}

// string bigquery_table = 6;
inline void ExportVariantSetRequest::clear_bigquery_table() {
  bigquery_table_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ExportVariantSetRequest::bigquery_table() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ExportVariantSetRequest.bigquery_table)
  return bigquery_table_.Get();
}
inline void ExportVariantSetRequest::set_bigquery_table(const ::std::string& value) {
  
  bigquery_table_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ExportVariantSetRequest.bigquery_table)
}
inline void ExportVariantSetRequest::set_bigquery_table(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bigquery_table_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ExportVariantSetRequest.bigquery_table)
}
inline void ExportVariantSetRequest::set_bigquery_table(const char* value,
    size_t size) {
  
  bigquery_table_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ExportVariantSetRequest.bigquery_table)
}
inline ::std::string* ExportVariantSetRequest::mutable_bigquery_table() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ExportVariantSetRequest.bigquery_table)
  return bigquery_table_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportVariantSetRequest::release_bigquery_table() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ExportVariantSetRequest.bigquery_table)
  
  return bigquery_table_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ExportVariantSetRequest::unsafe_arena_release_bigquery_table() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ExportVariantSetRequest.bigquery_table)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return bigquery_table_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ExportVariantSetRequest::set_allocated_bigquery_table(::std::string* bigquery_table) {
  if (bigquery_table != NULL) {
    
  } else {
    
  }
  bigquery_table_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bigquery_table,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ExportVariantSetRequest.bigquery_table)
}
inline void ExportVariantSetRequest::unsafe_arena_set_allocated_bigquery_table(
    ::std::string* bigquery_table) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (bigquery_table != NULL) {
    
  } else {
    
  }
  bigquery_table_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      bigquery_table, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ExportVariantSetRequest.bigquery_table)
}

// -------------------------------------------------------------------

// GetVariantSetRequest

// string variant_set_id = 1;
inline void GetVariantSetRequest::clear_variant_set_id() {
  variant_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetVariantSetRequest::variant_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.GetVariantSetRequest.variant_set_id)
  return variant_set_id_.Get();
}
inline void GetVariantSetRequest::set_variant_set_id(const ::std::string& value) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.GetVariantSetRequest.variant_set_id)
}
inline void GetVariantSetRequest::set_variant_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.GetVariantSetRequest.variant_set_id)
}
inline void GetVariantSetRequest::set_variant_set_id(const char* value,
    size_t size) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.GetVariantSetRequest.variant_set_id)
}
inline ::std::string* GetVariantSetRequest::mutable_variant_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.GetVariantSetRequest.variant_set_id)
  return variant_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetVariantSetRequest::release_variant_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.GetVariantSetRequest.variant_set_id)
  
  return variant_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetVariantSetRequest::unsafe_arena_release_variant_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.GetVariantSetRequest.variant_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return variant_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetVariantSetRequest::set_allocated_variant_set_id(::std::string* variant_set_id) {
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variant_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.GetVariantSetRequest.variant_set_id)
}
inline void GetVariantSetRequest::unsafe_arena_set_allocated_variant_set_id(
    ::std::string* variant_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      variant_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.GetVariantSetRequest.variant_set_id)
}

// -------------------------------------------------------------------

// SearchVariantSetsRequest

// repeated string dataset_ids = 1;
inline int SearchVariantSetsRequest::dataset_ids_size() const {
  return dataset_ids_.size();
}
inline void SearchVariantSetsRequest::clear_dataset_ids() {
  dataset_ids_.Clear();
}
inline const ::std::string& SearchVariantSetsRequest::dataset_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantSetsRequest.dataset_ids)
  return dataset_ids_.Get(index);
}
inline ::std::string* SearchVariantSetsRequest::mutable_dataset_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchVariantSetsRequest.dataset_ids)
  return dataset_ids_.Mutable(index);
}
inline void SearchVariantSetsRequest::set_dataset_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantSetsRequest.dataset_ids)
  dataset_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SearchVariantSetsRequest::set_dataset_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantSetsRequest.dataset_ids)
  dataset_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SearchVariantSetsRequest::set_dataset_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  dataset_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchVariantSetsRequest.dataset_ids)
}
inline void SearchVariantSetsRequest::set_dataset_ids(int index, const char* value, size_t size) {
  dataset_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchVariantSetsRequest.dataset_ids)
}
inline ::std::string* SearchVariantSetsRequest::add_dataset_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.SearchVariantSetsRequest.dataset_ids)
  return dataset_ids_.Add();
}
inline void SearchVariantSetsRequest::add_dataset_ids(const ::std::string& value) {
  dataset_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchVariantSetsRequest.dataset_ids)
}
#if LANG_CXX11
inline void SearchVariantSetsRequest::add_dataset_ids(::std::string&& value) {
  dataset_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchVariantSetsRequest.dataset_ids)
}
#endif
inline void SearchVariantSetsRequest::add_dataset_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  dataset_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.SearchVariantSetsRequest.dataset_ids)
}
inline void SearchVariantSetsRequest::add_dataset_ids(const char* value, size_t size) {
  dataset_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.SearchVariantSetsRequest.dataset_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchVariantSetsRequest::dataset_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchVariantSetsRequest.dataset_ids)
  return dataset_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchVariantSetsRequest::mutable_dataset_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchVariantSetsRequest.dataset_ids)
  return &dataset_ids_;
}

// string page_token = 2;
inline void SearchVariantSetsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchVariantSetsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantSetsRequest.page_token)
  return page_token_.Get();
}
inline void SearchVariantSetsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantSetsRequest.page_token)
}
inline void SearchVariantSetsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchVariantSetsRequest.page_token)
}
inline void SearchVariantSetsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchVariantSetsRequest.page_token)
}
inline ::std::string* SearchVariantSetsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchVariantSetsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchVariantSetsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchVariantSetsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchVariantSetsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchVariantSetsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchVariantSetsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchVariantSetsRequest.page_token)
}
inline void SearchVariantSetsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchVariantSetsRequest.page_token)
}

// int32 page_size = 3;
inline void SearchVariantSetsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 SearchVariantSetsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantSetsRequest.page_size)
  return page_size_;
}
inline void SearchVariantSetsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantSetsRequest.page_size)
}

// -------------------------------------------------------------------

// SearchVariantSetsResponse

// repeated .google.genomics.v1.VariantSet variant_sets = 1;
inline int SearchVariantSetsResponse::variant_sets_size() const {
  return variant_sets_.size();
}
inline void SearchVariantSetsResponse::clear_variant_sets() {
  variant_sets_.Clear();
}
inline const ::google::genomics::v1::VariantSet& SearchVariantSetsResponse::variant_sets(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantSetsResponse.variant_sets)
  return variant_sets_.Get(index);
}
inline ::google::genomics::v1::VariantSet* SearchVariantSetsResponse::mutable_variant_sets(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchVariantSetsResponse.variant_sets)
  return variant_sets_.Mutable(index);
}
inline ::google::genomics::v1::VariantSet* SearchVariantSetsResponse::add_variant_sets() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchVariantSetsResponse.variant_sets)
  return variant_sets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantSet >*
SearchVariantSetsResponse::mutable_variant_sets() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchVariantSetsResponse.variant_sets)
  return &variant_sets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::VariantSet >&
SearchVariantSetsResponse::variant_sets() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchVariantSetsResponse.variant_sets)
  return variant_sets_;
}

// string next_page_token = 2;
inline void SearchVariantSetsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchVariantSetsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantSetsResponse.next_page_token)
  return next_page_token_.Get();
}
inline void SearchVariantSetsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantSetsResponse.next_page_token)
}
inline void SearchVariantSetsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchVariantSetsResponse.next_page_token)
}
inline void SearchVariantSetsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchVariantSetsResponse.next_page_token)
}
inline ::std::string* SearchVariantSetsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchVariantSetsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchVariantSetsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchVariantSetsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchVariantSetsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchVariantSetsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchVariantSetsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchVariantSetsResponse.next_page_token)
}
inline void SearchVariantSetsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchVariantSetsResponse.next_page_token)
}

// -------------------------------------------------------------------

// DeleteVariantSetRequest

// string variant_set_id = 1;
inline void DeleteVariantSetRequest::clear_variant_set_id() {
  variant_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteVariantSetRequest::variant_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.DeleteVariantSetRequest.variant_set_id)
  return variant_set_id_.Get();
}
inline void DeleteVariantSetRequest::set_variant_set_id(const ::std::string& value) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.DeleteVariantSetRequest.variant_set_id)
}
inline void DeleteVariantSetRequest::set_variant_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.DeleteVariantSetRequest.variant_set_id)
}
inline void DeleteVariantSetRequest::set_variant_set_id(const char* value,
    size_t size) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.DeleteVariantSetRequest.variant_set_id)
}
inline ::std::string* DeleteVariantSetRequest::mutable_variant_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.DeleteVariantSetRequest.variant_set_id)
  return variant_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteVariantSetRequest::release_variant_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.DeleteVariantSetRequest.variant_set_id)
  
  return variant_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteVariantSetRequest::unsafe_arena_release_variant_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.DeleteVariantSetRequest.variant_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return variant_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteVariantSetRequest::set_allocated_variant_set_id(::std::string* variant_set_id) {
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variant_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.DeleteVariantSetRequest.variant_set_id)
}
inline void DeleteVariantSetRequest::unsafe_arena_set_allocated_variant_set_id(
    ::std::string* variant_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      variant_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.DeleteVariantSetRequest.variant_set_id)
}

// -------------------------------------------------------------------

// UpdateVariantSetRequest

// string variant_set_id = 1;
inline void UpdateVariantSetRequest::clear_variant_set_id() {
  variant_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& UpdateVariantSetRequest::variant_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateVariantSetRequest.variant_set_id)
  return variant_set_id_.Get();
}
inline void UpdateVariantSetRequest::set_variant_set_id(const ::std::string& value) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.UpdateVariantSetRequest.variant_set_id)
}
inline void UpdateVariantSetRequest::set_variant_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.UpdateVariantSetRequest.variant_set_id)
}
inline void UpdateVariantSetRequest::set_variant_set_id(const char* value,
    size_t size) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.UpdateVariantSetRequest.variant_set_id)
}
inline ::std::string* UpdateVariantSetRequest::mutable_variant_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateVariantSetRequest.variant_set_id)
  return variant_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateVariantSetRequest::release_variant_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateVariantSetRequest.variant_set_id)
  
  return variant_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateVariantSetRequest::unsafe_arena_release_variant_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.UpdateVariantSetRequest.variant_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return variant_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UpdateVariantSetRequest::set_allocated_variant_set_id(::std::string* variant_set_id) {
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variant_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateVariantSetRequest.variant_set_id)
}
inline void UpdateVariantSetRequest::unsafe_arena_set_allocated_variant_set_id(
    ::std::string* variant_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      variant_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.UpdateVariantSetRequest.variant_set_id)
}

// .google.genomics.v1.VariantSet variant_set = 2;
inline bool UpdateVariantSetRequest::has_variant_set() const {
  return this != internal_default_instance() && variant_set_ != NULL;
}
inline void UpdateVariantSetRequest::clear_variant_set() {
  if (GetArenaNoVirtual() == NULL && variant_set_ != NULL) delete variant_set_;
  variant_set_ = NULL;
}
inline const ::google::genomics::v1::VariantSet& UpdateVariantSetRequest::variant_set() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateVariantSetRequest.variant_set)
  return variant_set_ != NULL ? *variant_set_
                         : *::google::genomics::v1::VariantSet::internal_default_instance();
}
inline ::google::genomics::v1::VariantSet* UpdateVariantSetRequest::mutable_variant_set() {
  
  if (variant_set_ == NULL) {
    _slow_mutable_variant_set();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateVariantSetRequest.variant_set)
  return variant_set_;
}
inline ::google::genomics::v1::VariantSet* UpdateVariantSetRequest::release_variant_set() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateVariantSetRequest.variant_set)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_variant_set();
  } else {
    ::google::genomics::v1::VariantSet* temp = variant_set_;
    variant_set_ = NULL;
    return temp;
  }
}
inline  void UpdateVariantSetRequest::set_allocated_variant_set(::google::genomics::v1::VariantSet* variant_set) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete variant_set_;
  }
  if (variant_set != NULL) {
    _slow_set_allocated_variant_set(message_arena, &variant_set);
  }
  variant_set_ = variant_set;
  if (variant_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateVariantSetRequest.variant_set)
}

// .google.protobuf.FieldMask update_mask = 5;
inline bool UpdateVariantSetRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline void UpdateVariantSetRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) delete update_mask_;
  update_mask_ = NULL;
}
inline const ::google::protobuf::FieldMask& UpdateVariantSetRequest::update_mask() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateVariantSetRequest.update_mask)
  return update_mask_ != NULL ? *update_mask_
                         : *::google::protobuf::FieldMask::internal_default_instance();
}
inline ::google::protobuf::FieldMask* UpdateVariantSetRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    _slow_mutable_update_mask();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateVariantSetRequest.update_mask)
  return update_mask_;
}
inline ::google::protobuf::FieldMask* UpdateVariantSetRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateVariantSetRequest.update_mask)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_update_mask();
  } else {
    ::google::protobuf::FieldMask* temp = update_mask_;
    update_mask_ = NULL;
    return temp;
  }
}
inline  void UpdateVariantSetRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete update_mask_;
  }
  if (update_mask != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(update_mask);
    }
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateVariantSetRequest.update_mask)
}

// -------------------------------------------------------------------

// SearchVariantsRequest

// repeated string variant_set_ids = 1;
inline int SearchVariantsRequest::variant_set_ids_size() const {
  return variant_set_ids_.size();
}
inline void SearchVariantsRequest::clear_variant_set_ids() {
  variant_set_ids_.Clear();
}
inline const ::std::string& SearchVariantsRequest::variant_set_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantsRequest.variant_set_ids)
  return variant_set_ids_.Get(index);
}
inline ::std::string* SearchVariantsRequest::mutable_variant_set_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchVariantsRequest.variant_set_ids)
  return variant_set_ids_.Mutable(index);
}
inline void SearchVariantsRequest::set_variant_set_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantsRequest.variant_set_ids)
  variant_set_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SearchVariantsRequest::set_variant_set_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantsRequest.variant_set_ids)
  variant_set_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SearchVariantsRequest::set_variant_set_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  variant_set_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchVariantsRequest.variant_set_ids)
}
inline void SearchVariantsRequest::set_variant_set_ids(int index, const char* value, size_t size) {
  variant_set_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchVariantsRequest.variant_set_ids)
}
inline ::std::string* SearchVariantsRequest::add_variant_set_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.SearchVariantsRequest.variant_set_ids)
  return variant_set_ids_.Add();
}
inline void SearchVariantsRequest::add_variant_set_ids(const ::std::string& value) {
  variant_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchVariantsRequest.variant_set_ids)
}
#if LANG_CXX11
inline void SearchVariantsRequest::add_variant_set_ids(::std::string&& value) {
  variant_set_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchVariantsRequest.variant_set_ids)
}
#endif
inline void SearchVariantsRequest::add_variant_set_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  variant_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.SearchVariantsRequest.variant_set_ids)
}
inline void SearchVariantsRequest::add_variant_set_ids(const char* value, size_t size) {
  variant_set_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.SearchVariantsRequest.variant_set_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchVariantsRequest::variant_set_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchVariantsRequest.variant_set_ids)
  return variant_set_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchVariantsRequest::mutable_variant_set_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchVariantsRequest.variant_set_ids)
  return &variant_set_ids_;
}

// string variant_name = 2;
inline void SearchVariantsRequest::clear_variant_name() {
  variant_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchVariantsRequest::variant_name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantsRequest.variant_name)
  return variant_name_.Get();
}
inline void SearchVariantsRequest::set_variant_name(const ::std::string& value) {
  
  variant_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantsRequest.variant_name)
}
inline void SearchVariantsRequest::set_variant_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variant_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchVariantsRequest.variant_name)
}
inline void SearchVariantsRequest::set_variant_name(const char* value,
    size_t size) {
  
  variant_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchVariantsRequest.variant_name)
}
inline ::std::string* SearchVariantsRequest::mutable_variant_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchVariantsRequest.variant_name)
  return variant_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchVariantsRequest::release_variant_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchVariantsRequest.variant_name)
  
  return variant_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchVariantsRequest::unsafe_arena_release_variant_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchVariantsRequest.variant_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return variant_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchVariantsRequest::set_allocated_variant_name(::std::string* variant_name) {
  if (variant_name != NULL) {
    
  } else {
    
  }
  variant_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variant_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchVariantsRequest.variant_name)
}
inline void SearchVariantsRequest::unsafe_arena_set_allocated_variant_name(
    ::std::string* variant_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (variant_name != NULL) {
    
  } else {
    
  }
  variant_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      variant_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchVariantsRequest.variant_name)
}

// repeated string call_set_ids = 3;
inline int SearchVariantsRequest::call_set_ids_size() const {
  return call_set_ids_.size();
}
inline void SearchVariantsRequest::clear_call_set_ids() {
  call_set_ids_.Clear();
}
inline const ::std::string& SearchVariantsRequest::call_set_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantsRequest.call_set_ids)
  return call_set_ids_.Get(index);
}
inline ::std::string* SearchVariantsRequest::mutable_call_set_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchVariantsRequest.call_set_ids)
  return call_set_ids_.Mutable(index);
}
inline void SearchVariantsRequest::set_call_set_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantsRequest.call_set_ids)
  call_set_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SearchVariantsRequest::set_call_set_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantsRequest.call_set_ids)
  call_set_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SearchVariantsRequest::set_call_set_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  call_set_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchVariantsRequest.call_set_ids)
}
inline void SearchVariantsRequest::set_call_set_ids(int index, const char* value, size_t size) {
  call_set_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchVariantsRequest.call_set_ids)
}
inline ::std::string* SearchVariantsRequest::add_call_set_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.SearchVariantsRequest.call_set_ids)
  return call_set_ids_.Add();
}
inline void SearchVariantsRequest::add_call_set_ids(const ::std::string& value) {
  call_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchVariantsRequest.call_set_ids)
}
#if LANG_CXX11
inline void SearchVariantsRequest::add_call_set_ids(::std::string&& value) {
  call_set_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchVariantsRequest.call_set_ids)
}
#endif
inline void SearchVariantsRequest::add_call_set_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  call_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.SearchVariantsRequest.call_set_ids)
}
inline void SearchVariantsRequest::add_call_set_ids(const char* value, size_t size) {
  call_set_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.SearchVariantsRequest.call_set_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchVariantsRequest::call_set_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchVariantsRequest.call_set_ids)
  return call_set_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchVariantsRequest::mutable_call_set_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchVariantsRequest.call_set_ids)
  return &call_set_ids_;
}

// string reference_name = 4;
inline void SearchVariantsRequest::clear_reference_name() {
  reference_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchVariantsRequest::reference_name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantsRequest.reference_name)
  return reference_name_.Get();
}
inline void SearchVariantsRequest::set_reference_name(const ::std::string& value) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantsRequest.reference_name)
}
inline void SearchVariantsRequest::set_reference_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchVariantsRequest.reference_name)
}
inline void SearchVariantsRequest::set_reference_name(const char* value,
    size_t size) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchVariantsRequest.reference_name)
}
inline ::std::string* SearchVariantsRequest::mutable_reference_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchVariantsRequest.reference_name)
  return reference_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchVariantsRequest::release_reference_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchVariantsRequest.reference_name)
  
  return reference_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchVariantsRequest::unsafe_arena_release_reference_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchVariantsRequest.reference_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchVariantsRequest::set_allocated_reference_name(::std::string* reference_name) {
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchVariantsRequest.reference_name)
}
inline void SearchVariantsRequest::unsafe_arena_set_allocated_reference_name(
    ::std::string* reference_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchVariantsRequest.reference_name)
}

// int64 start = 5;
inline void SearchVariantsRequest::clear_start() {
  start_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SearchVariantsRequest::start() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantsRequest.start)
  return start_;
}
inline void SearchVariantsRequest::set_start(::google::protobuf::int64 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantsRequest.start)
}

// int64 end = 6;
inline void SearchVariantsRequest::clear_end() {
  end_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SearchVariantsRequest::end() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantsRequest.end)
  return end_;
}
inline void SearchVariantsRequest::set_end(::google::protobuf::int64 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantsRequest.end)
}

// string page_token = 7;
inline void SearchVariantsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchVariantsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantsRequest.page_token)
  return page_token_.Get();
}
inline void SearchVariantsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantsRequest.page_token)
}
inline void SearchVariantsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchVariantsRequest.page_token)
}
inline void SearchVariantsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchVariantsRequest.page_token)
}
inline ::std::string* SearchVariantsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchVariantsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchVariantsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchVariantsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchVariantsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchVariantsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchVariantsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchVariantsRequest.page_token)
}
inline void SearchVariantsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchVariantsRequest.page_token)
}

// int32 page_size = 8;
inline void SearchVariantsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 SearchVariantsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantsRequest.page_size)
  return page_size_;
}
inline void SearchVariantsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantsRequest.page_size)
}

// int32 max_calls = 9;
inline void SearchVariantsRequest::clear_max_calls() {
  max_calls_ = 0;
}
inline ::google::protobuf::int32 SearchVariantsRequest::max_calls() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantsRequest.max_calls)
  return max_calls_;
}
inline void SearchVariantsRequest::set_max_calls(::google::protobuf::int32 value) {
  
  max_calls_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantsRequest.max_calls)
}

// -------------------------------------------------------------------

// SearchVariantsResponse

// repeated .google.genomics.v1.Variant variants = 1;
inline int SearchVariantsResponse::variants_size() const {
  return variants_.size();
}
inline void SearchVariantsResponse::clear_variants() {
  variants_.Clear();
}
inline const ::google::genomics::v1::Variant& SearchVariantsResponse::variants(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantsResponse.variants)
  return variants_.Get(index);
}
inline ::google::genomics::v1::Variant* SearchVariantsResponse::mutable_variants(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchVariantsResponse.variants)
  return variants_.Mutable(index);
}
inline ::google::genomics::v1::Variant* SearchVariantsResponse::add_variants() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchVariantsResponse.variants)
  return variants_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Variant >*
SearchVariantsResponse::mutable_variants() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchVariantsResponse.variants)
  return &variants_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Variant >&
SearchVariantsResponse::variants() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchVariantsResponse.variants)
  return variants_;
}

// string next_page_token = 2;
inline void SearchVariantsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchVariantsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchVariantsResponse.next_page_token)
  return next_page_token_.Get();
}
inline void SearchVariantsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchVariantsResponse.next_page_token)
}
inline void SearchVariantsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchVariantsResponse.next_page_token)
}
inline void SearchVariantsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchVariantsResponse.next_page_token)
}
inline ::std::string* SearchVariantsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchVariantsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchVariantsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchVariantsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchVariantsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchVariantsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchVariantsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchVariantsResponse.next_page_token)
}
inline void SearchVariantsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchVariantsResponse.next_page_token)
}

// -------------------------------------------------------------------

// CreateVariantRequest

// .google.genomics.v1.Variant variant = 1;
inline bool CreateVariantRequest::has_variant() const {
  return this != internal_default_instance() && variant_ != NULL;
}
inline void CreateVariantRequest::clear_variant() {
  if (GetArenaNoVirtual() == NULL && variant_ != NULL) delete variant_;
  variant_ = NULL;
}
inline const ::google::genomics::v1::Variant& CreateVariantRequest::variant() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.CreateVariantRequest.variant)
  return variant_ != NULL ? *variant_
                         : *::google::genomics::v1::Variant::internal_default_instance();
}
inline ::google::genomics::v1::Variant* CreateVariantRequest::mutable_variant() {
  
  if (variant_ == NULL) {
    _slow_mutable_variant();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.CreateVariantRequest.variant)
  return variant_;
}
inline ::google::genomics::v1::Variant* CreateVariantRequest::release_variant() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.CreateVariantRequest.variant)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_variant();
  } else {
    ::google::genomics::v1::Variant* temp = variant_;
    variant_ = NULL;
    return temp;
  }
}
inline  void CreateVariantRequest::set_allocated_variant(::google::genomics::v1::Variant* variant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete variant_;
  }
  if (variant != NULL) {
    _slow_set_allocated_variant(message_arena, &variant);
  }
  variant_ = variant;
  if (variant) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.CreateVariantRequest.variant)
}

// -------------------------------------------------------------------

// UpdateVariantRequest

// string variant_id = 1;
inline void UpdateVariantRequest::clear_variant_id() {
  variant_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& UpdateVariantRequest::variant_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateVariantRequest.variant_id)
  return variant_id_.Get();
}
inline void UpdateVariantRequest::set_variant_id(const ::std::string& value) {
  
  variant_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.UpdateVariantRequest.variant_id)
}
inline void UpdateVariantRequest::set_variant_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variant_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.UpdateVariantRequest.variant_id)
}
inline void UpdateVariantRequest::set_variant_id(const char* value,
    size_t size) {
  
  variant_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.UpdateVariantRequest.variant_id)
}
inline ::std::string* UpdateVariantRequest::mutable_variant_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateVariantRequest.variant_id)
  return variant_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateVariantRequest::release_variant_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateVariantRequest.variant_id)
  
  return variant_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateVariantRequest::unsafe_arena_release_variant_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.UpdateVariantRequest.variant_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return variant_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UpdateVariantRequest::set_allocated_variant_id(::std::string* variant_id) {
  if (variant_id != NULL) {
    
  } else {
    
  }
  variant_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variant_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateVariantRequest.variant_id)
}
inline void UpdateVariantRequest::unsafe_arena_set_allocated_variant_id(
    ::std::string* variant_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (variant_id != NULL) {
    
  } else {
    
  }
  variant_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      variant_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.UpdateVariantRequest.variant_id)
}

// .google.genomics.v1.Variant variant = 2;
inline bool UpdateVariantRequest::has_variant() const {
  return this != internal_default_instance() && variant_ != NULL;
}
inline void UpdateVariantRequest::clear_variant() {
  if (GetArenaNoVirtual() == NULL && variant_ != NULL) delete variant_;
  variant_ = NULL;
}
inline const ::google::genomics::v1::Variant& UpdateVariantRequest::variant() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateVariantRequest.variant)
  return variant_ != NULL ? *variant_
                         : *::google::genomics::v1::Variant::internal_default_instance();
}
inline ::google::genomics::v1::Variant* UpdateVariantRequest::mutable_variant() {
  
  if (variant_ == NULL) {
    _slow_mutable_variant();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateVariantRequest.variant)
  return variant_;
}
inline ::google::genomics::v1::Variant* UpdateVariantRequest::release_variant() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateVariantRequest.variant)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_variant();
  } else {
    ::google::genomics::v1::Variant* temp = variant_;
    variant_ = NULL;
    return temp;
  }
}
inline  void UpdateVariantRequest::set_allocated_variant(::google::genomics::v1::Variant* variant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete variant_;
  }
  if (variant != NULL) {
    _slow_set_allocated_variant(message_arena, &variant);
  }
  variant_ = variant;
  if (variant) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateVariantRequest.variant)
}

// .google.protobuf.FieldMask update_mask = 3;
inline bool UpdateVariantRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline void UpdateVariantRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) delete update_mask_;
  update_mask_ = NULL;
}
inline const ::google::protobuf::FieldMask& UpdateVariantRequest::update_mask() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateVariantRequest.update_mask)
  return update_mask_ != NULL ? *update_mask_
                         : *::google::protobuf::FieldMask::internal_default_instance();
}
inline ::google::protobuf::FieldMask* UpdateVariantRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    _slow_mutable_update_mask();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateVariantRequest.update_mask)
  return update_mask_;
}
inline ::google::protobuf::FieldMask* UpdateVariantRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateVariantRequest.update_mask)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_update_mask();
  } else {
    ::google::protobuf::FieldMask* temp = update_mask_;
    update_mask_ = NULL;
    return temp;
  }
}
inline  void UpdateVariantRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete update_mask_;
  }
  if (update_mask != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(update_mask);
    }
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateVariantRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteVariantRequest

// string variant_id = 1;
inline void DeleteVariantRequest::clear_variant_id() {
  variant_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteVariantRequest::variant_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.DeleteVariantRequest.variant_id)
  return variant_id_.Get();
}
inline void DeleteVariantRequest::set_variant_id(const ::std::string& value) {
  
  variant_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.DeleteVariantRequest.variant_id)
}
inline void DeleteVariantRequest::set_variant_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variant_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.DeleteVariantRequest.variant_id)
}
inline void DeleteVariantRequest::set_variant_id(const char* value,
    size_t size) {
  
  variant_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.DeleteVariantRequest.variant_id)
}
inline ::std::string* DeleteVariantRequest::mutable_variant_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.DeleteVariantRequest.variant_id)
  return variant_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteVariantRequest::release_variant_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.DeleteVariantRequest.variant_id)
  
  return variant_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteVariantRequest::unsafe_arena_release_variant_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.DeleteVariantRequest.variant_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return variant_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteVariantRequest::set_allocated_variant_id(::std::string* variant_id) {
  if (variant_id != NULL) {
    
  } else {
    
  }
  variant_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variant_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.DeleteVariantRequest.variant_id)
}
inline void DeleteVariantRequest::unsafe_arena_set_allocated_variant_id(
    ::std::string* variant_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (variant_id != NULL) {
    
  } else {
    
  }
  variant_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      variant_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.DeleteVariantRequest.variant_id)
}

// -------------------------------------------------------------------

// GetVariantRequest

// string variant_id = 1;
inline void GetVariantRequest::clear_variant_id() {
  variant_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetVariantRequest::variant_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.GetVariantRequest.variant_id)
  return variant_id_.Get();
}
inline void GetVariantRequest::set_variant_id(const ::std::string& value) {
  
  variant_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.GetVariantRequest.variant_id)
}
inline void GetVariantRequest::set_variant_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variant_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.GetVariantRequest.variant_id)
}
inline void GetVariantRequest::set_variant_id(const char* value,
    size_t size) {
  
  variant_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.GetVariantRequest.variant_id)
}
inline ::std::string* GetVariantRequest::mutable_variant_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.GetVariantRequest.variant_id)
  return variant_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetVariantRequest::release_variant_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.GetVariantRequest.variant_id)
  
  return variant_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetVariantRequest::unsafe_arena_release_variant_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.GetVariantRequest.variant_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return variant_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetVariantRequest::set_allocated_variant_id(::std::string* variant_id) {
  if (variant_id != NULL) {
    
  } else {
    
  }
  variant_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variant_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.GetVariantRequest.variant_id)
}
inline void GetVariantRequest::unsafe_arena_set_allocated_variant_id(
    ::std::string* variant_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (variant_id != NULL) {
    
  } else {
    
  }
  variant_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      variant_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.GetVariantRequest.variant_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MergeVariantsRequest

// string variant_set_id = 1;
inline void MergeVariantsRequest::clear_variant_set_id() {
  variant_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& MergeVariantsRequest::variant_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.MergeVariantsRequest.variant_set_id)
  return variant_set_id_.Get();
}
inline void MergeVariantsRequest::set_variant_set_id(const ::std::string& value) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.MergeVariantsRequest.variant_set_id)
}
inline void MergeVariantsRequest::set_variant_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.MergeVariantsRequest.variant_set_id)
}
inline void MergeVariantsRequest::set_variant_set_id(const char* value,
    size_t size) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.MergeVariantsRequest.variant_set_id)
}
inline ::std::string* MergeVariantsRequest::mutable_variant_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.MergeVariantsRequest.variant_set_id)
  return variant_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* MergeVariantsRequest::release_variant_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.MergeVariantsRequest.variant_set_id)
  
  return variant_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* MergeVariantsRequest::unsafe_arena_release_variant_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.MergeVariantsRequest.variant_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return variant_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void MergeVariantsRequest::set_allocated_variant_set_id(::std::string* variant_set_id) {
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variant_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.MergeVariantsRequest.variant_set_id)
}
inline void MergeVariantsRequest::unsafe_arena_set_allocated_variant_set_id(
    ::std::string* variant_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      variant_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.MergeVariantsRequest.variant_set_id)
}

// repeated .google.genomics.v1.Variant variants = 2;
inline int MergeVariantsRequest::variants_size() const {
  return variants_.size();
}
inline void MergeVariantsRequest::clear_variants() {
  variants_.Clear();
}
inline const ::google::genomics::v1::Variant& MergeVariantsRequest::variants(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.MergeVariantsRequest.variants)
  return variants_.Get(index);
}
inline ::google::genomics::v1::Variant* MergeVariantsRequest::mutable_variants(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.MergeVariantsRequest.variants)
  return variants_.Mutable(index);
}
inline ::google::genomics::v1::Variant* MergeVariantsRequest::add_variants() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.MergeVariantsRequest.variants)
  return variants_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Variant >*
MergeVariantsRequest::mutable_variants() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.MergeVariantsRequest.variants)
  return &variants_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Variant >&
MergeVariantsRequest::variants() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.MergeVariantsRequest.variants)
  return variants_;
}

// map<string, .google.genomics.v1.InfoMergeOperation> info_merge_config = 3;
inline int MergeVariantsRequest::info_merge_config_size() const {
  return info_merge_config_.size();
}
inline void MergeVariantsRequest::clear_info_merge_config() {
  info_merge_config_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::genomics::v1::InfoMergeOperation >&
MergeVariantsRequest::info_merge_config() const {
  // @@protoc_insertion_point(field_map:google.genomics.v1.MergeVariantsRequest.info_merge_config)
  return info_merge_config_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::genomics::v1::InfoMergeOperation >*
MergeVariantsRequest::mutable_info_merge_config() {
  // @@protoc_insertion_point(field_mutable_map:google.genomics.v1.MergeVariantsRequest.info_merge_config)
  return info_merge_config_.MutableMap();
}

// -------------------------------------------------------------------

// SearchCallSetsRequest

// repeated string variant_set_ids = 1;
inline int SearchCallSetsRequest::variant_set_ids_size() const {
  return variant_set_ids_.size();
}
inline void SearchCallSetsRequest::clear_variant_set_ids() {
  variant_set_ids_.Clear();
}
inline const ::std::string& SearchCallSetsRequest::variant_set_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchCallSetsRequest.variant_set_ids)
  return variant_set_ids_.Get(index);
}
inline ::std::string* SearchCallSetsRequest::mutable_variant_set_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchCallSetsRequest.variant_set_ids)
  return variant_set_ids_.Mutable(index);
}
inline void SearchCallSetsRequest::set_variant_set_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchCallSetsRequest.variant_set_ids)
  variant_set_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SearchCallSetsRequest::set_variant_set_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchCallSetsRequest.variant_set_ids)
  variant_set_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SearchCallSetsRequest::set_variant_set_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  variant_set_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchCallSetsRequest.variant_set_ids)
}
inline void SearchCallSetsRequest::set_variant_set_ids(int index, const char* value, size_t size) {
  variant_set_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchCallSetsRequest.variant_set_ids)
}
inline ::std::string* SearchCallSetsRequest::add_variant_set_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.SearchCallSetsRequest.variant_set_ids)
  return variant_set_ids_.Add();
}
inline void SearchCallSetsRequest::add_variant_set_ids(const ::std::string& value) {
  variant_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchCallSetsRequest.variant_set_ids)
}
#if LANG_CXX11
inline void SearchCallSetsRequest::add_variant_set_ids(::std::string&& value) {
  variant_set_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchCallSetsRequest.variant_set_ids)
}
#endif
inline void SearchCallSetsRequest::add_variant_set_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  variant_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.SearchCallSetsRequest.variant_set_ids)
}
inline void SearchCallSetsRequest::add_variant_set_ids(const char* value, size_t size) {
  variant_set_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.SearchCallSetsRequest.variant_set_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchCallSetsRequest::variant_set_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchCallSetsRequest.variant_set_ids)
  return variant_set_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchCallSetsRequest::mutable_variant_set_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchCallSetsRequest.variant_set_ids)
  return &variant_set_ids_;
}

// string name = 2;
inline void SearchCallSetsRequest::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchCallSetsRequest::name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchCallSetsRequest.name)
  return name_.Get();
}
inline void SearchCallSetsRequest::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchCallSetsRequest.name)
}
inline void SearchCallSetsRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchCallSetsRequest.name)
}
inline void SearchCallSetsRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchCallSetsRequest.name)
}
inline ::std::string* SearchCallSetsRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchCallSetsRequest.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchCallSetsRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchCallSetsRequest.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchCallSetsRequest::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchCallSetsRequest.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchCallSetsRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchCallSetsRequest.name)
}
inline void SearchCallSetsRequest::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchCallSetsRequest.name)
}

// string page_token = 3;
inline void SearchCallSetsRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchCallSetsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchCallSetsRequest.page_token)
  return page_token_.Get();
}
inline void SearchCallSetsRequest::set_page_token(const ::std::string& value) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchCallSetsRequest.page_token)
}
inline void SearchCallSetsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchCallSetsRequest.page_token)
}
inline void SearchCallSetsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchCallSetsRequest.page_token)
}
inline ::std::string* SearchCallSetsRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchCallSetsRequest.page_token)
  return page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchCallSetsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchCallSetsRequest.page_token)
  
  return page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchCallSetsRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchCallSetsRequest.page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchCallSetsRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchCallSetsRequest.page_token)
}
inline void SearchCallSetsRequest::unsafe_arena_set_allocated_page_token(
    ::std::string* page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchCallSetsRequest.page_token)
}

// int32 page_size = 4;
inline void SearchCallSetsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 SearchCallSetsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchCallSetsRequest.page_size)
  return page_size_;
}
inline void SearchCallSetsRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchCallSetsRequest.page_size)
}

// -------------------------------------------------------------------

// SearchCallSetsResponse

// repeated .google.genomics.v1.CallSet call_sets = 1;
inline int SearchCallSetsResponse::call_sets_size() const {
  return call_sets_.size();
}
inline void SearchCallSetsResponse::clear_call_sets() {
  call_sets_.Clear();
}
inline const ::google::genomics::v1::CallSet& SearchCallSetsResponse::call_sets(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchCallSetsResponse.call_sets)
  return call_sets_.Get(index);
}
inline ::google::genomics::v1::CallSet* SearchCallSetsResponse::mutable_call_sets(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchCallSetsResponse.call_sets)
  return call_sets_.Mutable(index);
}
inline ::google::genomics::v1::CallSet* SearchCallSetsResponse::add_call_sets() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.SearchCallSetsResponse.call_sets)
  return call_sets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::CallSet >*
SearchCallSetsResponse::mutable_call_sets() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.SearchCallSetsResponse.call_sets)
  return &call_sets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::CallSet >&
SearchCallSetsResponse::call_sets() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.SearchCallSetsResponse.call_sets)
  return call_sets_;
}

// string next_page_token = 2;
inline void SearchCallSetsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SearchCallSetsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.SearchCallSetsResponse.next_page_token)
  return next_page_token_.Get();
}
inline void SearchCallSetsResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.SearchCallSetsResponse.next_page_token)
}
inline void SearchCallSetsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.SearchCallSetsResponse.next_page_token)
}
inline void SearchCallSetsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.SearchCallSetsResponse.next_page_token)
}
inline ::std::string* SearchCallSetsResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.SearchCallSetsResponse.next_page_token)
  return next_page_token_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchCallSetsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.SearchCallSetsResponse.next_page_token)
  
  return next_page_token_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SearchCallSetsResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.SearchCallSetsResponse.next_page_token)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return next_page_token_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SearchCallSetsResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.SearchCallSetsResponse.next_page_token)
}
inline void SearchCallSetsResponse::unsafe_arena_set_allocated_next_page_token(
    ::std::string* next_page_token) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.SearchCallSetsResponse.next_page_token)
}

// -------------------------------------------------------------------

// CreateCallSetRequest

// .google.genomics.v1.CallSet call_set = 1;
inline bool CreateCallSetRequest::has_call_set() const {
  return this != internal_default_instance() && call_set_ != NULL;
}
inline void CreateCallSetRequest::clear_call_set() {
  if (GetArenaNoVirtual() == NULL && call_set_ != NULL) delete call_set_;
  call_set_ = NULL;
}
inline const ::google::genomics::v1::CallSet& CreateCallSetRequest::call_set() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.CreateCallSetRequest.call_set)
  return call_set_ != NULL ? *call_set_
                         : *::google::genomics::v1::CallSet::internal_default_instance();
}
inline ::google::genomics::v1::CallSet* CreateCallSetRequest::mutable_call_set() {
  
  if (call_set_ == NULL) {
    _slow_mutable_call_set();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.CreateCallSetRequest.call_set)
  return call_set_;
}
inline ::google::genomics::v1::CallSet* CreateCallSetRequest::release_call_set() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.CreateCallSetRequest.call_set)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_call_set();
  } else {
    ::google::genomics::v1::CallSet* temp = call_set_;
    call_set_ = NULL;
    return temp;
  }
}
inline  void CreateCallSetRequest::set_allocated_call_set(::google::genomics::v1::CallSet* call_set) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete call_set_;
  }
  if (call_set != NULL) {
    _slow_set_allocated_call_set(message_arena, &call_set);
  }
  call_set_ = call_set;
  if (call_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.CreateCallSetRequest.call_set)
}

// -------------------------------------------------------------------

// UpdateCallSetRequest

// string call_set_id = 1;
inline void UpdateCallSetRequest::clear_call_set_id() {
  call_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& UpdateCallSetRequest::call_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateCallSetRequest.call_set_id)
  return call_set_id_.Get();
}
inline void UpdateCallSetRequest::set_call_set_id(const ::std::string& value) {
  
  call_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.UpdateCallSetRequest.call_set_id)
}
inline void UpdateCallSetRequest::set_call_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  call_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.UpdateCallSetRequest.call_set_id)
}
inline void UpdateCallSetRequest::set_call_set_id(const char* value,
    size_t size) {
  
  call_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.UpdateCallSetRequest.call_set_id)
}
inline ::std::string* UpdateCallSetRequest::mutable_call_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateCallSetRequest.call_set_id)
  return call_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateCallSetRequest::release_call_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateCallSetRequest.call_set_id)
  
  return call_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* UpdateCallSetRequest::unsafe_arena_release_call_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.UpdateCallSetRequest.call_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return call_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void UpdateCallSetRequest::set_allocated_call_set_id(::std::string* call_set_id) {
  if (call_set_id != NULL) {
    
  } else {
    
  }
  call_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), call_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateCallSetRequest.call_set_id)
}
inline void UpdateCallSetRequest::unsafe_arena_set_allocated_call_set_id(
    ::std::string* call_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (call_set_id != NULL) {
    
  } else {
    
  }
  call_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      call_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.UpdateCallSetRequest.call_set_id)
}

// .google.genomics.v1.CallSet call_set = 2;
inline bool UpdateCallSetRequest::has_call_set() const {
  return this != internal_default_instance() && call_set_ != NULL;
}
inline void UpdateCallSetRequest::clear_call_set() {
  if (GetArenaNoVirtual() == NULL && call_set_ != NULL) delete call_set_;
  call_set_ = NULL;
}
inline const ::google::genomics::v1::CallSet& UpdateCallSetRequest::call_set() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateCallSetRequest.call_set)
  return call_set_ != NULL ? *call_set_
                         : *::google::genomics::v1::CallSet::internal_default_instance();
}
inline ::google::genomics::v1::CallSet* UpdateCallSetRequest::mutable_call_set() {
  
  if (call_set_ == NULL) {
    _slow_mutable_call_set();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateCallSetRequest.call_set)
  return call_set_;
}
inline ::google::genomics::v1::CallSet* UpdateCallSetRequest::release_call_set() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateCallSetRequest.call_set)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_call_set();
  } else {
    ::google::genomics::v1::CallSet* temp = call_set_;
    call_set_ = NULL;
    return temp;
  }
}
inline  void UpdateCallSetRequest::set_allocated_call_set(::google::genomics::v1::CallSet* call_set) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete call_set_;
  }
  if (call_set != NULL) {
    _slow_set_allocated_call_set(message_arena, &call_set);
  }
  call_set_ = call_set;
  if (call_set) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateCallSetRequest.call_set)
}

// .google.protobuf.FieldMask update_mask = 3;
inline bool UpdateCallSetRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline void UpdateCallSetRequest::clear_update_mask() {
  if (GetArenaNoVirtual() == NULL && update_mask_ != NULL) delete update_mask_;
  update_mask_ = NULL;
}
inline const ::google::protobuf::FieldMask& UpdateCallSetRequest::update_mask() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.UpdateCallSetRequest.update_mask)
  return update_mask_ != NULL ? *update_mask_
                         : *::google::protobuf::FieldMask::internal_default_instance();
}
inline ::google::protobuf::FieldMask* UpdateCallSetRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    _slow_mutable_update_mask();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.UpdateCallSetRequest.update_mask)
  return update_mask_;
}
inline ::google::protobuf::FieldMask* UpdateCallSetRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.UpdateCallSetRequest.update_mask)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_update_mask();
  } else {
    ::google::protobuf::FieldMask* temp = update_mask_;
    update_mask_ = NULL;
    return temp;
  }
}
inline  void UpdateCallSetRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete update_mask_;
  }
  if (update_mask != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(update_mask);
    }
  }
  update_mask_ = update_mask;
  if (update_mask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.UpdateCallSetRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteCallSetRequest

// string call_set_id = 1;
inline void DeleteCallSetRequest::clear_call_set_id() {
  call_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& DeleteCallSetRequest::call_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.DeleteCallSetRequest.call_set_id)
  return call_set_id_.Get();
}
inline void DeleteCallSetRequest::set_call_set_id(const ::std::string& value) {
  
  call_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.DeleteCallSetRequest.call_set_id)
}
inline void DeleteCallSetRequest::set_call_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  call_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.DeleteCallSetRequest.call_set_id)
}
inline void DeleteCallSetRequest::set_call_set_id(const char* value,
    size_t size) {
  
  call_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.DeleteCallSetRequest.call_set_id)
}
inline ::std::string* DeleteCallSetRequest::mutable_call_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.DeleteCallSetRequest.call_set_id)
  return call_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteCallSetRequest::release_call_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.DeleteCallSetRequest.call_set_id)
  
  return call_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* DeleteCallSetRequest::unsafe_arena_release_call_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.DeleteCallSetRequest.call_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return call_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void DeleteCallSetRequest::set_allocated_call_set_id(::std::string* call_set_id) {
  if (call_set_id != NULL) {
    
  } else {
    
  }
  call_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), call_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.DeleteCallSetRequest.call_set_id)
}
inline void DeleteCallSetRequest::unsafe_arena_set_allocated_call_set_id(
    ::std::string* call_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (call_set_id != NULL) {
    
  } else {
    
  }
  call_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      call_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.DeleteCallSetRequest.call_set_id)
}

// -------------------------------------------------------------------

// GetCallSetRequest

// string call_set_id = 1;
inline void GetCallSetRequest::clear_call_set_id() {
  call_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& GetCallSetRequest::call_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.GetCallSetRequest.call_set_id)
  return call_set_id_.Get();
}
inline void GetCallSetRequest::set_call_set_id(const ::std::string& value) {
  
  call_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.GetCallSetRequest.call_set_id)
}
inline void GetCallSetRequest::set_call_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  call_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.GetCallSetRequest.call_set_id)
}
inline void GetCallSetRequest::set_call_set_id(const char* value,
    size_t size) {
  
  call_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.GetCallSetRequest.call_set_id)
}
inline ::std::string* GetCallSetRequest::mutable_call_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.GetCallSetRequest.call_set_id)
  return call_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetCallSetRequest::release_call_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.GetCallSetRequest.call_set_id)
  
  return call_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* GetCallSetRequest::unsafe_arena_release_call_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.GetCallSetRequest.call_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return call_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void GetCallSetRequest::set_allocated_call_set_id(::std::string* call_set_id) {
  if (call_set_id != NULL) {
    
  } else {
    
  }
  call_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), call_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.GetCallSetRequest.call_set_id)
}
inline void GetCallSetRequest::unsafe_arena_set_allocated_call_set_id(
    ::std::string* call_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (call_set_id != NULL) {
    
  } else {
    
  }
  call_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      call_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.GetCallSetRequest.call_set_id)
}

// -------------------------------------------------------------------

// StreamVariantsRequest

// string project_id = 1;
inline void StreamVariantsRequest::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StreamVariantsRequest::project_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.StreamVariantsRequest.project_id)
  return project_id_.Get();
}
inline void StreamVariantsRequest::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.StreamVariantsRequest.project_id)
}
inline void StreamVariantsRequest::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.StreamVariantsRequest.project_id)
}
inline void StreamVariantsRequest::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.StreamVariantsRequest.project_id)
}
inline ::std::string* StreamVariantsRequest::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.StreamVariantsRequest.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamVariantsRequest::release_project_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.StreamVariantsRequest.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamVariantsRequest::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.StreamVariantsRequest.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StreamVariantsRequest::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.StreamVariantsRequest.project_id)
}
inline void StreamVariantsRequest::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.StreamVariantsRequest.project_id)
}

// string variant_set_id = 2;
inline void StreamVariantsRequest::clear_variant_set_id() {
  variant_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StreamVariantsRequest::variant_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.StreamVariantsRequest.variant_set_id)
  return variant_set_id_.Get();
}
inline void StreamVariantsRequest::set_variant_set_id(const ::std::string& value) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.StreamVariantsRequest.variant_set_id)
}
inline void StreamVariantsRequest::set_variant_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.StreamVariantsRequest.variant_set_id)
}
inline void StreamVariantsRequest::set_variant_set_id(const char* value,
    size_t size) {
  
  variant_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.StreamVariantsRequest.variant_set_id)
}
inline ::std::string* StreamVariantsRequest::mutable_variant_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.StreamVariantsRequest.variant_set_id)
  return variant_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamVariantsRequest::release_variant_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.StreamVariantsRequest.variant_set_id)
  
  return variant_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamVariantsRequest::unsafe_arena_release_variant_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.StreamVariantsRequest.variant_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return variant_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StreamVariantsRequest::set_allocated_variant_set_id(::std::string* variant_set_id) {
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variant_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.StreamVariantsRequest.variant_set_id)
}
inline void StreamVariantsRequest::unsafe_arena_set_allocated_variant_set_id(
    ::std::string* variant_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (variant_set_id != NULL) {
    
  } else {
    
  }
  variant_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      variant_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.StreamVariantsRequest.variant_set_id)
}

// repeated string call_set_ids = 3;
inline int StreamVariantsRequest::call_set_ids_size() const {
  return call_set_ids_.size();
}
inline void StreamVariantsRequest::clear_call_set_ids() {
  call_set_ids_.Clear();
}
inline const ::std::string& StreamVariantsRequest::call_set_ids(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.StreamVariantsRequest.call_set_ids)
  return call_set_ids_.Get(index);
}
inline ::std::string* StreamVariantsRequest::mutable_call_set_ids(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.StreamVariantsRequest.call_set_ids)
  return call_set_ids_.Mutable(index);
}
inline void StreamVariantsRequest::set_call_set_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.StreamVariantsRequest.call_set_ids)
  call_set_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void StreamVariantsRequest::set_call_set_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.genomics.v1.StreamVariantsRequest.call_set_ids)
  call_set_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void StreamVariantsRequest::set_call_set_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  call_set_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.StreamVariantsRequest.call_set_ids)
}
inline void StreamVariantsRequest::set_call_set_ids(int index, const char* value, size_t size) {
  call_set_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.StreamVariantsRequest.call_set_ids)
}
inline ::std::string* StreamVariantsRequest::add_call_set_ids() {
  // @@protoc_insertion_point(field_add_mutable:google.genomics.v1.StreamVariantsRequest.call_set_ids)
  return call_set_ids_.Add();
}
inline void StreamVariantsRequest::add_call_set_ids(const ::std::string& value) {
  call_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.StreamVariantsRequest.call_set_ids)
}
#if LANG_CXX11
inline void StreamVariantsRequest::add_call_set_ids(::std::string&& value) {
  call_set_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.genomics.v1.StreamVariantsRequest.call_set_ids)
}
#endif
inline void StreamVariantsRequest::add_call_set_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  call_set_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.genomics.v1.StreamVariantsRequest.call_set_ids)
}
inline void StreamVariantsRequest::add_call_set_ids(const char* value, size_t size) {
  call_set_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.genomics.v1.StreamVariantsRequest.call_set_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StreamVariantsRequest::call_set_ids() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.StreamVariantsRequest.call_set_ids)
  return call_set_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StreamVariantsRequest::mutable_call_set_ids() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.StreamVariantsRequest.call_set_ids)
  return &call_set_ids_;
}

// string reference_name = 4;
inline void StreamVariantsRequest::clear_reference_name() {
  reference_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& StreamVariantsRequest::reference_name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.StreamVariantsRequest.reference_name)
  return reference_name_.Get();
}
inline void StreamVariantsRequest::set_reference_name(const ::std::string& value) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.StreamVariantsRequest.reference_name)
}
inline void StreamVariantsRequest::set_reference_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.StreamVariantsRequest.reference_name)
}
inline void StreamVariantsRequest::set_reference_name(const char* value,
    size_t size) {
  
  reference_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.StreamVariantsRequest.reference_name)
}
inline ::std::string* StreamVariantsRequest::mutable_reference_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.StreamVariantsRequest.reference_name)
  return reference_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamVariantsRequest::release_reference_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.StreamVariantsRequest.reference_name)
  
  return reference_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* StreamVariantsRequest::unsafe_arena_release_reference_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.StreamVariantsRequest.reference_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void StreamVariantsRequest::set_allocated_reference_name(::std::string* reference_name) {
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.StreamVariantsRequest.reference_name)
}
inline void StreamVariantsRequest::unsafe_arena_set_allocated_reference_name(
    ::std::string* reference_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_name != NULL) {
    
  } else {
    
  }
  reference_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.StreamVariantsRequest.reference_name)
}

// int64 start = 5;
inline void StreamVariantsRequest::clear_start() {
  start_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 StreamVariantsRequest::start() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.StreamVariantsRequest.start)
  return start_;
}
inline void StreamVariantsRequest::set_start(::google::protobuf::int64 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.StreamVariantsRequest.start)
}

// int64 end = 6;
inline void StreamVariantsRequest::clear_end() {
  end_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 StreamVariantsRequest::end() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.StreamVariantsRequest.end)
  return end_;
}
inline void StreamVariantsRequest::set_end(::google::protobuf::int64 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.StreamVariantsRequest.end)
}

// -------------------------------------------------------------------

// StreamVariantsResponse

// repeated .google.genomics.v1.Variant variants = 1;
inline int StreamVariantsResponse::variants_size() const {
  return variants_.size();
}
inline void StreamVariantsResponse::clear_variants() {
  variants_.Clear();
}
inline const ::google::genomics::v1::Variant& StreamVariantsResponse::variants(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.StreamVariantsResponse.variants)
  return variants_.Get(index);
}
inline ::google::genomics::v1::Variant* StreamVariantsResponse::mutable_variants(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.StreamVariantsResponse.variants)
  return variants_.Mutable(index);
}
inline ::google::genomics::v1::Variant* StreamVariantsResponse::add_variants() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.StreamVariantsResponse.variants)
  return variants_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Variant >*
StreamVariantsResponse::mutable_variants() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.StreamVariantsResponse.variants)
  return &variants_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::Variant >&
StreamVariantsResponse::variants() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.StreamVariantsResponse.variants)
  return variants_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v1
}  // namespace genomics
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::genomics::v1::VariantSetMetadata_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::genomics::v1::VariantSetMetadata_Type>() {
  return ::google::genomics::v1::VariantSetMetadata_Type_descriptor();
}
template <> struct is_proto_enum< ::google::genomics::v1::ImportVariantsRequest_Format> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::genomics::v1::ImportVariantsRequest_Format>() {
  return ::google::genomics::v1::ImportVariantsRequest_Format_descriptor();
}
template <> struct is_proto_enum< ::google::genomics::v1::ExportVariantSetRequest_Format> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::genomics::v1::ExportVariantSetRequest_Format>() {
  return ::google::genomics::v1::ExportVariantSetRequest_Format_descriptor();
}
template <> struct is_proto_enum< ::google::genomics::v1::InfoMergeOperation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::genomics::v1::InfoMergeOperation>() {
  return ::google::genomics::v1::InfoMergeOperation_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fgenomics_2fv1_2fvariants_2eproto__INCLUDED
