// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/readgroup.proto

#ifndef PROTOBUF_google_2fgenomics_2fv1_2freadgroup_2eproto__INCLUDED
#define PROTOBUF_google_2fgenomics_2fv1_2freadgroup_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace api {
}  // namespace api
namespace genomics {
namespace v1 {
class ReadGroup;
class ReadGroupDefaultTypeInternal;
extern ReadGroupDefaultTypeInternal _ReadGroup_default_instance_;
class ReadGroup_Experiment;
class ReadGroup_ExperimentDefaultTypeInternal;
extern ReadGroup_ExperimentDefaultTypeInternal _ReadGroup_Experiment_default_instance_;
class ReadGroup_InfoEntry;
class ReadGroup_InfoEntryDefaultTypeInternal;
extern ReadGroup_InfoEntryDefaultTypeInternal _ReadGroup_InfoEntry_default_instance_;
class ReadGroup_Program;
class ReadGroup_ProgramDefaultTypeInternal;
extern ReadGroup_ProgramDefaultTypeInternal _ReadGroup_Program_default_instance_;
}  // namespace v1
}  // namespace genomics
namespace protobuf {
class ListValue;
class ListValueDefaultTypeInternal;
extern ListValueDefaultTypeInternal _ListValue_default_instance_;
class Struct;
class StructDefaultTypeInternal;
extern StructDefaultTypeInternal _Struct_default_instance_;
class Struct_FieldsEntry;
class Struct_FieldsEntryDefaultTypeInternal;
extern Struct_FieldsEntryDefaultTypeInternal _Struct_FieldsEntry_default_instance_;
class Value;
class ValueDefaultTypeInternal;
extern ValueDefaultTypeInternal _Value_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace google {
namespace genomics {
namespace v1 {

namespace protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto

// ===================================================================

class ReadGroup_Experiment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.ReadGroup.Experiment) */ {
 public:
  ReadGroup_Experiment();
  virtual ~ReadGroup_Experiment();

  ReadGroup_Experiment(const ReadGroup_Experiment& from);

  inline ReadGroup_Experiment& operator=(const ReadGroup_Experiment& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadGroup_Experiment& default_instance();

  static inline const ReadGroup_Experiment* internal_default_instance() {
    return reinterpret_cast<const ReadGroup_Experiment*>(
               &_ReadGroup_Experiment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(ReadGroup_Experiment* other);
  void Swap(ReadGroup_Experiment* other);

  // implements Message ----------------------------------------------

  inline ReadGroup_Experiment* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadGroup_Experiment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadGroup_Experiment& from);
  void MergeFrom(const ReadGroup_Experiment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadGroup_Experiment* other);
  protected:
  explicit ReadGroup_Experiment(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string library_id = 1;
  void clear_library_id();
  static const int kLibraryIdFieldNumber = 1;
  const ::std::string& library_id() const;
  void set_library_id(const ::std::string& value);
  void set_library_id(const char* value);
  void set_library_id(const char* value, size_t size);
  ::std::string* mutable_library_id();
  ::std::string* release_library_id();
  void set_allocated_library_id(::std::string* library_id);
  ::std::string* unsafe_arena_release_library_id();
  void unsafe_arena_set_allocated_library_id(
      ::std::string* library_id);

  // string platform_unit = 2;
  void clear_platform_unit();
  static const int kPlatformUnitFieldNumber = 2;
  const ::std::string& platform_unit() const;
  void set_platform_unit(const ::std::string& value);
  void set_platform_unit(const char* value);
  void set_platform_unit(const char* value, size_t size);
  ::std::string* mutable_platform_unit();
  ::std::string* release_platform_unit();
  void set_allocated_platform_unit(::std::string* platform_unit);
  ::std::string* unsafe_arena_release_platform_unit();
  void unsafe_arena_set_allocated_platform_unit(
      ::std::string* platform_unit);

  // string sequencing_center = 3;
  void clear_sequencing_center();
  static const int kSequencingCenterFieldNumber = 3;
  const ::std::string& sequencing_center() const;
  void set_sequencing_center(const ::std::string& value);
  void set_sequencing_center(const char* value);
  void set_sequencing_center(const char* value, size_t size);
  ::std::string* mutable_sequencing_center();
  ::std::string* release_sequencing_center();
  void set_allocated_sequencing_center(::std::string* sequencing_center);
  ::std::string* unsafe_arena_release_sequencing_center();
  void unsafe_arena_set_allocated_sequencing_center(
      ::std::string* sequencing_center);

  // string instrument_model = 4;
  void clear_instrument_model();
  static const int kInstrumentModelFieldNumber = 4;
  const ::std::string& instrument_model() const;
  void set_instrument_model(const ::std::string& value);
  void set_instrument_model(const char* value);
  void set_instrument_model(const char* value, size_t size);
  ::std::string* mutable_instrument_model();
  ::std::string* release_instrument_model();
  void set_allocated_instrument_model(::std::string* instrument_model);
  ::std::string* unsafe_arena_release_instrument_model();
  void unsafe_arena_set_allocated_instrument_model(
      ::std::string* instrument_model);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.ReadGroup.Experiment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr library_id_;
  ::google::protobuf::internal::ArenaStringPtr platform_unit_;
  ::google::protobuf::internal::ArenaStringPtr sequencing_center_;
  ::google::protobuf::internal::ArenaStringPtr instrument_model_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadGroup_Program : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.ReadGroup.Program) */ {
 public:
  ReadGroup_Program();
  virtual ~ReadGroup_Program();

  ReadGroup_Program(const ReadGroup_Program& from);

  inline ReadGroup_Program& operator=(const ReadGroup_Program& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadGroup_Program& default_instance();

  static inline const ReadGroup_Program* internal_default_instance() {
    return reinterpret_cast<const ReadGroup_Program*>(
               &_ReadGroup_Program_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ReadGroup_Program* other);
  void Swap(ReadGroup_Program* other);

  // implements Message ----------------------------------------------

  inline ReadGroup_Program* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadGroup_Program* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadGroup_Program& from);
  void MergeFrom(const ReadGroup_Program& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadGroup_Program* other);
  protected:
  explicit ReadGroup_Program(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string command_line = 1;
  void clear_command_line();
  static const int kCommandLineFieldNumber = 1;
  const ::std::string& command_line() const;
  void set_command_line(const ::std::string& value);
  void set_command_line(const char* value);
  void set_command_line(const char* value, size_t size);
  ::std::string* mutable_command_line();
  ::std::string* release_command_line();
  void set_allocated_command_line(::std::string* command_line);
  ::std::string* unsafe_arena_release_command_line();
  void unsafe_arena_set_allocated_command_line(
      ::std::string* command_line);

  // string id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);
  ::std::string* unsafe_arena_release_id();
  void unsafe_arena_set_allocated_id(
      ::std::string* id);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string prev_program_id = 4;
  void clear_prev_program_id();
  static const int kPrevProgramIdFieldNumber = 4;
  const ::std::string& prev_program_id() const;
  void set_prev_program_id(const ::std::string& value);
  void set_prev_program_id(const char* value);
  void set_prev_program_id(const char* value, size_t size);
  ::std::string* mutable_prev_program_id();
  ::std::string* release_prev_program_id();
  void set_allocated_prev_program_id(::std::string* prev_program_id);
  ::std::string* unsafe_arena_release_prev_program_id();
  void unsafe_arena_set_allocated_prev_program_id(
      ::std::string* prev_program_id);

  // string version = 5;
  void clear_version();
  static const int kVersionFieldNumber = 5;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);
  ::std::string* unsafe_arena_release_version();
  void unsafe_arena_set_allocated_version(
      ::std::string* version);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.ReadGroup.Program)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr command_line_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr prev_program_id_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ReadGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.ReadGroup) */ {
 public:
  ReadGroup();
  virtual ~ReadGroup();

  ReadGroup(const ReadGroup& from);

  inline ReadGroup& operator=(const ReadGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadGroup& default_instance();

  static inline const ReadGroup* internal_default_instance() {
    return reinterpret_cast<const ReadGroup*>(
               &_ReadGroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(ReadGroup* other);
  void Swap(ReadGroup* other);

  // implements Message ----------------------------------------------

  inline ReadGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadGroup& from);
  void MergeFrom(const ReadGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadGroup* other);
  protected:
  explicit ReadGroup(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ReadGroup_Experiment Experiment;
  typedef ReadGroup_Program Program;

  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.ReadGroup.Program programs = 10;
  int programs_size() const;
  void clear_programs();
  static const int kProgramsFieldNumber = 10;
  const ::google::genomics::v1::ReadGroup_Program& programs(int index) const;
  ::google::genomics::v1::ReadGroup_Program* mutable_programs(int index);
  ::google::genomics::v1::ReadGroup_Program* add_programs();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReadGroup_Program >*
      mutable_programs();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReadGroup_Program >&
      programs() const;

  // map<string, .google.protobuf.ListValue> info = 12;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 12;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
      mutable_info();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);
  ::std::string* unsafe_arena_release_id();
  void unsafe_arena_set_allocated_id(
      ::std::string* id);

  // string dataset_id = 2;
  void clear_dataset_id();
  static const int kDatasetIdFieldNumber = 2;
  const ::std::string& dataset_id() const;
  void set_dataset_id(const ::std::string& value);
  void set_dataset_id(const char* value);
  void set_dataset_id(const char* value, size_t size);
  ::std::string* mutable_dataset_id();
  ::std::string* release_dataset_id();
  void set_allocated_dataset_id(::std::string* dataset_id);
  ::std::string* unsafe_arena_release_dataset_id();
  void unsafe_arena_set_allocated_dataset_id(
      ::std::string* dataset_id);

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  ::std::string* unsafe_arena_release_name();
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string description = 4;
  void clear_description();
  static const int kDescriptionFieldNumber = 4;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);
  ::std::string* unsafe_arena_release_description();
  void unsafe_arena_set_allocated_description(
      ::std::string* description);

  // string sample_id = 5;
  void clear_sample_id();
  static const int kSampleIdFieldNumber = 5;
  const ::std::string& sample_id() const;
  void set_sample_id(const ::std::string& value);
  void set_sample_id(const char* value);
  void set_sample_id(const char* value, size_t size);
  ::std::string* mutable_sample_id();
  ::std::string* release_sample_id();
  void set_allocated_sample_id(::std::string* sample_id);
  ::std::string* unsafe_arena_release_sample_id();
  void unsafe_arena_set_allocated_sample_id(
      ::std::string* sample_id);

  // string reference_set_id = 11;
  void clear_reference_set_id();
  static const int kReferenceSetIdFieldNumber = 11;
  const ::std::string& reference_set_id() const;
  void set_reference_set_id(const ::std::string& value);
  void set_reference_set_id(const char* value);
  void set_reference_set_id(const char* value, size_t size);
  ::std::string* mutable_reference_set_id();
  ::std::string* release_reference_set_id();
  void set_allocated_reference_set_id(::std::string* reference_set_id);
  ::std::string* unsafe_arena_release_reference_set_id();
  void unsafe_arena_set_allocated_reference_set_id(
      ::std::string* reference_set_id);

  // .google.genomics.v1.ReadGroup.Experiment experiment = 6;
  bool has_experiment() const;
  void clear_experiment();
  static const int kExperimentFieldNumber = 6;
  private:
  void _slow_mutable_experiment();
  void _slow_set_allocated_experiment(
      ::google::protobuf::Arena* message_arena, ::google::genomics::v1::ReadGroup_Experiment** experiment);
  ::google::genomics::v1::ReadGroup_Experiment* _slow_release_experiment();
  public:
  const ::google::genomics::v1::ReadGroup_Experiment& experiment() const;
  ::google::genomics::v1::ReadGroup_Experiment* mutable_experiment();
  ::google::genomics::v1::ReadGroup_Experiment* release_experiment();
  void set_allocated_experiment(::google::genomics::v1::ReadGroup_Experiment* experiment);
  ::google::genomics::v1::ReadGroup_Experiment* unsafe_arena_release_experiment();
  void unsafe_arena_set_allocated_experiment(
      ::google::genomics::v1::ReadGroup_Experiment* experiment);

  // int32 predicted_insert_size = 7;
  void clear_predicted_insert_size();
  static const int kPredictedInsertSizeFieldNumber = 7;
  ::google::protobuf::int32 predicted_insert_size() const;
  void set_predicted_insert_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.ReadGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReadGroup_Program > programs_;
  public:
  class ReadGroup_InfoEntry : public ::google::protobuf::internal::MapEntry<ReadGroup_InfoEntry, 
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ReadGroup_InfoEntry, 
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    ReadGroup_InfoEntry();
    ReadGroup_InfoEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ReadGroup_InfoEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ReadGroup_InfoEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      ReadGroup_InfoEntry,
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > info_;
  private:
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr dataset_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr sample_id_;
  ::google::protobuf::internal::ArenaStringPtr reference_set_id_;
  ::google::genomics::v1::ReadGroup_Experiment* experiment_;
  ::google::protobuf::int32 predicted_insert_size_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadGroup_Experiment

// string library_id = 1;
inline void ReadGroup_Experiment::clear_library_id() {
  library_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReadGroup_Experiment::library_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Experiment.library_id)
  return library_id_.Get();
}
inline void ReadGroup_Experiment::set_library_id(const ::std::string& value) {
  
  library_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Experiment.library_id)
}
inline void ReadGroup_Experiment::set_library_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  library_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Experiment.library_id)
}
inline void ReadGroup_Experiment::set_library_id(const char* value,
    size_t size) {
  
  library_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Experiment.library_id)
}
inline ::std::string* ReadGroup_Experiment::mutable_library_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Experiment.library_id)
  return library_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Experiment::release_library_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Experiment.library_id)
  
  return library_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Experiment::unsafe_arena_release_library_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Experiment.library_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return library_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReadGroup_Experiment::set_allocated_library_id(::std::string* library_id) {
  if (library_id != NULL) {
    
  } else {
    
  }
  library_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), library_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Experiment.library_id)
}
inline void ReadGroup_Experiment::unsafe_arena_set_allocated_library_id(
    ::std::string* library_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (library_id != NULL) {
    
  } else {
    
  }
  library_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      library_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Experiment.library_id)
}

// string platform_unit = 2;
inline void ReadGroup_Experiment::clear_platform_unit() {
  platform_unit_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReadGroup_Experiment::platform_unit() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Experiment.platform_unit)
  return platform_unit_.Get();
}
inline void ReadGroup_Experiment::set_platform_unit(const ::std::string& value) {
  
  platform_unit_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Experiment.platform_unit)
}
inline void ReadGroup_Experiment::set_platform_unit(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platform_unit_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Experiment.platform_unit)
}
inline void ReadGroup_Experiment::set_platform_unit(const char* value,
    size_t size) {
  
  platform_unit_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Experiment.platform_unit)
}
inline ::std::string* ReadGroup_Experiment::mutable_platform_unit() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Experiment.platform_unit)
  return platform_unit_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Experiment::release_platform_unit() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Experiment.platform_unit)
  
  return platform_unit_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Experiment::unsafe_arena_release_platform_unit() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Experiment.platform_unit)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return platform_unit_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReadGroup_Experiment::set_allocated_platform_unit(::std::string* platform_unit) {
  if (platform_unit != NULL) {
    
  } else {
    
  }
  platform_unit_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform_unit,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Experiment.platform_unit)
}
inline void ReadGroup_Experiment::unsafe_arena_set_allocated_platform_unit(
    ::std::string* platform_unit) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (platform_unit != NULL) {
    
  } else {
    
  }
  platform_unit_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      platform_unit, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Experiment.platform_unit)
}

// string sequencing_center = 3;
inline void ReadGroup_Experiment::clear_sequencing_center() {
  sequencing_center_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReadGroup_Experiment::sequencing_center() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
  return sequencing_center_.Get();
}
inline void ReadGroup_Experiment::set_sequencing_center(const ::std::string& value) {
  
  sequencing_center_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
}
inline void ReadGroup_Experiment::set_sequencing_center(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sequencing_center_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
}
inline void ReadGroup_Experiment::set_sequencing_center(const char* value,
    size_t size) {
  
  sequencing_center_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
}
inline ::std::string* ReadGroup_Experiment::mutable_sequencing_center() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
  return sequencing_center_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Experiment::release_sequencing_center() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
  
  return sequencing_center_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Experiment::unsafe_arena_release_sequencing_center() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return sequencing_center_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReadGroup_Experiment::set_allocated_sequencing_center(::std::string* sequencing_center) {
  if (sequencing_center != NULL) {
    
  } else {
    
  }
  sequencing_center_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sequencing_center,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
}
inline void ReadGroup_Experiment::unsafe_arena_set_allocated_sequencing_center(
    ::std::string* sequencing_center) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (sequencing_center != NULL) {
    
  } else {
    
  }
  sequencing_center_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      sequencing_center, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
}

// string instrument_model = 4;
inline void ReadGroup_Experiment::clear_instrument_model() {
  instrument_model_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReadGroup_Experiment::instrument_model() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Experiment.instrument_model)
  return instrument_model_.Get();
}
inline void ReadGroup_Experiment::set_instrument_model(const ::std::string& value) {
  
  instrument_model_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Experiment.instrument_model)
}
inline void ReadGroup_Experiment::set_instrument_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instrument_model_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Experiment.instrument_model)
}
inline void ReadGroup_Experiment::set_instrument_model(const char* value,
    size_t size) {
  
  instrument_model_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Experiment.instrument_model)
}
inline ::std::string* ReadGroup_Experiment::mutable_instrument_model() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Experiment.instrument_model)
  return instrument_model_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Experiment::release_instrument_model() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Experiment.instrument_model)
  
  return instrument_model_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Experiment::unsafe_arena_release_instrument_model() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Experiment.instrument_model)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return instrument_model_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReadGroup_Experiment::set_allocated_instrument_model(::std::string* instrument_model) {
  if (instrument_model != NULL) {
    
  } else {
    
  }
  instrument_model_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrument_model,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Experiment.instrument_model)
}
inline void ReadGroup_Experiment::unsafe_arena_set_allocated_instrument_model(
    ::std::string* instrument_model) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (instrument_model != NULL) {
    
  } else {
    
  }
  instrument_model_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      instrument_model, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Experiment.instrument_model)
}

// -------------------------------------------------------------------

// ReadGroup_Program

// string command_line = 1;
inline void ReadGroup_Program::clear_command_line() {
  command_line_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReadGroup_Program::command_line() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Program.command_line)
  return command_line_.Get();
}
inline void ReadGroup_Program::set_command_line(const ::std::string& value) {
  
  command_line_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Program.command_line)
}
inline void ReadGroup_Program::set_command_line(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  command_line_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Program.command_line)
}
inline void ReadGroup_Program::set_command_line(const char* value,
    size_t size) {
  
  command_line_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Program.command_line)
}
inline ::std::string* ReadGroup_Program::mutable_command_line() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Program.command_line)
  return command_line_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Program::release_command_line() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Program.command_line)
  
  return command_line_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Program::unsafe_arena_release_command_line() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Program.command_line)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return command_line_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReadGroup_Program::set_allocated_command_line(::std::string* command_line) {
  if (command_line != NULL) {
    
  } else {
    
  }
  command_line_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command_line,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Program.command_line)
}
inline void ReadGroup_Program::unsafe_arena_set_allocated_command_line(
    ::std::string* command_line) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (command_line != NULL) {
    
  } else {
    
  }
  command_line_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      command_line, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Program.command_line)
}

// string id = 2;
inline void ReadGroup_Program::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReadGroup_Program::id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Program.id)
  return id_.Get();
}
inline void ReadGroup_Program::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Program.id)
}
inline void ReadGroup_Program::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Program.id)
}
inline void ReadGroup_Program::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Program.id)
}
inline ::std::string* ReadGroup_Program::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Program.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Program::release_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Program.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Program::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Program.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReadGroup_Program::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Program.id)
}
inline void ReadGroup_Program::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Program.id)
}

// string name = 3;
inline void ReadGroup_Program::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReadGroup_Program::name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Program.name)
  return name_.Get();
}
inline void ReadGroup_Program::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Program.name)
}
inline void ReadGroup_Program::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Program.name)
}
inline void ReadGroup_Program::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Program.name)
}
inline ::std::string* ReadGroup_Program::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Program.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Program::release_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Program.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Program::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Program.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReadGroup_Program::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Program.name)
}
inline void ReadGroup_Program::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Program.name)
}

// string prev_program_id = 4;
inline void ReadGroup_Program::clear_prev_program_id() {
  prev_program_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReadGroup_Program::prev_program_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Program.prev_program_id)
  return prev_program_id_.Get();
}
inline void ReadGroup_Program::set_prev_program_id(const ::std::string& value) {
  
  prev_program_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Program.prev_program_id)
}
inline void ReadGroup_Program::set_prev_program_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  prev_program_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Program.prev_program_id)
}
inline void ReadGroup_Program::set_prev_program_id(const char* value,
    size_t size) {
  
  prev_program_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Program.prev_program_id)
}
inline ::std::string* ReadGroup_Program::mutable_prev_program_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Program.prev_program_id)
  return prev_program_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Program::release_prev_program_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Program.prev_program_id)
  
  return prev_program_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Program::unsafe_arena_release_prev_program_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Program.prev_program_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return prev_program_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReadGroup_Program::set_allocated_prev_program_id(::std::string* prev_program_id) {
  if (prev_program_id != NULL) {
    
  } else {
    
  }
  prev_program_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prev_program_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Program.prev_program_id)
}
inline void ReadGroup_Program::unsafe_arena_set_allocated_prev_program_id(
    ::std::string* prev_program_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (prev_program_id != NULL) {
    
  } else {
    
  }
  prev_program_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      prev_program_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Program.prev_program_id)
}

// string version = 5;
inline void ReadGroup_Program::clear_version() {
  version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReadGroup_Program::version() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Program.version)
  return version_.Get();
}
inline void ReadGroup_Program::set_version(const ::std::string& value) {
  
  version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Program.version)
}
inline void ReadGroup_Program::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Program.version)
}
inline void ReadGroup_Program::set_version(const char* value,
    size_t size) {
  
  version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Program.version)
}
inline ::std::string* ReadGroup_Program::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Program.version)
  return version_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Program::release_version() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Program.version)
  
  return version_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup_Program::unsafe_arena_release_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Program.version)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return version_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReadGroup_Program::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Program.version)
}
inline void ReadGroup_Program::unsafe_arena_set_allocated_version(
    ::std::string* version) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (version != NULL) {
    
  } else {
    
  }
  version_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      version, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Program.version)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ReadGroup

// string id = 1;
inline void ReadGroup::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReadGroup::id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.id)
  return id_.Get();
}
inline void ReadGroup::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.id)
}
inline void ReadGroup::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.id)
}
inline void ReadGroup::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.id)
}
inline ::std::string* ReadGroup::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup::release_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReadGroup::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.id)
}
inline void ReadGroup::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.id)
}

// string dataset_id = 2;
inline void ReadGroup::clear_dataset_id() {
  dataset_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReadGroup::dataset_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.dataset_id)
  return dataset_id_.Get();
}
inline void ReadGroup::set_dataset_id(const ::std::string& value) {
  
  dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.dataset_id)
}
inline void ReadGroup::set_dataset_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.dataset_id)
}
inline void ReadGroup::set_dataset_id(const char* value,
    size_t size) {
  
  dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.dataset_id)
}
inline ::std::string* ReadGroup::mutable_dataset_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.dataset_id)
  return dataset_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup::release_dataset_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.dataset_id)
  
  return dataset_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup::unsafe_arena_release_dataset_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.dataset_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return dataset_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReadGroup::set_allocated_dataset_id(::std::string* dataset_id) {
  if (dataset_id != NULL) {
    
  } else {
    
  }
  dataset_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataset_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.dataset_id)
}
inline void ReadGroup::unsafe_arena_set_allocated_dataset_id(
    ::std::string* dataset_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (dataset_id != NULL) {
    
  } else {
    
  }
  dataset_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      dataset_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.dataset_id)
}

// string name = 3;
inline void ReadGroup::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReadGroup::name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.name)
  return name_.Get();
}
inline void ReadGroup::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.name)
}
inline void ReadGroup::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.name)
}
inline void ReadGroup::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.name)
}
inline ::std::string* ReadGroup::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup::release_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReadGroup::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.name)
}
inline void ReadGroup::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.name)
}

// string description = 4;
inline void ReadGroup::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReadGroup::description() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.description)
  return description_.Get();
}
inline void ReadGroup::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.description)
}
inline void ReadGroup::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.description)
}
inline void ReadGroup::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.description)
}
inline ::std::string* ReadGroup::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup::release_description() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReadGroup::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.description)
}
inline void ReadGroup::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.description)
}

// string sample_id = 5;
inline void ReadGroup::clear_sample_id() {
  sample_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReadGroup::sample_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.sample_id)
  return sample_id_.Get();
}
inline void ReadGroup::set_sample_id(const ::std::string& value) {
  
  sample_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.sample_id)
}
inline void ReadGroup::set_sample_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sample_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.sample_id)
}
inline void ReadGroup::set_sample_id(const char* value,
    size_t size) {
  
  sample_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.sample_id)
}
inline ::std::string* ReadGroup::mutable_sample_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.sample_id)
  return sample_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup::release_sample_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.sample_id)
  
  return sample_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup::unsafe_arena_release_sample_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.sample_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return sample_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReadGroup::set_allocated_sample_id(::std::string* sample_id) {
  if (sample_id != NULL) {
    
  } else {
    
  }
  sample_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sample_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.sample_id)
}
inline void ReadGroup::unsafe_arena_set_allocated_sample_id(
    ::std::string* sample_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (sample_id != NULL) {
    
  } else {
    
  }
  sample_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      sample_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.sample_id)
}

// .google.genomics.v1.ReadGroup.Experiment experiment = 6;
inline bool ReadGroup::has_experiment() const {
  return this != internal_default_instance() && experiment_ != NULL;
}
inline void ReadGroup::clear_experiment() {
  if (GetArenaNoVirtual() == NULL && experiment_ != NULL) delete experiment_;
  experiment_ = NULL;
}
inline const ::google::genomics::v1::ReadGroup_Experiment& ReadGroup::experiment() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.experiment)
  return experiment_ != NULL ? *experiment_
                         : *::google::genomics::v1::ReadGroup_Experiment::internal_default_instance();
}
inline ::google::genomics::v1::ReadGroup_Experiment* ReadGroup::mutable_experiment() {
  
  if (experiment_ == NULL) {
    _slow_mutable_experiment();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.experiment)
  return experiment_;
}
inline ::google::genomics::v1::ReadGroup_Experiment* ReadGroup::release_experiment() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.experiment)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_experiment();
  } else {
    ::google::genomics::v1::ReadGroup_Experiment* temp = experiment_;
    experiment_ = NULL;
    return temp;
  }
}
inline  void ReadGroup::set_allocated_experiment(::google::genomics::v1::ReadGroup_Experiment* experiment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete experiment_;
  }
  if (experiment != NULL) {
    _slow_set_allocated_experiment(message_arena, &experiment);
  }
  experiment_ = experiment;
  if (experiment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.experiment)
}

// int32 predicted_insert_size = 7;
inline void ReadGroup::clear_predicted_insert_size() {
  predicted_insert_size_ = 0;
}
inline ::google::protobuf::int32 ReadGroup::predicted_insert_size() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.predicted_insert_size)
  return predicted_insert_size_;
}
inline void ReadGroup::set_predicted_insert_size(::google::protobuf::int32 value) {
  
  predicted_insert_size_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.predicted_insert_size)
}

// repeated .google.genomics.v1.ReadGroup.Program programs = 10;
inline int ReadGroup::programs_size() const {
  return programs_.size();
}
inline void ReadGroup::clear_programs() {
  programs_.Clear();
}
inline const ::google::genomics::v1::ReadGroup_Program& ReadGroup::programs(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.programs)
  return programs_.Get(index);
}
inline ::google::genomics::v1::ReadGroup_Program* ReadGroup::mutable_programs(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.programs)
  return programs_.Mutable(index);
}
inline ::google::genomics::v1::ReadGroup_Program* ReadGroup::add_programs() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.ReadGroup.programs)
  return programs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReadGroup_Program >*
ReadGroup::mutable_programs() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.ReadGroup.programs)
  return &programs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReadGroup_Program >&
ReadGroup::programs() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.ReadGroup.programs)
  return programs_;
}

// string reference_set_id = 11;
inline void ReadGroup::clear_reference_set_id() {
  reference_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ReadGroup::reference_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.reference_set_id)
  return reference_set_id_.Get();
}
inline void ReadGroup::set_reference_set_id(const ::std::string& value) {
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.reference_set_id)
}
inline void ReadGroup::set_reference_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.reference_set_id)
}
inline void ReadGroup::set_reference_set_id(const char* value,
    size_t size) {
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.reference_set_id)
}
inline ::std::string* ReadGroup::mutable_reference_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.reference_set_id)
  return reference_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup::release_reference_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.reference_set_id)
  
  return reference_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ReadGroup::unsafe_arena_release_reference_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.reference_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ReadGroup::set_allocated_reference_set_id(::std::string* reference_set_id) {
  if (reference_set_id != NULL) {
    
  } else {
    
  }
  reference_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.reference_set_id)
}
inline void ReadGroup::unsafe_arena_set_allocated_reference_set_id(
    ::std::string* reference_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_set_id != NULL) {
    
  } else {
    
  }
  reference_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.reference_set_id)
}

// map<string, .google.protobuf.ListValue> info = 12;
inline int ReadGroup::info_size() const {
  return info_.size();
}
inline void ReadGroup::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
ReadGroup::info() const {
  // @@protoc_insertion_point(field_map:google.genomics.v1.ReadGroup.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
ReadGroup::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:google.genomics.v1.ReadGroup.info)
  return info_.MutableMap();
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v1
}  // namespace genomics
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fgenomics_2fv1_2freadgroup_2eproto__INCLUDED
