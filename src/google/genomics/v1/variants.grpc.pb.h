// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/genomics/v1/variants.proto
// Original file comments:
// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#ifndef GRPC_google_2fgenomics_2fv1_2fvariants_2eproto__INCLUDED
#define GRPC_google_2fgenomics_2fv1_2fvariants_2eproto__INCLUDED

#include "google/genomics/v1/variants.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/proto_utils.h>
#include <grpc++/impl/codegen/rpc_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/status.h>
#include <grpc++/impl/codegen/stub_options.h>
#include <grpc++/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class RpcService;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace google {
namespace genomics {
namespace v1 {

class StreamingVariantService final {
 public:
  static constexpr char const* service_full_name() {
    return "google.genomics.v1.StreamingVariantService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Returns a stream of all the variants matching the search request, ordered
    // by reference name, position, and ID.
    std::unique_ptr< ::grpc::ClientReaderInterface< ::google::genomics::v1::StreamVariantsResponse>> StreamVariants(::grpc::ClientContext* context, const ::google::genomics::v1::StreamVariantsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::google::genomics::v1::StreamVariantsResponse>>(StreamVariantsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::google::genomics::v1::StreamVariantsResponse>> AsyncStreamVariants(::grpc::ClientContext* context, const ::google::genomics::v1::StreamVariantsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::google::genomics::v1::StreamVariantsResponse>>(AsyncStreamVariantsRaw(context, request, cq, tag));
    }
  private:
    virtual ::grpc::ClientReaderInterface< ::google::genomics::v1::StreamVariantsResponse>* StreamVariantsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::StreamVariantsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::google::genomics::v1::StreamVariantsResponse>* AsyncStreamVariantsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::StreamVariantsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    std::unique_ptr< ::grpc::ClientReader< ::google::genomics::v1::StreamVariantsResponse>> StreamVariants(::grpc::ClientContext* context, const ::google::genomics::v1::StreamVariantsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::google::genomics::v1::StreamVariantsResponse>>(StreamVariantsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::google::genomics::v1::StreamVariantsResponse>> AsyncStreamVariants(::grpc::ClientContext* context, const ::google::genomics::v1::StreamVariantsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::google::genomics::v1::StreamVariantsResponse>>(AsyncStreamVariantsRaw(context, request, cq, tag));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientReader< ::google::genomics::v1::StreamVariantsResponse>* StreamVariantsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::StreamVariantsRequest& request) override;
    ::grpc::ClientAsyncReader< ::google::genomics::v1::StreamVariantsResponse>* AsyncStreamVariantsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::StreamVariantsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    const ::grpc::RpcMethod rpcmethod_StreamVariants_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Returns a stream of all the variants matching the search request, ordered
    // by reference name, position, and ID.
    virtual ::grpc::Status StreamVariants(::grpc::ServerContext* context, const ::google::genomics::v1::StreamVariantsRequest* request, ::grpc::ServerWriter< ::google::genomics::v1::StreamVariantsResponse>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_StreamVariants : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_StreamVariants() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_StreamVariants() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamVariants(::grpc::ServerContext* context, const ::google::genomics::v1::StreamVariantsRequest* request, ::grpc::ServerWriter< ::google::genomics::v1::StreamVariantsResponse>* writer) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamVariants(::grpc::ServerContext* context, ::google::genomics::v1::StreamVariantsRequest* request, ::grpc::ServerAsyncWriter< ::google::genomics::v1::StreamVariantsResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(0, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_StreamVariants<Service > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_StreamVariants : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_StreamVariants() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_StreamVariants() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamVariants(::grpc::ServerContext* context, const ::google::genomics::v1::StreamVariantsRequest* request, ::grpc::ServerWriter< ::google::genomics::v1::StreamVariantsResponse>* writer) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  typedef Service StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_StreamVariants : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithSplitStreamingMethod_StreamVariants() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::SplitServerStreamingHandler< ::google::genomics::v1::StreamVariantsRequest, ::google::genomics::v1::StreamVariantsResponse>(std::bind(&WithSplitStreamingMethod_StreamVariants<BaseClass>::StreamedStreamVariants, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithSplitStreamingMethod_StreamVariants() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StreamVariants(::grpc::ServerContext* context, const ::google::genomics::v1::StreamVariantsRequest* request, ::grpc::ServerWriter< ::google::genomics::v1::StreamVariantsResponse>* writer) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedStreamVariants(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::genomics::v1::StreamVariantsRequest,::google::genomics::v1::StreamVariantsResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_StreamVariants<Service > SplitStreamedService;
  typedef WithSplitStreamingMethod_StreamVariants<Service > StreamedService;
};

class VariantServiceV1 final {
 public:
  static constexpr char const* service_full_name() {
    return "google.genomics.v1.VariantServiceV1";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Creates variant data by asynchronously importing the provided information.
    //
    // For the definitions of variant sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // The variants for import will be merged with any existing variant that
    // matches its reference sequence, start, end, reference bases, and
    // alternative bases. If no such variant exists, a new one will be created.
    //
    // When variants are merged, the call information from the new variant
    // is added to the existing variant, and Variant info fields are merged
    // as specified in
    // [infoMergeConfig][google.genomics.v1.ImportVariantsRequest.info_merge_config].
    // As a special case, for single-sample VCF files, QUAL and FILTER fields will
    // be moved to the call level; these are sometimes interpreted in a
    // call-specific context.
    // Imported VCF headers are appended to the metadata already in a variant set.
    virtual ::grpc::Status ImportVariants(::grpc::ClientContext* context, const ::google::genomics::v1::ImportVariantsRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncImportVariants(::grpc::ClientContext* context, const ::google::genomics::v1::ImportVariantsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncImportVariantsRaw(context, request, cq));
    }
    // Creates a new variant set.
    //
    // For the definitions of variant sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // The provided variant set must have a valid `datasetId` set - all other
    // fields are optional. Note that the `id` field will be ignored, as this is
    // assigned by the server.
    virtual ::grpc::Status CreateVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::CreateVariantSetRequest& request, ::google::genomics::v1::VariantSet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::VariantSet>> AsyncCreateVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::CreateVariantSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::VariantSet>>(AsyncCreateVariantSetRaw(context, request, cq));
    }
    // Exports variant set data to an external destination.
    //
    // For the definitions of variant sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status ExportVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::ExportVariantSetRequest& request, ::google::longrunning::Operation* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>> AsyncExportVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::ExportVariantSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>>(AsyncExportVariantSetRaw(context, request, cq));
    }
    // Gets a variant set by ID.
    //
    // For the definitions of variant sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status GetVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::GetVariantSetRequest& request, ::google::genomics::v1::VariantSet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::VariantSet>> AsyncGetVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::GetVariantSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::VariantSet>>(AsyncGetVariantSetRaw(context, request, cq));
    }
    // Returns a list of all variant sets matching search criteria.
    //
    // For the definitions of variant sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // Implements
    // [GlobalAllianceApi.searchVariantSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L49).
    virtual ::grpc::Status SearchVariantSets(::grpc::ClientContext* context, const ::google::genomics::v1::SearchVariantSetsRequest& request, ::google::genomics::v1::SearchVariantSetsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::SearchVariantSetsResponse>> AsyncSearchVariantSets(::grpc::ClientContext* context, const ::google::genomics::v1::SearchVariantSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::SearchVariantSetsResponse>>(AsyncSearchVariantSetsRaw(context, request, cq));
    }
    // Deletes a variant set including all variants, call sets, and calls within.
    // This is not reversible.
    //
    // For the definitions of variant sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status DeleteVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteVariantSetRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteVariantSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteVariantSetRaw(context, request, cq));
    }
    // Updates a variant set using patch semantics.
    //
    // For the definitions of variant sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status UpdateVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateVariantSetRequest& request, ::google::genomics::v1::VariantSet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::VariantSet>> AsyncUpdateVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateVariantSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::VariantSet>>(AsyncUpdateVariantSetRaw(context, request, cq));
    }
    // Gets a list of variants matching the criteria.
    //
    // For the definitions of variants and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // Implements
    // [GlobalAllianceApi.searchVariants](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L126).
    virtual ::grpc::Status SearchVariants(::grpc::ClientContext* context, const ::google::genomics::v1::SearchVariantsRequest& request, ::google::genomics::v1::SearchVariantsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::SearchVariantsResponse>> AsyncSearchVariants(::grpc::ClientContext* context, const ::google::genomics::v1::SearchVariantsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::SearchVariantsResponse>>(AsyncSearchVariantsRaw(context, request, cq));
    }
    // Creates a new variant.
    //
    // For the definitions of variants and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status CreateVariant(::grpc::ClientContext* context, const ::google::genomics::v1::CreateVariantRequest& request, ::google::genomics::v1::Variant* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::Variant>> AsyncCreateVariant(::grpc::ClientContext* context, const ::google::genomics::v1::CreateVariantRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::Variant>>(AsyncCreateVariantRaw(context, request, cq));
    }
    // Updates a variant.
    //
    // For the definitions of variants and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // This method supports patch semantics. Returns the modified variant without
    // its calls.
    virtual ::grpc::Status UpdateVariant(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateVariantRequest& request, ::google::genomics::v1::Variant* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::Variant>> AsyncUpdateVariant(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateVariantRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::Variant>>(AsyncUpdateVariantRaw(context, request, cq));
    }
    // Deletes a variant.
    //
    // For the definitions of variants and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status DeleteVariant(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteVariantRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteVariant(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteVariantRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteVariantRaw(context, request, cq));
    }
    // Gets a variant by ID.
    //
    // For the definitions of variants and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status GetVariant(::grpc::ClientContext* context, const ::google::genomics::v1::GetVariantRequest& request, ::google::genomics::v1::Variant* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::Variant>> AsyncGetVariant(::grpc::ClientContext* context, const ::google::genomics::v1::GetVariantRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::Variant>>(AsyncGetVariantRaw(context, request, cq));
    }
    // Merges the given variants with existing variants.
    //
    // For the definitions of variants and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // Each variant will be
    // merged with an existing variant that matches its reference sequence,
    // start, end, reference bases, and alternative bases. If no such variant
    // exists, a new one will be created.
    //
    // When variants are merged, the call information from the new variant
    // is added to the existing variant. Variant info fields are merged as
    // specified in the
    // [infoMergeConfig][google.genomics.v1.MergeVariantsRequest.info_merge_config]
    // field of the MergeVariantsRequest.
    //
    // Please exercise caution when using this method!  It is easy to introduce
    // mistakes in existing variants and difficult to back out of them.  For
    // example,
    // suppose you were trying to merge a new variant with an existing one and
    // both
    // variants contain calls that belong to callsets with the same callset ID.
    //
    //     // Existing variant - irrelevant fields trimmed for clarity
    //     {
    //         "variantSetId": "10473108253681171589",
    //         "referenceName": "1",
    //         "start": "10582",
    //         "referenceBases": "G",
    //         "alternateBases": [
    //             "A"
    //         ],
    //         "calls": [
    //             {
    //                 "callSetId": "10473108253681171589-0",
    //                 "callSetName": "CALLSET0",
    //                 "genotype": [
    //                     0,
    //                     1
    //                 ],
    //             }
    //         ]
    //     }
    //
    //     // New variant with conflicting call information
    //     {
    //         "variantSetId": "10473108253681171589",
    //         "referenceName": "1",
    //         "start": "10582",
    //         "referenceBases": "G",
    //         "alternateBases": [
    //             "A"
    //         ],
    //         "calls": [
    //             {
    //                 "callSetId": "10473108253681171589-0",
    //                 "callSetName": "CALLSET0",
    //                 "genotype": [
    //                     1,
    //                     1
    //                 ],
    //             }
    //         ]
    //     }
    //
    // The resulting merged variant would overwrite the existing calls with those
    // from the new variant:
    //
    //     {
    //         "variantSetId": "10473108253681171589",
    //         "referenceName": "1",
    //         "start": "10582",
    //         "referenceBases": "G",
    //         "alternateBases": [
    //             "A"
    //         ],
    //         "calls": [
    //             {
    //                 "callSetId": "10473108253681171589-0",
    //                 "callSetName": "CALLSET0",
    //                 "genotype": [
    //                     1,
    //                     1
    //                 ],
    //             }
    //         ]
    //     }
    //
    // This may be the desired outcome, but it is up to the user to determine if
    // if that is indeed the case.
    virtual ::grpc::Status MergeVariants(::grpc::ClientContext* context, const ::google::genomics::v1::MergeVariantsRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncMergeVariants(::grpc::ClientContext* context, const ::google::genomics::v1::MergeVariantsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncMergeVariantsRaw(context, request, cq));
    }
    // Gets a list of call sets matching the criteria.
    //
    // For the definitions of call sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // Implements
    // [GlobalAllianceApi.searchCallSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L178).
    virtual ::grpc::Status SearchCallSets(::grpc::ClientContext* context, const ::google::genomics::v1::SearchCallSetsRequest& request, ::google::genomics::v1::SearchCallSetsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::SearchCallSetsResponse>> AsyncSearchCallSets(::grpc::ClientContext* context, const ::google::genomics::v1::SearchCallSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::SearchCallSetsResponse>>(AsyncSearchCallSetsRaw(context, request, cq));
    }
    // Creates a new call set.
    //
    // For the definitions of call sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status CreateCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::CreateCallSetRequest& request, ::google::genomics::v1::CallSet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::CallSet>> AsyncCreateCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::CreateCallSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::CallSet>>(AsyncCreateCallSetRaw(context, request, cq));
    }
    // Updates a call set.
    //
    // For the definitions of call sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // This method supports patch semantics.
    virtual ::grpc::Status UpdateCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateCallSetRequest& request, ::google::genomics::v1::CallSet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::CallSet>> AsyncUpdateCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateCallSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::CallSet>>(AsyncUpdateCallSetRaw(context, request, cq));
    }
    // Deletes a call set.
    //
    // For the definitions of call sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status DeleteCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteCallSetRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteCallSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteCallSetRaw(context, request, cq));
    }
    // Gets a call set by ID.
    //
    // For the definitions of call sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status GetCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::GetCallSetRequest& request, ::google::genomics::v1::CallSet* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::CallSet>> AsyncGetCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::GetCallSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::CallSet>>(AsyncGetCallSetRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncImportVariantsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::ImportVariantsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::VariantSet>* AsyncCreateVariantSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::CreateVariantSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::longrunning::Operation>* AsyncExportVariantSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::ExportVariantSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::VariantSet>* AsyncGetVariantSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::GetVariantSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::SearchVariantSetsResponse>* AsyncSearchVariantSetsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::SearchVariantSetsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteVariantSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteVariantSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::VariantSet>* AsyncUpdateVariantSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateVariantSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::SearchVariantsResponse>* AsyncSearchVariantsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::SearchVariantsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::Variant>* AsyncCreateVariantRaw(::grpc::ClientContext* context, const ::google::genomics::v1::CreateVariantRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::Variant>* AsyncUpdateVariantRaw(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateVariantRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteVariantRaw(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteVariantRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::Variant>* AsyncGetVariantRaw(::grpc::ClientContext* context, const ::google::genomics::v1::GetVariantRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncMergeVariantsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::MergeVariantsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::SearchCallSetsResponse>* AsyncSearchCallSetsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::SearchCallSetsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::CallSet>* AsyncCreateCallSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::CreateCallSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::CallSet>* AsyncUpdateCallSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateCallSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteCallSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteCallSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::genomics::v1::CallSet>* AsyncGetCallSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::GetCallSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status ImportVariants(::grpc::ClientContext* context, const ::google::genomics::v1::ImportVariantsRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncImportVariants(::grpc::ClientContext* context, const ::google::genomics::v1::ImportVariantsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncImportVariantsRaw(context, request, cq));
    }
    ::grpc::Status CreateVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::CreateVariantSetRequest& request, ::google::genomics::v1::VariantSet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::VariantSet>> AsyncCreateVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::CreateVariantSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::VariantSet>>(AsyncCreateVariantSetRaw(context, request, cq));
    }
    ::grpc::Status ExportVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::ExportVariantSetRequest& request, ::google::longrunning::Operation* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>> AsyncExportVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::ExportVariantSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>>(AsyncExportVariantSetRaw(context, request, cq));
    }
    ::grpc::Status GetVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::GetVariantSetRequest& request, ::google::genomics::v1::VariantSet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::VariantSet>> AsyncGetVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::GetVariantSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::VariantSet>>(AsyncGetVariantSetRaw(context, request, cq));
    }
    ::grpc::Status SearchVariantSets(::grpc::ClientContext* context, const ::google::genomics::v1::SearchVariantSetsRequest& request, ::google::genomics::v1::SearchVariantSetsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchVariantSetsResponse>> AsyncSearchVariantSets(::grpc::ClientContext* context, const ::google::genomics::v1::SearchVariantSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchVariantSetsResponse>>(AsyncSearchVariantSetsRaw(context, request, cq));
    }
    ::grpc::Status DeleteVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteVariantSetRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteVariantSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteVariantSetRaw(context, request, cq));
    }
    ::grpc::Status UpdateVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateVariantSetRequest& request, ::google::genomics::v1::VariantSet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::VariantSet>> AsyncUpdateVariantSet(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateVariantSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::VariantSet>>(AsyncUpdateVariantSetRaw(context, request, cq));
    }
    ::grpc::Status SearchVariants(::grpc::ClientContext* context, const ::google::genomics::v1::SearchVariantsRequest& request, ::google::genomics::v1::SearchVariantsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchVariantsResponse>> AsyncSearchVariants(::grpc::ClientContext* context, const ::google::genomics::v1::SearchVariantsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchVariantsResponse>>(AsyncSearchVariantsRaw(context, request, cq));
    }
    ::grpc::Status CreateVariant(::grpc::ClientContext* context, const ::google::genomics::v1::CreateVariantRequest& request, ::google::genomics::v1::Variant* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::Variant>> AsyncCreateVariant(::grpc::ClientContext* context, const ::google::genomics::v1::CreateVariantRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::Variant>>(AsyncCreateVariantRaw(context, request, cq));
    }
    ::grpc::Status UpdateVariant(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateVariantRequest& request, ::google::genomics::v1::Variant* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::Variant>> AsyncUpdateVariant(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateVariantRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::Variant>>(AsyncUpdateVariantRaw(context, request, cq));
    }
    ::grpc::Status DeleteVariant(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteVariantRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteVariant(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteVariantRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteVariantRaw(context, request, cq));
    }
    ::grpc::Status GetVariant(::grpc::ClientContext* context, const ::google::genomics::v1::GetVariantRequest& request, ::google::genomics::v1::Variant* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::Variant>> AsyncGetVariant(::grpc::ClientContext* context, const ::google::genomics::v1::GetVariantRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::Variant>>(AsyncGetVariantRaw(context, request, cq));
    }
    ::grpc::Status MergeVariants(::grpc::ClientContext* context, const ::google::genomics::v1::MergeVariantsRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncMergeVariants(::grpc::ClientContext* context, const ::google::genomics::v1::MergeVariantsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncMergeVariantsRaw(context, request, cq));
    }
    ::grpc::Status SearchCallSets(::grpc::ClientContext* context, const ::google::genomics::v1::SearchCallSetsRequest& request, ::google::genomics::v1::SearchCallSetsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchCallSetsResponse>> AsyncSearchCallSets(::grpc::ClientContext* context, const ::google::genomics::v1::SearchCallSetsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchCallSetsResponse>>(AsyncSearchCallSetsRaw(context, request, cq));
    }
    ::grpc::Status CreateCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::CreateCallSetRequest& request, ::google::genomics::v1::CallSet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::CallSet>> AsyncCreateCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::CreateCallSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::CallSet>>(AsyncCreateCallSetRaw(context, request, cq));
    }
    ::grpc::Status UpdateCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateCallSetRequest& request, ::google::genomics::v1::CallSet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::CallSet>> AsyncUpdateCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateCallSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::CallSet>>(AsyncUpdateCallSetRaw(context, request, cq));
    }
    ::grpc::Status DeleteCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteCallSetRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteCallSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteCallSetRaw(context, request, cq));
    }
    ::grpc::Status GetCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::GetCallSetRequest& request, ::google::genomics::v1::CallSet* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::CallSet>> AsyncGetCallSet(::grpc::ClientContext* context, const ::google::genomics::v1::GetCallSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::CallSet>>(AsyncGetCallSetRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncImportVariantsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::ImportVariantsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::VariantSet>* AsyncCreateVariantSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::CreateVariantSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* AsyncExportVariantSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::ExportVariantSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::VariantSet>* AsyncGetVariantSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::GetVariantSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchVariantSetsResponse>* AsyncSearchVariantSetsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::SearchVariantSetsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteVariantSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteVariantSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::VariantSet>* AsyncUpdateVariantSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateVariantSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchVariantsResponse>* AsyncSearchVariantsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::SearchVariantsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::Variant>* AsyncCreateVariantRaw(::grpc::ClientContext* context, const ::google::genomics::v1::CreateVariantRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::Variant>* AsyncUpdateVariantRaw(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateVariantRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteVariantRaw(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteVariantRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::Variant>* AsyncGetVariantRaw(::grpc::ClientContext* context, const ::google::genomics::v1::GetVariantRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncMergeVariantsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::MergeVariantsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchCallSetsResponse>* AsyncSearchCallSetsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::SearchCallSetsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::CallSet>* AsyncCreateCallSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::CreateCallSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::CallSet>* AsyncUpdateCallSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateCallSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteCallSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteCallSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::CallSet>* AsyncGetCallSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::GetCallSetRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::RpcMethod rpcmethod_ImportVariants_;
    const ::grpc::RpcMethod rpcmethod_CreateVariantSet_;
    const ::grpc::RpcMethod rpcmethod_ExportVariantSet_;
    const ::grpc::RpcMethod rpcmethod_GetVariantSet_;
    const ::grpc::RpcMethod rpcmethod_SearchVariantSets_;
    const ::grpc::RpcMethod rpcmethod_DeleteVariantSet_;
    const ::grpc::RpcMethod rpcmethod_UpdateVariantSet_;
    const ::grpc::RpcMethod rpcmethod_SearchVariants_;
    const ::grpc::RpcMethod rpcmethod_CreateVariant_;
    const ::grpc::RpcMethod rpcmethod_UpdateVariant_;
    const ::grpc::RpcMethod rpcmethod_DeleteVariant_;
    const ::grpc::RpcMethod rpcmethod_GetVariant_;
    const ::grpc::RpcMethod rpcmethod_MergeVariants_;
    const ::grpc::RpcMethod rpcmethod_SearchCallSets_;
    const ::grpc::RpcMethod rpcmethod_CreateCallSet_;
    const ::grpc::RpcMethod rpcmethod_UpdateCallSet_;
    const ::grpc::RpcMethod rpcmethod_DeleteCallSet_;
    const ::grpc::RpcMethod rpcmethod_GetCallSet_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Creates variant data by asynchronously importing the provided information.
    //
    // For the definitions of variant sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // The variants for import will be merged with any existing variant that
    // matches its reference sequence, start, end, reference bases, and
    // alternative bases. If no such variant exists, a new one will be created.
    //
    // When variants are merged, the call information from the new variant
    // is added to the existing variant, and Variant info fields are merged
    // as specified in
    // [infoMergeConfig][google.genomics.v1.ImportVariantsRequest.info_merge_config].
    // As a special case, for single-sample VCF files, QUAL and FILTER fields will
    // be moved to the call level; these are sometimes interpreted in a
    // call-specific context.
    // Imported VCF headers are appended to the metadata already in a variant set.
    virtual ::grpc::Status ImportVariants(::grpc::ServerContext* context, const ::google::genomics::v1::ImportVariantsRequest* request, ::google::longrunning::Operation* response);
    // Creates a new variant set.
    //
    // For the definitions of variant sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // The provided variant set must have a valid `datasetId` set - all other
    // fields are optional. Note that the `id` field will be ignored, as this is
    // assigned by the server.
    virtual ::grpc::Status CreateVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::CreateVariantSetRequest* request, ::google::genomics::v1::VariantSet* response);
    // Exports variant set data to an external destination.
    //
    // For the definitions of variant sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status ExportVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::ExportVariantSetRequest* request, ::google::longrunning::Operation* response);
    // Gets a variant set by ID.
    //
    // For the definitions of variant sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status GetVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::GetVariantSetRequest* request, ::google::genomics::v1::VariantSet* response);
    // Returns a list of all variant sets matching search criteria.
    //
    // For the definitions of variant sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // Implements
    // [GlobalAllianceApi.searchVariantSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L49).
    virtual ::grpc::Status SearchVariantSets(::grpc::ServerContext* context, const ::google::genomics::v1::SearchVariantSetsRequest* request, ::google::genomics::v1::SearchVariantSetsResponse* response);
    // Deletes a variant set including all variants, call sets, and calls within.
    // This is not reversible.
    //
    // For the definitions of variant sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status DeleteVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::DeleteVariantSetRequest* request, ::google::protobuf::Empty* response);
    // Updates a variant set using patch semantics.
    //
    // For the definitions of variant sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status UpdateVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::UpdateVariantSetRequest* request, ::google::genomics::v1::VariantSet* response);
    // Gets a list of variants matching the criteria.
    //
    // For the definitions of variants and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // Implements
    // [GlobalAllianceApi.searchVariants](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L126).
    virtual ::grpc::Status SearchVariants(::grpc::ServerContext* context, const ::google::genomics::v1::SearchVariantsRequest* request, ::google::genomics::v1::SearchVariantsResponse* response);
    // Creates a new variant.
    //
    // For the definitions of variants and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status CreateVariant(::grpc::ServerContext* context, const ::google::genomics::v1::CreateVariantRequest* request, ::google::genomics::v1::Variant* response);
    // Updates a variant.
    //
    // For the definitions of variants and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // This method supports patch semantics. Returns the modified variant without
    // its calls.
    virtual ::grpc::Status UpdateVariant(::grpc::ServerContext* context, const ::google::genomics::v1::UpdateVariantRequest* request, ::google::genomics::v1::Variant* response);
    // Deletes a variant.
    //
    // For the definitions of variants and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status DeleteVariant(::grpc::ServerContext* context, const ::google::genomics::v1::DeleteVariantRequest* request, ::google::protobuf::Empty* response);
    // Gets a variant by ID.
    //
    // For the definitions of variants and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status GetVariant(::grpc::ServerContext* context, const ::google::genomics::v1::GetVariantRequest* request, ::google::genomics::v1::Variant* response);
    // Merges the given variants with existing variants.
    //
    // For the definitions of variants and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // Each variant will be
    // merged with an existing variant that matches its reference sequence,
    // start, end, reference bases, and alternative bases. If no such variant
    // exists, a new one will be created.
    //
    // When variants are merged, the call information from the new variant
    // is added to the existing variant. Variant info fields are merged as
    // specified in the
    // [infoMergeConfig][google.genomics.v1.MergeVariantsRequest.info_merge_config]
    // field of the MergeVariantsRequest.
    //
    // Please exercise caution when using this method!  It is easy to introduce
    // mistakes in existing variants and difficult to back out of them.  For
    // example,
    // suppose you were trying to merge a new variant with an existing one and
    // both
    // variants contain calls that belong to callsets with the same callset ID.
    //
    //     // Existing variant - irrelevant fields trimmed for clarity
    //     {
    //         "variantSetId": "10473108253681171589",
    //         "referenceName": "1",
    //         "start": "10582",
    //         "referenceBases": "G",
    //         "alternateBases": [
    //             "A"
    //         ],
    //         "calls": [
    //             {
    //                 "callSetId": "10473108253681171589-0",
    //                 "callSetName": "CALLSET0",
    //                 "genotype": [
    //                     0,
    //                     1
    //                 ],
    //             }
    //         ]
    //     }
    //
    //     // New variant with conflicting call information
    //     {
    //         "variantSetId": "10473108253681171589",
    //         "referenceName": "1",
    //         "start": "10582",
    //         "referenceBases": "G",
    //         "alternateBases": [
    //             "A"
    //         ],
    //         "calls": [
    //             {
    //                 "callSetId": "10473108253681171589-0",
    //                 "callSetName": "CALLSET0",
    //                 "genotype": [
    //                     1,
    //                     1
    //                 ],
    //             }
    //         ]
    //     }
    //
    // The resulting merged variant would overwrite the existing calls with those
    // from the new variant:
    //
    //     {
    //         "variantSetId": "10473108253681171589",
    //         "referenceName": "1",
    //         "start": "10582",
    //         "referenceBases": "G",
    //         "alternateBases": [
    //             "A"
    //         ],
    //         "calls": [
    //             {
    //                 "callSetId": "10473108253681171589-0",
    //                 "callSetName": "CALLSET0",
    //                 "genotype": [
    //                     1,
    //                     1
    //                 ],
    //             }
    //         ]
    //     }
    //
    // This may be the desired outcome, but it is up to the user to determine if
    // if that is indeed the case.
    virtual ::grpc::Status MergeVariants(::grpc::ServerContext* context, const ::google::genomics::v1::MergeVariantsRequest* request, ::google::protobuf::Empty* response);
    // Gets a list of call sets matching the criteria.
    //
    // For the definitions of call sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // Implements
    // [GlobalAllianceApi.searchCallSets](https://github.com/ga4gh/schemas/blob/v0.5.1/src/main/resources/avro/variantmethods.avdl#L178).
    virtual ::grpc::Status SearchCallSets(::grpc::ServerContext* context, const ::google::genomics::v1::SearchCallSetsRequest* request, ::google::genomics::v1::SearchCallSetsResponse* response);
    // Creates a new call set.
    //
    // For the definitions of call sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status CreateCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::CreateCallSetRequest* request, ::google::genomics::v1::CallSet* response);
    // Updates a call set.
    //
    // For the definitions of call sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    //
    // This method supports patch semantics.
    virtual ::grpc::Status UpdateCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::UpdateCallSetRequest* request, ::google::genomics::v1::CallSet* response);
    // Deletes a call set.
    //
    // For the definitions of call sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status DeleteCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::DeleteCallSetRequest* request, ::google::protobuf::Empty* response);
    // Gets a call set by ID.
    //
    // For the definitions of call sets and other genomics resources, see
    // [Fundamentals of Google
    // Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
    virtual ::grpc::Status GetCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::GetCallSetRequest* request, ::google::genomics::v1::CallSet* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ImportVariants : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ImportVariants() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ImportVariants() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportVariants(::grpc::ServerContext* context, const ::google::genomics::v1::ImportVariantsRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestImportVariants(::grpc::ServerContext* context, ::google::genomics::v1::ImportVariantsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateVariantSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateVariantSet() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_CreateVariantSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::CreateVariantSetRequest* request, ::google::genomics::v1::VariantSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateVariantSet(::grpc::ServerContext* context, ::google::genomics::v1::CreateVariantSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::genomics::v1::VariantSet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExportVariantSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ExportVariantSet() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ExportVariantSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::ExportVariantSetRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExportVariantSet(::grpc::ServerContext* context, ::google::genomics::v1::ExportVariantSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::longrunning::Operation>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetVariantSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetVariantSet() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetVariantSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::GetVariantSetRequest* request, ::google::genomics::v1::VariantSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVariantSet(::grpc::ServerContext* context, ::google::genomics::v1::GetVariantSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::genomics::v1::VariantSet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SearchVariantSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SearchVariantSets() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_SearchVariantSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchVariantSets(::grpc::ServerContext* context, const ::google::genomics::v1::SearchVariantSetsRequest* request, ::google::genomics::v1::SearchVariantSetsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchVariantSets(::grpc::ServerContext* context, ::google::genomics::v1::SearchVariantSetsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::genomics::v1::SearchVariantSetsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteVariantSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteVariantSet() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteVariantSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::DeleteVariantSetRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteVariantSet(::grpc::ServerContext* context, ::google::genomics::v1::DeleteVariantSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateVariantSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateVariantSet() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_UpdateVariantSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::UpdateVariantSetRequest* request, ::google::genomics::v1::VariantSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateVariantSet(::grpc::ServerContext* context, ::google::genomics::v1::UpdateVariantSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::genomics::v1::VariantSet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SearchVariants : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SearchVariants() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_SearchVariants() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchVariants(::grpc::ServerContext* context, const ::google::genomics::v1::SearchVariantsRequest* request, ::google::genomics::v1::SearchVariantsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchVariants(::grpc::ServerContext* context, ::google::genomics::v1::SearchVariantsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::genomics::v1::SearchVariantsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateVariant : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateVariant() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_CreateVariant() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVariant(::grpc::ServerContext* context, const ::google::genomics::v1::CreateVariantRequest* request, ::google::genomics::v1::Variant* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateVariant(::grpc::ServerContext* context, ::google::genomics::v1::CreateVariantRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::genomics::v1::Variant>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateVariant : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateVariant() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_UpdateVariant() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVariant(::grpc::ServerContext* context, const ::google::genomics::v1::UpdateVariantRequest* request, ::google::genomics::v1::Variant* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateVariant(::grpc::ServerContext* context, ::google::genomics::v1::UpdateVariantRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::genomics::v1::Variant>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteVariant : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteVariant() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_DeleteVariant() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVariant(::grpc::ServerContext* context, const ::google::genomics::v1::DeleteVariantRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteVariant(::grpc::ServerContext* context, ::google::genomics::v1::DeleteVariantRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetVariant : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetVariant() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetVariant() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVariant(::grpc::ServerContext* context, const ::google::genomics::v1::GetVariantRequest* request, ::google::genomics::v1::Variant* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVariant(::grpc::ServerContext* context, ::google::genomics::v1::GetVariantRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::genomics::v1::Variant>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MergeVariants : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_MergeVariants() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_MergeVariants() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MergeVariants(::grpc::ServerContext* context, const ::google::genomics::v1::MergeVariantsRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMergeVariants(::grpc::ServerContext* context, ::google::genomics::v1::MergeVariantsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SearchCallSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SearchCallSets() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_SearchCallSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchCallSets(::grpc::ServerContext* context, const ::google::genomics::v1::SearchCallSetsRequest* request, ::google::genomics::v1::SearchCallSetsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchCallSets(::grpc::ServerContext* context, ::google::genomics::v1::SearchCallSetsRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::genomics::v1::SearchCallSetsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateCallSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateCallSet() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_CreateCallSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::CreateCallSetRequest* request, ::google::genomics::v1::CallSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCallSet(::grpc::ServerContext* context, ::google::genomics::v1::CreateCallSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::genomics::v1::CallSet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateCallSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpdateCallSet() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_UpdateCallSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::UpdateCallSetRequest* request, ::google::genomics::v1::CallSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCallSet(::grpc::ServerContext* context, ::google::genomics::v1::UpdateCallSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::genomics::v1::CallSet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteCallSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteCallSet() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_DeleteCallSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::DeleteCallSetRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteCallSet(::grpc::ServerContext* context, ::google::genomics::v1::DeleteCallSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCallSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetCallSet() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_GetCallSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::GetCallSetRequest* request, ::google::genomics::v1::CallSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCallSet(::grpc::ServerContext* context, ::google::genomics::v1::GetCallSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::genomics::v1::CallSet>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ImportVariants<WithAsyncMethod_CreateVariantSet<WithAsyncMethod_ExportVariantSet<WithAsyncMethod_GetVariantSet<WithAsyncMethod_SearchVariantSets<WithAsyncMethod_DeleteVariantSet<WithAsyncMethod_UpdateVariantSet<WithAsyncMethod_SearchVariants<WithAsyncMethod_CreateVariant<WithAsyncMethod_UpdateVariant<WithAsyncMethod_DeleteVariant<WithAsyncMethod_GetVariant<WithAsyncMethod_MergeVariants<WithAsyncMethod_SearchCallSets<WithAsyncMethod_CreateCallSet<WithAsyncMethod_UpdateCallSet<WithAsyncMethod_DeleteCallSet<WithAsyncMethod_GetCallSet<Service > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_ImportVariants : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ImportVariants() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ImportVariants() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ImportVariants(::grpc::ServerContext* context, const ::google::genomics::v1::ImportVariantsRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateVariantSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateVariantSet() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_CreateVariantSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::CreateVariantSetRequest* request, ::google::genomics::v1::VariantSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExportVariantSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ExportVariantSet() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ExportVariantSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExportVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::ExportVariantSetRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetVariantSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetVariantSet() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetVariantSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::GetVariantSetRequest* request, ::google::genomics::v1::VariantSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SearchVariantSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SearchVariantSets() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_SearchVariantSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchVariantSets(::grpc::ServerContext* context, const ::google::genomics::v1::SearchVariantSetsRequest* request, ::google::genomics::v1::SearchVariantSetsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteVariantSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteVariantSet() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteVariantSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::DeleteVariantSetRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateVariantSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateVariantSet() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_UpdateVariantSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::UpdateVariantSetRequest* request, ::google::genomics::v1::VariantSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SearchVariants : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SearchVariants() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_SearchVariants() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchVariants(::grpc::ServerContext* context, const ::google::genomics::v1::SearchVariantsRequest* request, ::google::genomics::v1::SearchVariantsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateVariant : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateVariant() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_CreateVariant() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateVariant(::grpc::ServerContext* context, const ::google::genomics::v1::CreateVariantRequest* request, ::google::genomics::v1::Variant* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateVariant : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateVariant() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_UpdateVariant() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateVariant(::grpc::ServerContext* context, const ::google::genomics::v1::UpdateVariantRequest* request, ::google::genomics::v1::Variant* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteVariant : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteVariant() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_DeleteVariant() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteVariant(::grpc::ServerContext* context, const ::google::genomics::v1::DeleteVariantRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetVariant : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetVariant() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetVariant() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVariant(::grpc::ServerContext* context, const ::google::genomics::v1::GetVariantRequest* request, ::google::genomics::v1::Variant* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MergeVariants : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_MergeVariants() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_MergeVariants() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MergeVariants(::grpc::ServerContext* context, const ::google::genomics::v1::MergeVariantsRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SearchCallSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SearchCallSets() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_SearchCallSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchCallSets(::grpc::ServerContext* context, const ::google::genomics::v1::SearchCallSetsRequest* request, ::google::genomics::v1::SearchCallSetsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateCallSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateCallSet() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_CreateCallSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::CreateCallSetRequest* request, ::google::genomics::v1::CallSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateCallSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpdateCallSet() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_UpdateCallSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::UpdateCallSetRequest* request, ::google::genomics::v1::CallSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteCallSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteCallSet() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_DeleteCallSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::DeleteCallSetRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCallSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetCallSet() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_GetCallSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::GetCallSetRequest* request, ::google::genomics::v1::CallSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ImportVariants : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ImportVariants() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::ImportVariantsRequest, ::google::longrunning::Operation>(std::bind(&WithStreamedUnaryMethod_ImportVariants<BaseClass>::StreamedImportVariants, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ImportVariants() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ImportVariants(::grpc::ServerContext* context, const ::google::genomics::v1::ImportVariantsRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedImportVariants(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::ImportVariantsRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateVariantSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateVariantSet() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::CreateVariantSetRequest, ::google::genomics::v1::VariantSet>(std::bind(&WithStreamedUnaryMethod_CreateVariantSet<BaseClass>::StreamedCreateVariantSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateVariantSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::CreateVariantSetRequest* request, ::google::genomics::v1::VariantSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateVariantSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::CreateVariantSetRequest,::google::genomics::v1::VariantSet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExportVariantSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ExportVariantSet() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::ExportVariantSetRequest, ::google::longrunning::Operation>(std::bind(&WithStreamedUnaryMethod_ExportVariantSet<BaseClass>::StreamedExportVariantSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ExportVariantSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExportVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::ExportVariantSetRequest* request, ::google::longrunning::Operation* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExportVariantSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::ExportVariantSetRequest,::google::longrunning::Operation>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetVariantSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetVariantSet() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::GetVariantSetRequest, ::google::genomics::v1::VariantSet>(std::bind(&WithStreamedUnaryMethod_GetVariantSet<BaseClass>::StreamedGetVariantSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetVariantSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::GetVariantSetRequest* request, ::google::genomics::v1::VariantSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetVariantSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::GetVariantSetRequest,::google::genomics::v1::VariantSet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SearchVariantSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SearchVariantSets() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::SearchVariantSetsRequest, ::google::genomics::v1::SearchVariantSetsResponse>(std::bind(&WithStreamedUnaryMethod_SearchVariantSets<BaseClass>::StreamedSearchVariantSets, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SearchVariantSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SearchVariantSets(::grpc::ServerContext* context, const ::google::genomics::v1::SearchVariantSetsRequest* request, ::google::genomics::v1::SearchVariantSetsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearchVariantSets(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::SearchVariantSetsRequest,::google::genomics::v1::SearchVariantSetsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteVariantSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteVariantSet() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::DeleteVariantSetRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteVariantSet<BaseClass>::StreamedDeleteVariantSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteVariantSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::DeleteVariantSetRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteVariantSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::DeleteVariantSetRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateVariantSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateVariantSet() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::UpdateVariantSetRequest, ::google::genomics::v1::VariantSet>(std::bind(&WithStreamedUnaryMethod_UpdateVariantSet<BaseClass>::StreamedUpdateVariantSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateVariantSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateVariantSet(::grpc::ServerContext* context, const ::google::genomics::v1::UpdateVariantSetRequest* request, ::google::genomics::v1::VariantSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateVariantSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::UpdateVariantSetRequest,::google::genomics::v1::VariantSet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SearchVariants : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SearchVariants() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::SearchVariantsRequest, ::google::genomics::v1::SearchVariantsResponse>(std::bind(&WithStreamedUnaryMethod_SearchVariants<BaseClass>::StreamedSearchVariants, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SearchVariants() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SearchVariants(::grpc::ServerContext* context, const ::google::genomics::v1::SearchVariantsRequest* request, ::google::genomics::v1::SearchVariantsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearchVariants(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::SearchVariantsRequest,::google::genomics::v1::SearchVariantsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateVariant : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateVariant() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::CreateVariantRequest, ::google::genomics::v1::Variant>(std::bind(&WithStreamedUnaryMethod_CreateVariant<BaseClass>::StreamedCreateVariant, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateVariant() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateVariant(::grpc::ServerContext* context, const ::google::genomics::v1::CreateVariantRequest* request, ::google::genomics::v1::Variant* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateVariant(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::CreateVariantRequest,::google::genomics::v1::Variant>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateVariant : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateVariant() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::UpdateVariantRequest, ::google::genomics::v1::Variant>(std::bind(&WithStreamedUnaryMethod_UpdateVariant<BaseClass>::StreamedUpdateVariant, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateVariant() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateVariant(::grpc::ServerContext* context, const ::google::genomics::v1::UpdateVariantRequest* request, ::google::genomics::v1::Variant* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateVariant(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::UpdateVariantRequest,::google::genomics::v1::Variant>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteVariant : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteVariant() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::DeleteVariantRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteVariant<BaseClass>::StreamedDeleteVariant, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteVariant() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteVariant(::grpc::ServerContext* context, const ::google::genomics::v1::DeleteVariantRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteVariant(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::DeleteVariantRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetVariant : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetVariant() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::GetVariantRequest, ::google::genomics::v1::Variant>(std::bind(&WithStreamedUnaryMethod_GetVariant<BaseClass>::StreamedGetVariant, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetVariant() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetVariant(::grpc::ServerContext* context, const ::google::genomics::v1::GetVariantRequest* request, ::google::genomics::v1::Variant* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetVariant(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::GetVariantRequest,::google::genomics::v1::Variant>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MergeVariants : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_MergeVariants() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::MergeVariantsRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_MergeVariants<BaseClass>::StreamedMergeVariants, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_MergeVariants() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MergeVariants(::grpc::ServerContext* context, const ::google::genomics::v1::MergeVariantsRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMergeVariants(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::MergeVariantsRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SearchCallSets : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SearchCallSets() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::SearchCallSetsRequest, ::google::genomics::v1::SearchCallSetsResponse>(std::bind(&WithStreamedUnaryMethod_SearchCallSets<BaseClass>::StreamedSearchCallSets, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SearchCallSets() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SearchCallSets(::grpc::ServerContext* context, const ::google::genomics::v1::SearchCallSetsRequest* request, ::google::genomics::v1::SearchCallSetsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearchCallSets(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::SearchCallSetsRequest,::google::genomics::v1::SearchCallSetsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateCallSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateCallSet() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::CreateCallSetRequest, ::google::genomics::v1::CallSet>(std::bind(&WithStreamedUnaryMethod_CreateCallSet<BaseClass>::StreamedCreateCallSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateCallSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::CreateCallSetRequest* request, ::google::genomics::v1::CallSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateCallSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::CreateCallSetRequest,::google::genomics::v1::CallSet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateCallSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpdateCallSet() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::UpdateCallSetRequest, ::google::genomics::v1::CallSet>(std::bind(&WithStreamedUnaryMethod_UpdateCallSet<BaseClass>::StreamedUpdateCallSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateCallSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::UpdateCallSetRequest* request, ::google::genomics::v1::CallSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateCallSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::UpdateCallSetRequest,::google::genomics::v1::CallSet>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteCallSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteCallSet() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::DeleteCallSetRequest, ::google::protobuf::Empty>(std::bind(&WithStreamedUnaryMethod_DeleteCallSet<BaseClass>::StreamedDeleteCallSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteCallSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::DeleteCallSetRequest* request, ::google::protobuf::Empty* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteCallSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::DeleteCallSetRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCallSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetCallSet() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::StreamedUnaryHandler< ::google::genomics::v1::GetCallSetRequest, ::google::genomics::v1::CallSet>(std::bind(&WithStreamedUnaryMethod_GetCallSet<BaseClass>::StreamedGetCallSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetCallSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCallSet(::grpc::ServerContext* context, const ::google::genomics::v1::GetCallSetRequest* request, ::google::genomics::v1::CallSet* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCallSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::genomics::v1::GetCallSetRequest,::google::genomics::v1::CallSet>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ImportVariants<WithStreamedUnaryMethod_CreateVariantSet<WithStreamedUnaryMethod_ExportVariantSet<WithStreamedUnaryMethod_GetVariantSet<WithStreamedUnaryMethod_SearchVariantSets<WithStreamedUnaryMethod_DeleteVariantSet<WithStreamedUnaryMethod_UpdateVariantSet<WithStreamedUnaryMethod_SearchVariants<WithStreamedUnaryMethod_CreateVariant<WithStreamedUnaryMethod_UpdateVariant<WithStreamedUnaryMethod_DeleteVariant<WithStreamedUnaryMethod_GetVariant<WithStreamedUnaryMethod_MergeVariants<WithStreamedUnaryMethod_SearchCallSets<WithStreamedUnaryMethod_CreateCallSet<WithStreamedUnaryMethod_UpdateCallSet<WithStreamedUnaryMethod_DeleteCallSet<WithStreamedUnaryMethod_GetCallSet<Service > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ImportVariants<WithStreamedUnaryMethod_CreateVariantSet<WithStreamedUnaryMethod_ExportVariantSet<WithStreamedUnaryMethod_GetVariantSet<WithStreamedUnaryMethod_SearchVariantSets<WithStreamedUnaryMethod_DeleteVariantSet<WithStreamedUnaryMethod_UpdateVariantSet<WithStreamedUnaryMethod_SearchVariants<WithStreamedUnaryMethod_CreateVariant<WithStreamedUnaryMethod_UpdateVariant<WithStreamedUnaryMethod_DeleteVariant<WithStreamedUnaryMethod_GetVariant<WithStreamedUnaryMethod_MergeVariants<WithStreamedUnaryMethod_SearchCallSets<WithStreamedUnaryMethod_CreateCallSet<WithStreamedUnaryMethod_UpdateCallSet<WithStreamedUnaryMethod_DeleteCallSet<WithStreamedUnaryMethod_GetCallSet<Service > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace genomics
}  // namespace google


#endif  // GRPC_google_2fgenomics_2fv1_2fvariants_2eproto__INCLUDED
