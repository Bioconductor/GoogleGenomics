// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/operations.proto

#ifndef PROTOBUF_google_2fgenomics_2fv1_2foperations_2eproto__INCLUDED
#define PROTOBUF_google_2fgenomics_2fv1_2foperations_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/any.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace api {
}  // namespace api
namespace genomics {
namespace v1 {
class OperationEvent;
class OperationEventDefaultTypeInternal;
extern OperationEventDefaultTypeInternal _OperationEvent_default_instance_;
class OperationMetadata;
class OperationMetadataDefaultTypeInternal;
extern OperationMetadataDefaultTypeInternal _OperationMetadata_default_instance_;
class OperationMetadata_LabelsEntry;
class OperationMetadata_LabelsEntryDefaultTypeInternal;
extern OperationMetadata_LabelsEntryDefaultTypeInternal _OperationMetadata_LabelsEntry_default_instance_;
}  // namespace v1
}  // namespace genomics
namespace protobuf {
class Any;
class AnyDefaultTypeInternal;
extern AnyDefaultTypeInternal _Any_default_instance_;
class Timestamp;
class TimestampDefaultTypeInternal;
extern TimestampDefaultTypeInternal _Timestamp_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace google {
namespace genomics {
namespace v1 {

namespace protobuf_google_2fgenomics_2fv1_2foperations_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_google_2fgenomics_2fv1_2foperations_2eproto

// ===================================================================


// -------------------------------------------------------------------

class OperationMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.OperationMetadata) */ {
 public:
  OperationMetadata();
  virtual ~OperationMetadata();

  OperationMetadata(const OperationMetadata& from);

  inline OperationMetadata& operator=(const OperationMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationMetadata& default_instance();

  static inline const OperationMetadata* internal_default_instance() {
    return reinterpret_cast<const OperationMetadata*>(
               &_OperationMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(OperationMetadata* other);
  void Swap(OperationMetadata* other);

  // implements Message ----------------------------------------------

  inline OperationMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  OperationMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OperationMetadata& from);
  void MergeFrom(const OperationMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OperationMetadata* other);
  protected:
  explicit OperationMetadata(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.OperationEvent events = 6;
  int events_size() const;
  void clear_events();
  static const int kEventsFieldNumber = 6;
  const ::google::genomics::v1::OperationEvent& events(int index) const;
  ::google::genomics::v1::OperationEvent* mutable_events(int index);
  ::google::genomics::v1::OperationEvent* add_events();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::OperationEvent >*
      mutable_events();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::OperationEvent >&
      events() const;

  // map<string, string> labels = 9;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 9;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // string project_id = 1;
  void clear_project_id();
  static const int kProjectIdFieldNumber = 1;
  const ::std::string& project_id() const;
  void set_project_id(const ::std::string& value);
  void set_project_id(const char* value);
  void set_project_id(const char* value, size_t size);
  ::std::string* mutable_project_id();
  ::std::string* release_project_id();
  void set_allocated_project_id(::std::string* project_id);
  ::std::string* unsafe_arena_release_project_id();
  void unsafe_arena_set_allocated_project_id(
      ::std::string* project_id);

  // string client_id = 7;
  void clear_client_id();
  static const int kClientIdFieldNumber = 7;
  const ::std::string& client_id() const;
  void set_client_id(const ::std::string& value);
  void set_client_id(const char* value);
  void set_client_id(const char* value, size_t size);
  ::std::string* mutable_client_id();
  ::std::string* release_client_id();
  void set_allocated_client_id(::std::string* client_id);
  ::std::string* unsafe_arena_release_client_id();
  void unsafe_arena_set_allocated_client_id(
      ::std::string* client_id);

  // .google.protobuf.Timestamp create_time = 2;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 2;
  private:
  void _slow_mutable_create_time();
  void _slow_set_allocated_create_time(
      ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** create_time);
  ::google::protobuf::Timestamp* _slow_release_create_time();
  public:
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* mutable_create_time();
  ::google::protobuf::Timestamp* release_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_create_time();
  void unsafe_arena_set_allocated_create_time(
      ::google::protobuf::Timestamp* create_time);

  // .google.protobuf.Timestamp start_time = 3;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  private:
  void _slow_mutable_start_time();
  void _slow_set_allocated_start_time(
      ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** start_time);
  ::google::protobuf::Timestamp* _slow_release_start_time();
  public:
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* mutable_start_time();
  ::google::protobuf::Timestamp* release_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_start_time();
  void unsafe_arena_set_allocated_start_time(
      ::google::protobuf::Timestamp* start_time);

  // .google.protobuf.Timestamp end_time = 4;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  private:
  void _slow_mutable_end_time();
  void _slow_set_allocated_end_time(
      ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** end_time);
  ::google::protobuf::Timestamp* _slow_release_end_time();
  public:
  const ::google::protobuf::Timestamp& end_time() const;
  ::google::protobuf::Timestamp* mutable_end_time();
  ::google::protobuf::Timestamp* release_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* end_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_end_time();
  void unsafe_arena_set_allocated_end_time(
      ::google::protobuf::Timestamp* end_time);

  // .google.protobuf.Any request = 5;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 5;
  private:
  void _slow_mutable_request();
  ::google::protobuf::Any* _slow_release_request();
  public:
  const ::google::protobuf::Any& request() const;
  ::google::protobuf::Any* mutable_request();
  ::google::protobuf::Any* release_request();
  void set_allocated_request(::google::protobuf::Any* request);
  ::google::protobuf::Any* unsafe_arena_release_request();
  void unsafe_arena_set_allocated_request(
      ::google::protobuf::Any* request);

  // .google.protobuf.Any runtime_metadata = 8;
  bool has_runtime_metadata() const;
  void clear_runtime_metadata();
  static const int kRuntimeMetadataFieldNumber = 8;
  private:
  void _slow_mutable_runtime_metadata();
  ::google::protobuf::Any* _slow_release_runtime_metadata();
  public:
  const ::google::protobuf::Any& runtime_metadata() const;
  ::google::protobuf::Any* mutable_runtime_metadata();
  ::google::protobuf::Any* release_runtime_metadata();
  void set_allocated_runtime_metadata(::google::protobuf::Any* runtime_metadata);
  ::google::protobuf::Any* unsafe_arena_release_runtime_metadata();
  void unsafe_arena_set_allocated_runtime_metadata(
      ::google::protobuf::Any* runtime_metadata);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.OperationMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::OperationEvent > events_;
  public:
  class OperationMetadata_LabelsEntry : public ::google::protobuf::internal::MapEntry<OperationMetadata_LabelsEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<OperationMetadata_LabelsEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > SuperType;
    OperationMetadata_LabelsEntry();
    OperationMetadata_LabelsEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const OperationMetadata_LabelsEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_OperationMetadata_LabelsEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      OperationMetadata_LabelsEntry,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  private:
  ::google::protobuf::internal::ArenaStringPtr project_id_;
  ::google::protobuf::internal::ArenaStringPtr client_id_;
  ::google::protobuf::Timestamp* create_time_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* end_time_;
  ::google::protobuf::Any* request_;
  ::google::protobuf::Any* runtime_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2foperations_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OperationEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.OperationEvent) */ {
 public:
  OperationEvent();
  virtual ~OperationEvent();

  OperationEvent(const OperationEvent& from);

  inline OperationEvent& operator=(const OperationEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationEvent& default_instance();

  static inline const OperationEvent* internal_default_instance() {
    return reinterpret_cast<const OperationEvent*>(
               &_OperationEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(OperationEvent* other);
  void Swap(OperationEvent* other);

  // implements Message ----------------------------------------------

  inline OperationEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  OperationEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OperationEvent& from);
  void MergeFrom(const OperationEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OperationEvent* other);
  protected:
  explicit OperationEvent(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string description = 3;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);
  ::std::string* unsafe_arena_release_description();
  void unsafe_arena_set_allocated_description(
      ::std::string* description);

  // .google.protobuf.Timestamp start_time = 1;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 1;
  private:
  void _slow_mutable_start_time();
  void _slow_set_allocated_start_time(
      ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** start_time);
  ::google::protobuf::Timestamp* _slow_release_start_time();
  public:
  const ::google::protobuf::Timestamp& start_time() const;
  ::google::protobuf::Timestamp* mutable_start_time();
  ::google::protobuf::Timestamp* release_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* start_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_start_time();
  void unsafe_arena_set_allocated_start_time(
      ::google::protobuf::Timestamp* start_time);

  // .google.protobuf.Timestamp end_time = 2;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 2;
  private:
  void _slow_mutable_end_time();
  void _slow_set_allocated_end_time(
      ::google::protobuf::Arena* message_arena, ::google::protobuf::Timestamp** end_time);
  ::google::protobuf::Timestamp* _slow_release_end_time();
  public:
  const ::google::protobuf::Timestamp& end_time() const;
  ::google::protobuf::Timestamp* mutable_end_time();
  ::google::protobuf::Timestamp* release_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* end_time);
  ::google::protobuf::Timestamp* unsafe_arena_release_end_time();
  void unsafe_arena_set_allocated_end_time(
      ::google::protobuf::Timestamp* end_time);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.OperationEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::Timestamp* start_time_;
  ::google::protobuf::Timestamp* end_time_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2foperations_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// OperationMetadata

// string project_id = 1;
inline void OperationMetadata::clear_project_id() {
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& OperationMetadata::project_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.project_id)
  return project_id_.Get();
}
inline void OperationMetadata::set_project_id(const ::std::string& value) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.OperationMetadata.project_id)
}
inline void OperationMetadata::set_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.OperationMetadata.project_id)
}
inline void OperationMetadata::set_project_id(const char* value,
    size_t size) {
  
  project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.OperationMetadata.project_id)
}
inline ::std::string* OperationMetadata::mutable_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.project_id)
  return project_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* OperationMetadata::release_project_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationMetadata.project_id)
  
  return project_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* OperationMetadata::unsafe_arena_release_project_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.OperationMetadata.project_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return project_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void OperationMetadata::set_allocated_project_id(::std::string* project_id) {
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationMetadata.project_id)
}
inline void OperationMetadata::unsafe_arena_set_allocated_project_id(
    ::std::string* project_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (project_id != NULL) {
    
  } else {
    
  }
  project_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      project_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.OperationMetadata.project_id)
}

// .google.protobuf.Timestamp create_time = 2;
inline bool OperationMetadata::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline void OperationMetadata::clear_create_time() {
  if (GetArenaNoVirtual() == NULL && create_time_ != NULL) delete create_time_;
  create_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& OperationMetadata::create_time() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.create_time)
  return create_time_ != NULL ? *create_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* OperationMetadata::mutable_create_time() {
  
  if (create_time_ == NULL) {
    _slow_mutable_create_time();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.create_time)
  return create_time_;
}
inline ::google::protobuf::Timestamp* OperationMetadata::release_create_time() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationMetadata.create_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_create_time();
  } else {
    ::google::protobuf::Timestamp* temp = create_time_;
    create_time_ = NULL;
    return temp;
  }
}
inline  void OperationMetadata::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete create_time_;
  }
  if (create_time != NULL) {
    _slow_set_allocated_create_time(message_arena, &create_time);
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationMetadata.create_time)
}

// .google.protobuf.Timestamp start_time = 3;
inline bool OperationMetadata::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline void OperationMetadata::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& OperationMetadata::start_time() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* OperationMetadata::mutable_start_time() {
  
  if (start_time_ == NULL) {
    _slow_mutable_start_time();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.start_time)
  return start_time_;
}
inline ::google::protobuf::Timestamp* OperationMetadata::release_start_time() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationMetadata.start_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_start_time();
  } else {
    ::google::protobuf::Timestamp* temp = start_time_;
    start_time_ = NULL;
    return temp;
  }
}
inline  void OperationMetadata::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete start_time_;
  }
  if (start_time != NULL) {
    _slow_set_allocated_start_time(message_arena, &start_time);
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationMetadata.start_time)
}

// .google.protobuf.Timestamp end_time = 4;
inline bool OperationMetadata::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
inline void OperationMetadata::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& OperationMetadata::end_time() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* OperationMetadata::mutable_end_time() {
  
  if (end_time_ == NULL) {
    _slow_mutable_end_time();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.end_time)
  return end_time_;
}
inline ::google::protobuf::Timestamp* OperationMetadata::release_end_time() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationMetadata.end_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_end_time();
  } else {
    ::google::protobuf::Timestamp* temp = end_time_;
    end_time_ = NULL;
    return temp;
  }
}
inline  void OperationMetadata::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete end_time_;
  }
  if (end_time != NULL) {
    _slow_set_allocated_end_time(message_arena, &end_time);
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationMetadata.end_time)
}

// .google.protobuf.Any request = 5;
inline bool OperationMetadata::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
inline void OperationMetadata::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) delete request_;
  request_ = NULL;
}
inline const ::google::protobuf::Any& OperationMetadata::request() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.request)
  return request_ != NULL ? *request_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* OperationMetadata::mutable_request() {
  
  if (request_ == NULL) {
    _slow_mutable_request();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.request)
  return request_;
}
inline ::google::protobuf::Any* OperationMetadata::release_request() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationMetadata.request)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_request();
  } else {
    ::google::protobuf::Any* temp = request_;
    request_ = NULL;
    return temp;
  }
}
inline  void OperationMetadata::set_allocated_request(::google::protobuf::Any* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete request_;
  }
  if (request != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(request);
    }
  }
  request_ = request;
  if (request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationMetadata.request)
}

// repeated .google.genomics.v1.OperationEvent events = 6;
inline int OperationMetadata::events_size() const {
  return events_.size();
}
inline void OperationMetadata::clear_events() {
  events_.Clear();
}
inline const ::google::genomics::v1::OperationEvent& OperationMetadata::events(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.events)
  return events_.Get(index);
}
inline ::google::genomics::v1::OperationEvent* OperationMetadata::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.events)
  return events_.Mutable(index);
}
inline ::google::genomics::v1::OperationEvent* OperationMetadata::add_events() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.OperationMetadata.events)
  return events_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::OperationEvent >*
OperationMetadata::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.OperationMetadata.events)
  return &events_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::OperationEvent >&
OperationMetadata::events() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.OperationMetadata.events)
  return events_;
}

// string client_id = 7;
inline void OperationMetadata::clear_client_id() {
  client_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& OperationMetadata::client_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.client_id)
  return client_id_.Get();
}
inline void OperationMetadata::set_client_id(const ::std::string& value) {
  
  client_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.OperationMetadata.client_id)
}
inline void OperationMetadata::set_client_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.OperationMetadata.client_id)
}
inline void OperationMetadata::set_client_id(const char* value,
    size_t size) {
  
  client_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.OperationMetadata.client_id)
}
inline ::std::string* OperationMetadata::mutable_client_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.client_id)
  return client_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* OperationMetadata::release_client_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationMetadata.client_id)
  
  return client_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* OperationMetadata::unsafe_arena_release_client_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.OperationMetadata.client_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return client_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void OperationMetadata::set_allocated_client_id(::std::string* client_id) {
  if (client_id != NULL) {
    
  } else {
    
  }
  client_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationMetadata.client_id)
}
inline void OperationMetadata::unsafe_arena_set_allocated_client_id(
    ::std::string* client_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (client_id != NULL) {
    
  } else {
    
  }
  client_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      client_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.OperationMetadata.client_id)
}

// .google.protobuf.Any runtime_metadata = 8;
inline bool OperationMetadata::has_runtime_metadata() const {
  return this != internal_default_instance() && runtime_metadata_ != NULL;
}
inline void OperationMetadata::clear_runtime_metadata() {
  if (GetArenaNoVirtual() == NULL && runtime_metadata_ != NULL) delete runtime_metadata_;
  runtime_metadata_ = NULL;
}
inline const ::google::protobuf::Any& OperationMetadata::runtime_metadata() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationMetadata.runtime_metadata)
  return runtime_metadata_ != NULL ? *runtime_metadata_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* OperationMetadata::mutable_runtime_metadata() {
  
  if (runtime_metadata_ == NULL) {
    _slow_mutable_runtime_metadata();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationMetadata.runtime_metadata)
  return runtime_metadata_;
}
inline ::google::protobuf::Any* OperationMetadata::release_runtime_metadata() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationMetadata.runtime_metadata)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_runtime_metadata();
  } else {
    ::google::protobuf::Any* temp = runtime_metadata_;
    runtime_metadata_ = NULL;
    return temp;
  }
}
inline  void OperationMetadata::set_allocated_runtime_metadata(::google::protobuf::Any* runtime_metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete runtime_metadata_;
  }
  if (runtime_metadata != NULL) {
    if (message_arena != NULL) {
      message_arena->Own(runtime_metadata);
    }
  }
  runtime_metadata_ = runtime_metadata;
  if (runtime_metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationMetadata.runtime_metadata)
}

// map<string, string> labels = 9;
inline int OperationMetadata::labels_size() const {
  return labels_.size();
}
inline void OperationMetadata::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
OperationMetadata::labels() const {
  // @@protoc_insertion_point(field_map:google.genomics.v1.OperationMetadata.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
OperationMetadata::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.genomics.v1.OperationMetadata.labels)
  return labels_.MutableMap();
}

// -------------------------------------------------------------------

// OperationEvent

// .google.protobuf.Timestamp start_time = 1;
inline bool OperationEvent::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline void OperationEvent::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) delete start_time_;
  start_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& OperationEvent::start_time() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationEvent.start_time)
  return start_time_ != NULL ? *start_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* OperationEvent::mutable_start_time() {
  
  if (start_time_ == NULL) {
    _slow_mutable_start_time();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationEvent.start_time)
  return start_time_;
}
inline ::google::protobuf::Timestamp* OperationEvent::release_start_time() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationEvent.start_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_start_time();
  } else {
    ::google::protobuf::Timestamp* temp = start_time_;
    start_time_ = NULL;
    return temp;
  }
}
inline  void OperationEvent::set_allocated_start_time(::google::protobuf::Timestamp* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete start_time_;
  }
  if (start_time != NULL) {
    _slow_set_allocated_start_time(message_arena, &start_time);
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationEvent.start_time)
}

// .google.protobuf.Timestamp end_time = 2;
inline bool OperationEvent::has_end_time() const {
  return this != internal_default_instance() && end_time_ != NULL;
}
inline void OperationEvent::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) delete end_time_;
  end_time_ = NULL;
}
inline const ::google::protobuf::Timestamp& OperationEvent::end_time() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationEvent.end_time)
  return end_time_ != NULL ? *end_time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* OperationEvent::mutable_end_time() {
  
  if (end_time_ == NULL) {
    _slow_mutable_end_time();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationEvent.end_time)
  return end_time_;
}
inline ::google::protobuf::Timestamp* OperationEvent::release_end_time() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationEvent.end_time)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_end_time();
  } else {
    ::google::protobuf::Timestamp* temp = end_time_;
    end_time_ = NULL;
    return temp;
  }
}
inline  void OperationEvent::set_allocated_end_time(::google::protobuf::Timestamp* end_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete end_time_;
  }
  if (end_time != NULL) {
    _slow_set_allocated_end_time(message_arena, &end_time);
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationEvent.end_time)
}

// string description = 3;
inline void OperationEvent::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& OperationEvent::description() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.OperationEvent.description)
  return description_.Get();
}
inline void OperationEvent::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.OperationEvent.description)
}
inline void OperationEvent::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.OperationEvent.description)
}
inline void OperationEvent::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.OperationEvent.description)
}
inline ::std::string* OperationEvent::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.OperationEvent.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* OperationEvent::release_description() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.OperationEvent.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* OperationEvent::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.OperationEvent.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void OperationEvent::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.OperationEvent.description)
}
inline void OperationEvent::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.OperationEvent.description)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v1
}  // namespace genomics
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fgenomics_2fv1_2foperations_2eproto__INCLUDED
