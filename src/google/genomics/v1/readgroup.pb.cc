// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/readgroup.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "google/genomics/v1/readgroup.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace genomics {
namespace v1 {
class ReadGroup_ExperimentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReadGroup_Experiment> {
} _ReadGroup_Experiment_default_instance_;
class ReadGroup_ProgramDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReadGroup_Program> {
} _ReadGroup_Program_default_instance_;
class ReadGroup_InfoEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReadGroup::ReadGroup_InfoEntry> {
} _ReadGroup_InfoEntry_default_instance_;
class ReadGroupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReadGroup> {
} _ReadGroup_default_instance_;

namespace protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup_Experiment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup_Experiment, library_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup_Experiment, platform_unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup_Experiment, sequencing_center_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup_Experiment, instrument_model_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup_Program, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup_Program, command_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup_Program, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup_Program, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup_Program, prev_program_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup_Program, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup, dataset_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup, sample_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup, experiment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup, predicted_insert_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup, programs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup, reference_set_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadGroup, info_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ReadGroup_Experiment)},
  { 9, -1, sizeof(ReadGroup_Program)},
  { 19, -1, sizeof(ReadGroup)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReadGroup_Experiment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReadGroup_Program_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReadGroup_InfoEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReadGroup_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/genomics/v1/readgroup.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[2].reflection = ReadGroup::ReadGroup_InfoEntry::CreateReflection(file_level_metadata[2].descriptor, _ReadGroup_InfoEntry_default_instance_.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _ReadGroup_Experiment_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ReadGroup_Program_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ReadGroup_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaults();
  _ReadGroup_Experiment_default_instance_.DefaultConstruct();
  _ReadGroup_Program_default_instance_.DefaultConstruct();
  _ReadGroup_InfoEntry_default_instance_.DefaultConstruct();
  _ReadGroup_default_instance_.DefaultConstruct();
  _ReadGroup_InfoEntry_default_instance_.get_mutable()->set_default_instance(_ReadGroup_InfoEntry_default_instance_.get_mutable());
  _ReadGroup_InfoEntry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _ReadGroup_default_instance_.get_mutable()->experiment_ = const_cast< ::google::genomics::v1::ReadGroup_Experiment*>(
      ::google::genomics::v1::ReadGroup_Experiment::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\"google/genomics/v1/readgroup.proto\022\022go"
      "ogle.genomics.v1\032\034google/api/annotations"
      ".proto\032\034google/protobuf/struct.proto\"\344\004\n"
      "\tReadGroup\022\n\n\002id\030\001 \001(\t\022\022\n\ndataset_id\030\002 \001"
      "(\t\022\014\n\004name\030\003 \001(\t\022\023\n\013description\030\004 \001(\t\022\021\n"
      "\tsample_id\030\005 \001(\t\022<\n\nexperiment\030\006 \001(\0132(.g"
      "oogle.genomics.v1.ReadGroup.Experiment\022\035"
      "\n\025predicted_insert_size\030\007 \001(\005\0227\n\010program"
      "s\030\n \003(\0132%.google.genomics.v1.ReadGroup.P"
      "rogram\022\030\n\020reference_set_id\030\013 \001(\t\0225\n\004info"
      "\030\014 \003(\0132\'.google.genomics.v1.ReadGroup.In"
      "foEntry\032l\n\nExperiment\022\022\n\nlibrary_id\030\001 \001("
      "\t\022\025\n\rplatform_unit\030\002 \001(\t\022\031\n\021sequencing_c"
      "enter\030\003 \001(\t\022\030\n\020instrument_model\030\004 \001(\t\032c\n"
      "\007Program\022\024\n\014command_line\030\001 \001(\t\022\n\n\002id\030\002 \001"
      "(\t\022\014\n\004name\030\003 \001(\t\022\027\n\017prev_program_id\030\004 \001("
      "\t\022\017\n\007version\030\005 \001(\t\032G\n\tInfoEntry\022\013\n\003key\030\001"
      " \001(\t\022)\n\005value\030\002 \001(\0132\032.google.protobuf.Li"
      "stValue:\0028\001Bi\n\026com.google.genomics.v1B\016R"
      "eadGroupProtoP\001Z:google.golang.org/genpr"
      "oto/googleapis/genomics/v1;genomics\370\001\001b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 846);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/genomics/v1/readgroup.proto", &protobuf_RegisterTypes);
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadGroup_Experiment::kLibraryIdFieldNumber;
const int ReadGroup_Experiment::kPlatformUnitFieldNumber;
const int ReadGroup_Experiment::kSequencingCenterFieldNumber;
const int ReadGroup_Experiment::kInstrumentModelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadGroup_Experiment::ReadGroup_Experiment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1.ReadGroup.Experiment)
}
ReadGroup_Experiment::ReadGroup_Experiment(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1.ReadGroup.Experiment)
}
ReadGroup_Experiment::ReadGroup_Experiment(const ReadGroup_Experiment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  library_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.library_id().size() > 0) {
    library_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.library_id(),
      GetArenaNoVirtual());
  }
  platform_unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platform_unit().size() > 0) {
    platform_unit_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_unit(),
      GetArenaNoVirtual());
  }
  sequencing_center_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sequencing_center().size() > 0) {
    sequencing_center_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequencing_center(),
      GetArenaNoVirtual());
  }
  instrument_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instrument_model().size() > 0) {
    instrument_model_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instrument_model(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1.ReadGroup.Experiment)
}

void ReadGroup_Experiment::SharedCtor() {
  library_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sequencing_center_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instrument_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReadGroup_Experiment::~ReadGroup_Experiment() {
  // @@protoc_insertion_point(destructor:google.genomics.v1.ReadGroup.Experiment)
  SharedDtor();
}

void ReadGroup_Experiment::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  library_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  platform_unit_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  sequencing_center_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  instrument_model_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ReadGroup_Experiment::ArenaDtor(void* object) {
  ReadGroup_Experiment* _this = reinterpret_cast< ReadGroup_Experiment* >(object);
  (void)_this;
}
void ReadGroup_Experiment::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReadGroup_Experiment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadGroup_Experiment::descriptor() {
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadGroup_Experiment& ReadGroup_Experiment::default_instance() {
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReadGroup_Experiment* ReadGroup_Experiment::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ReadGroup_Experiment>(arena);
}

void ReadGroup_Experiment::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1.ReadGroup.Experiment)
  library_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  platform_unit_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  sequencing_center_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  instrument_model_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool ReadGroup_Experiment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1.ReadGroup.Experiment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string library_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_library_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->library_id().data(), this->library_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Experiment.library_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string platform_unit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platform_unit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platform_unit().data(), this->platform_unit().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Experiment.platform_unit"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sequencing_center = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequencing_center()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sequencing_center().data(), this->sequencing_center().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Experiment.sequencing_center"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instrument_model = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instrument_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instrument_model().data(), this->instrument_model().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Experiment.instrument_model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1.ReadGroup.Experiment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1.ReadGroup.Experiment)
  return false;
#undef DO_
}

void ReadGroup_Experiment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1.ReadGroup.Experiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string library_id = 1;
  if (this->library_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->library_id().data(), this->library_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.library_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->library_id(), output);
  }

  // string platform_unit = 2;
  if (this->platform_unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform_unit().data(), this->platform_unit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.platform_unit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->platform_unit(), output);
  }

  // string sequencing_center = 3;
  if (this->sequencing_center().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequencing_center().data(), this->sequencing_center().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.sequencing_center");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sequencing_center(), output);
  }

  // string instrument_model = 4;
  if (this->instrument_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_model().data(), this->instrument_model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.instrument_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->instrument_model(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.genomics.v1.ReadGroup.Experiment)
}

::google::protobuf::uint8* ReadGroup_Experiment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1.ReadGroup.Experiment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string library_id = 1;
  if (this->library_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->library_id().data(), this->library_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.library_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->library_id(), target);
  }

  // string platform_unit = 2;
  if (this->platform_unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platform_unit().data(), this->platform_unit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.platform_unit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->platform_unit(), target);
  }

  // string sequencing_center = 3;
  if (this->sequencing_center().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sequencing_center().data(), this->sequencing_center().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.sequencing_center");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sequencing_center(), target);
  }

  // string instrument_model = 4;
  if (this->instrument_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instrument_model().data(), this->instrument_model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Experiment.instrument_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->instrument_model(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1.ReadGroup.Experiment)
  return target;
}

size_t ReadGroup_Experiment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1.ReadGroup.Experiment)
  size_t total_size = 0;

  // string library_id = 1;
  if (this->library_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->library_id());
  }

  // string platform_unit = 2;
  if (this->platform_unit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platform_unit());
  }

  // string sequencing_center = 3;
  if (this->sequencing_center().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sequencing_center());
  }

  // string instrument_model = 4;
  if (this->instrument_model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instrument_model());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadGroup_Experiment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1.ReadGroup.Experiment)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadGroup_Experiment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadGroup_Experiment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1.ReadGroup.Experiment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1.ReadGroup.Experiment)
    MergeFrom(*source);
  }
}

void ReadGroup_Experiment::MergeFrom(const ReadGroup_Experiment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1.ReadGroup.Experiment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.library_id().size() > 0) {
    set_library_id(from.library_id());
  }
  if (from.platform_unit().size() > 0) {
    set_platform_unit(from.platform_unit());
  }
  if (from.sequencing_center().size() > 0) {
    set_sequencing_center(from.sequencing_center());
  }
  if (from.instrument_model().size() > 0) {
    set_instrument_model(from.instrument_model());
  }
}

void ReadGroup_Experiment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1.ReadGroup.Experiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadGroup_Experiment::CopyFrom(const ReadGroup_Experiment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1.ReadGroup.Experiment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadGroup_Experiment::IsInitialized() const {
  return true;
}

void ReadGroup_Experiment::Swap(ReadGroup_Experiment* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReadGroup_Experiment* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReadGroup_Experiment::UnsafeArenaSwap(ReadGroup_Experiment* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReadGroup_Experiment::InternalSwap(ReadGroup_Experiment* other) {
  library_id_.Swap(&other->library_id_);
  platform_unit_.Swap(&other->platform_unit_);
  sequencing_center_.Swap(&other->sequencing_center_);
  instrument_model_.Swap(&other->instrument_model_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadGroup_Experiment::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadGroup_Experiment

// string library_id = 1;
void ReadGroup_Experiment::clear_library_id() {
  library_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReadGroup_Experiment::library_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Experiment.library_id)
  return library_id_.Get();
}
void ReadGroup_Experiment::set_library_id(const ::std::string& value) {
  
  library_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Experiment.library_id)
}
void ReadGroup_Experiment::set_library_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  library_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Experiment.library_id)
}
void ReadGroup_Experiment::set_library_id(const char* value,
    size_t size) {
  
  library_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Experiment.library_id)
}
::std::string* ReadGroup_Experiment::mutable_library_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Experiment.library_id)
  return library_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Experiment::release_library_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Experiment.library_id)
  
  return library_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Experiment::unsafe_arena_release_library_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Experiment.library_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return library_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReadGroup_Experiment::set_allocated_library_id(::std::string* library_id) {
  if (library_id != NULL) {
    
  } else {
    
  }
  library_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), library_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Experiment.library_id)
}
void ReadGroup_Experiment::unsafe_arena_set_allocated_library_id(
    ::std::string* library_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (library_id != NULL) {
    
  } else {
    
  }
  library_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      library_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Experiment.library_id)
}

// string platform_unit = 2;
void ReadGroup_Experiment::clear_platform_unit() {
  platform_unit_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReadGroup_Experiment::platform_unit() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Experiment.platform_unit)
  return platform_unit_.Get();
}
void ReadGroup_Experiment::set_platform_unit(const ::std::string& value) {
  
  platform_unit_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Experiment.platform_unit)
}
void ReadGroup_Experiment::set_platform_unit(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platform_unit_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Experiment.platform_unit)
}
void ReadGroup_Experiment::set_platform_unit(const char* value,
    size_t size) {
  
  platform_unit_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Experiment.platform_unit)
}
::std::string* ReadGroup_Experiment::mutable_platform_unit() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Experiment.platform_unit)
  return platform_unit_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Experiment::release_platform_unit() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Experiment.platform_unit)
  
  return platform_unit_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Experiment::unsafe_arena_release_platform_unit() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Experiment.platform_unit)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return platform_unit_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReadGroup_Experiment::set_allocated_platform_unit(::std::string* platform_unit) {
  if (platform_unit != NULL) {
    
  } else {
    
  }
  platform_unit_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform_unit,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Experiment.platform_unit)
}
void ReadGroup_Experiment::unsafe_arena_set_allocated_platform_unit(
    ::std::string* platform_unit) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (platform_unit != NULL) {
    
  } else {
    
  }
  platform_unit_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      platform_unit, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Experiment.platform_unit)
}

// string sequencing_center = 3;
void ReadGroup_Experiment::clear_sequencing_center() {
  sequencing_center_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReadGroup_Experiment::sequencing_center() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
  return sequencing_center_.Get();
}
void ReadGroup_Experiment::set_sequencing_center(const ::std::string& value) {
  
  sequencing_center_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
}
void ReadGroup_Experiment::set_sequencing_center(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sequencing_center_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
}
void ReadGroup_Experiment::set_sequencing_center(const char* value,
    size_t size) {
  
  sequencing_center_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
}
::std::string* ReadGroup_Experiment::mutable_sequencing_center() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
  return sequencing_center_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Experiment::release_sequencing_center() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
  
  return sequencing_center_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Experiment::unsafe_arena_release_sequencing_center() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return sequencing_center_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReadGroup_Experiment::set_allocated_sequencing_center(::std::string* sequencing_center) {
  if (sequencing_center != NULL) {
    
  } else {
    
  }
  sequencing_center_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sequencing_center,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
}
void ReadGroup_Experiment::unsafe_arena_set_allocated_sequencing_center(
    ::std::string* sequencing_center) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (sequencing_center != NULL) {
    
  } else {
    
  }
  sequencing_center_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      sequencing_center, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Experiment.sequencing_center)
}

// string instrument_model = 4;
void ReadGroup_Experiment::clear_instrument_model() {
  instrument_model_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReadGroup_Experiment::instrument_model() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Experiment.instrument_model)
  return instrument_model_.Get();
}
void ReadGroup_Experiment::set_instrument_model(const ::std::string& value) {
  
  instrument_model_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Experiment.instrument_model)
}
void ReadGroup_Experiment::set_instrument_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instrument_model_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Experiment.instrument_model)
}
void ReadGroup_Experiment::set_instrument_model(const char* value,
    size_t size) {
  
  instrument_model_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Experiment.instrument_model)
}
::std::string* ReadGroup_Experiment::mutable_instrument_model() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Experiment.instrument_model)
  return instrument_model_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Experiment::release_instrument_model() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Experiment.instrument_model)
  
  return instrument_model_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Experiment::unsafe_arena_release_instrument_model() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Experiment.instrument_model)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return instrument_model_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReadGroup_Experiment::set_allocated_instrument_model(::std::string* instrument_model) {
  if (instrument_model != NULL) {
    
  } else {
    
  }
  instrument_model_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instrument_model,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Experiment.instrument_model)
}
void ReadGroup_Experiment::unsafe_arena_set_allocated_instrument_model(
    ::std::string* instrument_model) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (instrument_model != NULL) {
    
  } else {
    
  }
  instrument_model_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      instrument_model, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Experiment.instrument_model)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadGroup_Program::kCommandLineFieldNumber;
const int ReadGroup_Program::kIdFieldNumber;
const int ReadGroup_Program::kNameFieldNumber;
const int ReadGroup_Program::kPrevProgramIdFieldNumber;
const int ReadGroup_Program::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadGroup_Program::ReadGroup_Program()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1.ReadGroup.Program)
}
ReadGroup_Program::ReadGroup_Program(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1.ReadGroup.Program)
}
ReadGroup_Program::ReadGroup_Program(const ReadGroup_Program& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  command_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.command_line().size() > 0) {
    command_line_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_line(),
      GetArenaNoVirtual());
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id(),
      GetArenaNoVirtual());
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  prev_program_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prev_program_id().size() > 0) {
    prev_program_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_program_id(),
      GetArenaNoVirtual());
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1.ReadGroup.Program)
}

void ReadGroup_Program::SharedCtor() {
  command_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_program_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReadGroup_Program::~ReadGroup_Program() {
  // @@protoc_insertion_point(destructor:google.genomics.v1.ReadGroup.Program)
  SharedDtor();
}

void ReadGroup_Program::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  command_line_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  prev_program_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  version_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
}

void ReadGroup_Program::ArenaDtor(void* object) {
  ReadGroup_Program* _this = reinterpret_cast< ReadGroup_Program* >(object);
  (void)_this;
}
void ReadGroup_Program::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReadGroup_Program::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadGroup_Program::descriptor() {
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadGroup_Program& ReadGroup_Program::default_instance() {
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReadGroup_Program* ReadGroup_Program::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ReadGroup_Program>(arena);
}

void ReadGroup_Program::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1.ReadGroup.Program)
  command_line_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  prev_program_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}

bool ReadGroup_Program::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1.ReadGroup.Program)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string command_line = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command_line()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->command_line().data(), this->command_line().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Program.command_line"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Program.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Program.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string prev_program_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prev_program_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prev_program_id().data(), this->prev_program_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Program.prev_program_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.Program.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1.ReadGroup.Program)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1.ReadGroup.Program)
  return false;
#undef DO_
}

void ReadGroup_Program::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1.ReadGroup.Program)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command_line = 1;
  if (this->command_line().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command_line().data(), this->command_line().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.command_line");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->command_line(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // string prev_program_id = 4;
  if (this->prev_program_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prev_program_id().data(), this->prev_program_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.prev_program_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->prev_program_id(), output);
  }

  // string version = 5;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->version(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.genomics.v1.ReadGroup.Program)
}

::google::protobuf::uint8* ReadGroup_Program::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1.ReadGroup.Program)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command_line = 1;
  if (this->command_line().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command_line().data(), this->command_line().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.command_line");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->command_line(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // string prev_program_id = 4;
  if (this->prev_program_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prev_program_id().data(), this->prev_program_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.prev_program_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->prev_program_id(), target);
  }

  // string version = 5;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.Program.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1.ReadGroup.Program)
  return target;
}

size_t ReadGroup_Program::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1.ReadGroup.Program)
  size_t total_size = 0;

  // string command_line = 1;
  if (this->command_line().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command_line());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string prev_program_id = 4;
  if (this->prev_program_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->prev_program_id());
  }

  // string version = 5;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadGroup_Program::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1.ReadGroup.Program)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadGroup_Program* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadGroup_Program>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1.ReadGroup.Program)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1.ReadGroup.Program)
    MergeFrom(*source);
  }
}

void ReadGroup_Program::MergeFrom(const ReadGroup_Program& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1.ReadGroup.Program)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command_line().size() > 0) {
    set_command_line(from.command_line());
  }
  if (from.id().size() > 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.prev_program_id().size() > 0) {
    set_prev_program_id(from.prev_program_id());
  }
  if (from.version().size() > 0) {
    set_version(from.version());
  }
}

void ReadGroup_Program::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1.ReadGroup.Program)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadGroup_Program::CopyFrom(const ReadGroup_Program& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1.ReadGroup.Program)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadGroup_Program::IsInitialized() const {
  return true;
}

void ReadGroup_Program::Swap(ReadGroup_Program* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReadGroup_Program* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReadGroup_Program::UnsafeArenaSwap(ReadGroup_Program* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReadGroup_Program::InternalSwap(ReadGroup_Program* other) {
  command_line_.Swap(&other->command_line_);
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  prev_program_id_.Swap(&other->prev_program_id_);
  version_.Swap(&other->version_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadGroup_Program::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadGroup_Program

// string command_line = 1;
void ReadGroup_Program::clear_command_line() {
  command_line_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReadGroup_Program::command_line() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Program.command_line)
  return command_line_.Get();
}
void ReadGroup_Program::set_command_line(const ::std::string& value) {
  
  command_line_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Program.command_line)
}
void ReadGroup_Program::set_command_line(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  command_line_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Program.command_line)
}
void ReadGroup_Program::set_command_line(const char* value,
    size_t size) {
  
  command_line_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Program.command_line)
}
::std::string* ReadGroup_Program::mutable_command_line() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Program.command_line)
  return command_line_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Program::release_command_line() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Program.command_line)
  
  return command_line_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Program::unsafe_arena_release_command_line() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Program.command_line)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return command_line_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReadGroup_Program::set_allocated_command_line(::std::string* command_line) {
  if (command_line != NULL) {
    
  } else {
    
  }
  command_line_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command_line,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Program.command_line)
}
void ReadGroup_Program::unsafe_arena_set_allocated_command_line(
    ::std::string* command_line) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (command_line != NULL) {
    
  } else {
    
  }
  command_line_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      command_line, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Program.command_line)
}

// string id = 2;
void ReadGroup_Program::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReadGroup_Program::id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Program.id)
  return id_.Get();
}
void ReadGroup_Program::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Program.id)
}
void ReadGroup_Program::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Program.id)
}
void ReadGroup_Program::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Program.id)
}
::std::string* ReadGroup_Program::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Program.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Program::release_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Program.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Program::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Program.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReadGroup_Program::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Program.id)
}
void ReadGroup_Program::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Program.id)
}

// string name = 3;
void ReadGroup_Program::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReadGroup_Program::name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Program.name)
  return name_.Get();
}
void ReadGroup_Program::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Program.name)
}
void ReadGroup_Program::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Program.name)
}
void ReadGroup_Program::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Program.name)
}
::std::string* ReadGroup_Program::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Program.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Program::release_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Program.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Program::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Program.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReadGroup_Program::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Program.name)
}
void ReadGroup_Program::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Program.name)
}

// string prev_program_id = 4;
void ReadGroup_Program::clear_prev_program_id() {
  prev_program_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReadGroup_Program::prev_program_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Program.prev_program_id)
  return prev_program_id_.Get();
}
void ReadGroup_Program::set_prev_program_id(const ::std::string& value) {
  
  prev_program_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Program.prev_program_id)
}
void ReadGroup_Program::set_prev_program_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  prev_program_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Program.prev_program_id)
}
void ReadGroup_Program::set_prev_program_id(const char* value,
    size_t size) {
  
  prev_program_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Program.prev_program_id)
}
::std::string* ReadGroup_Program::mutable_prev_program_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Program.prev_program_id)
  return prev_program_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Program::release_prev_program_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Program.prev_program_id)
  
  return prev_program_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Program::unsafe_arena_release_prev_program_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Program.prev_program_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return prev_program_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReadGroup_Program::set_allocated_prev_program_id(::std::string* prev_program_id) {
  if (prev_program_id != NULL) {
    
  } else {
    
  }
  prev_program_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prev_program_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Program.prev_program_id)
}
void ReadGroup_Program::unsafe_arena_set_allocated_prev_program_id(
    ::std::string* prev_program_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (prev_program_id != NULL) {
    
  } else {
    
  }
  prev_program_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      prev_program_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Program.prev_program_id)
}

// string version = 5;
void ReadGroup_Program::clear_version() {
  version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReadGroup_Program::version() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.Program.version)
  return version_.Get();
}
void ReadGroup_Program::set_version(const ::std::string& value) {
  
  version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.Program.version)
}
void ReadGroup_Program::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.Program.version)
}
void ReadGroup_Program::set_version(const char* value,
    size_t size) {
  
  version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.Program.version)
}
::std::string* ReadGroup_Program::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.Program.version)
  return version_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Program::release_version() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.Program.version)
  
  return version_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup_Program::unsafe_arena_release_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.Program.version)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return version_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReadGroup_Program::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.Program.version)
}
void ReadGroup_Program::unsafe_arena_set_allocated_version(
    ::std::string* version) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (version != NULL) {
    
  } else {
    
  }
  version_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      version, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.Program.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ReadGroup::ReadGroup_InfoEntry::ReadGroup_InfoEntry() {}
ReadGroup::ReadGroup_InfoEntry::ReadGroup_InfoEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ReadGroup::ReadGroup_InfoEntry::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::file_level_metadata[2];
}
void ReadGroup::ReadGroup_InfoEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ReadGroup::ReadGroup_InfoEntry::MergeFrom(const ReadGroup_InfoEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

void ReadGroup::_slow_mutable_experiment() {
  experiment_ = ::google::protobuf::Arena::CreateMessage< ::google::genomics::v1::ReadGroup_Experiment >(
      GetArenaNoVirtual());
}
::google::genomics::v1::ReadGroup_Experiment* ReadGroup::_slow_release_experiment() {
  if (experiment_ == NULL) {
    return NULL;
  } else {
    ::google::genomics::v1::ReadGroup_Experiment* temp = new ::google::genomics::v1::ReadGroup_Experiment(*experiment_);
    experiment_ = NULL;
    return temp;
  }
}
::google::genomics::v1::ReadGroup_Experiment* ReadGroup::unsafe_arena_release_experiment() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.experiment)
  
  ::google::genomics::v1::ReadGroup_Experiment* temp = experiment_;
  experiment_ = NULL;
  return temp;
}
void ReadGroup::_slow_set_allocated_experiment(
    ::google::protobuf::Arena* message_arena, ::google::genomics::v1::ReadGroup_Experiment** experiment) {
    if (message_arena != NULL && 
        ::google::protobuf::Arena::GetArena(*experiment) == NULL) {
      message_arena->Own(*experiment);
    } else if (message_arena !=
               ::google::protobuf::Arena::GetArena(*experiment)) {
      ::google::genomics::v1::ReadGroup_Experiment* new_experiment = 
            ::google::protobuf::Arena::CreateMessage< ::google::genomics::v1::ReadGroup_Experiment >(
            message_arena);
      new_experiment->CopyFrom(**experiment);
      *experiment = new_experiment;
    }
}
void ReadGroup::unsafe_arena_set_allocated_experiment(
    ::google::genomics::v1::ReadGroup_Experiment* experiment) {
  if (GetArenaNoVirtual() == NULL) {
    delete experiment_;
  }
  experiment_ = experiment;
  if (experiment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.experiment)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadGroup::kIdFieldNumber;
const int ReadGroup::kDatasetIdFieldNumber;
const int ReadGroup::kNameFieldNumber;
const int ReadGroup::kDescriptionFieldNumber;
const int ReadGroup::kSampleIdFieldNumber;
const int ReadGroup::kExperimentFieldNumber;
const int ReadGroup::kPredictedInsertSizeFieldNumber;
const int ReadGroup::kProgramsFieldNumber;
const int ReadGroup::kReferenceSetIdFieldNumber;
const int ReadGroup::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadGroup::ReadGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.genomics.v1.ReadGroup)
}
ReadGroup::ReadGroup(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  programs_(arena),
  info_(arena) {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaults();
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.genomics.v1.ReadGroup)
}
ReadGroup::ReadGroup(const ReadGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      programs_(from.programs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id(),
      GetArenaNoVirtual());
  }
  dataset_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dataset_id().size() > 0) {
    dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dataset_id(),
      GetArenaNoVirtual());
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  sample_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sample_id().size() > 0) {
    sample_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sample_id(),
      GetArenaNoVirtual());
  }
  reference_set_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reference_set_id().size() > 0) {
    reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reference_set_id(),
      GetArenaNoVirtual());
  }
  if (from.has_experiment()) {
    experiment_ = new ::google::genomics::v1::ReadGroup_Experiment(*from.experiment_);
  } else {
    experiment_ = NULL;
  }
  predicted_insert_size_ = from.predicted_insert_size_;
  // @@protoc_insertion_point(copy_constructor:google.genomics.v1.ReadGroup)
}

void ReadGroup::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dataset_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sample_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reference_set_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&experiment_, 0, reinterpret_cast<char*>(&predicted_insert_size_) -
    reinterpret_cast<char*>(&experiment_) + sizeof(predicted_insert_size_));
  _cached_size_ = 0;
}

ReadGroup::~ReadGroup() {
  // @@protoc_insertion_point(destructor:google.genomics.v1.ReadGroup)
  SharedDtor();
}

void ReadGroup::SharedDtor() {
  ::google::protobuf::Arena* arena = GetArenaNoVirtual();
  if (arena != NULL) {
    return;
  }

  id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  dataset_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  name_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  description_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  sample_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  reference_set_id_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arena);
  if (this != internal_default_instance()) {
    delete experiment_;
  }
}

void ReadGroup::ArenaDtor(void* object) {
  ReadGroup* _this = reinterpret_cast< ReadGroup* >(object);
  (void)_this;
}
void ReadGroup::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReadGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadGroup::descriptor() {
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadGroup& ReadGroup::default_instance() {
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReadGroup* ReadGroup::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ReadGroup>(arena);
}

void ReadGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:google.genomics.v1.ReadGroup)
  programs_.Clear();
  info_.Clear();
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  dataset_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  sample_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  reference_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && experiment_ != NULL) {
    delete experiment_;
  }
  experiment_ = NULL;
  predicted_insert_size_ = 0;
}

bool ReadGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.genomics.v1.ReadGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dataset_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dataset_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dataset_id().data(), this->dataset_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.dataset_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sample_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sample_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sample_id().data(), this->sample_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.sample_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.genomics.v1.ReadGroup.Experiment experiment = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_experiment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 predicted_insert_size = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &predicted_insert_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.genomics.v1.ReadGroup.Program programs = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_programs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reference_set_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reference_set_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reference_set_id().data(), this->reference_set_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.reference_set_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.protobuf.ListValue> info = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          ReadGroup_InfoEntry::Parser< ::google::protobuf::internal::MapField<
              ReadGroup_InfoEntry,
              ::std::string, ::google::protobuf::ListValue,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.genomics.v1.ReadGroup.InfoEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.genomics.v1.ReadGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.genomics.v1.ReadGroup)
  return false;
#undef DO_
}

void ReadGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.genomics.v1.ReadGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string dataset_id = 2;
  if (this->dataset_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dataset_id().data(), this->dataset_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.dataset_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dataset_id(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // string sample_id = 5;
  if (this->sample_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sample_id().data(), this->sample_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.sample_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sample_id(), output);
  }

  // .google.genomics.v1.ReadGroup.Experiment experiment = 6;
  if (this->has_experiment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->experiment_, output);
  }

  // int32 predicted_insert_size = 7;
  if (this->predicted_insert_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->predicted_insert_size(), output);
  }

  // repeated .google.genomics.v1.ReadGroup.Program programs = 10;
  for (unsigned int i = 0, n = this->programs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->programs(i), output);
  }

  // string reference_set_id = 11;
  if (this->reference_set_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reference_set_id().data(), this->reference_set_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.reference_set_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->reference_set_id(), output);
  }

  // map<string, .google.protobuf.ListValue> info = 12;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1.ReadGroup.InfoEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<ReadGroup_InfoEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ReadGroup_InfoEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:google.genomics.v1.ReadGroup)
}

::google::protobuf::uint8* ReadGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.genomics.v1.ReadGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string dataset_id = 2;
  if (this->dataset_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dataset_id().data(), this->dataset_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.dataset_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dataset_id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // string sample_id = 5;
  if (this->sample_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sample_id().data(), this->sample_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.sample_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sample_id(), target);
  }

  // .google.genomics.v1.ReadGroup.Experiment experiment = 6;
  if (this->has_experiment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->experiment_, deterministic, target);
  }

  // int32 predicted_insert_size = 7;
  if (this->predicted_insert_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->predicted_insert_size(), target);
  }

  // repeated .google.genomics.v1.ReadGroup.Program programs = 10;
  for (unsigned int i = 0, n = this->programs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->programs(i), deterministic, target);
  }

  // string reference_set_id = 11;
  if (this->reference_set_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reference_set_id().data(), this->reference_set_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.genomics.v1.ReadGroup.reference_set_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->reference_set_id(), target);
  }

  // map<string, .google.protobuf.ListValue> info = 12;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.genomics.v1.ReadGroup.InfoEntry.key");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<ReadGroup_InfoEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ReadGroup_InfoEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.genomics.v1.ReadGroup)
  return target;
}

size_t ReadGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.genomics.v1.ReadGroup)
  size_t total_size = 0;

  // repeated .google.genomics.v1.ReadGroup.Program programs = 10;
  {
    unsigned int count = this->programs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->programs(i));
    }
  }

  // map<string, .google.protobuf.ListValue> info = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<ReadGroup_InfoEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string dataset_id = 2;
  if (this->dataset_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dataset_id());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 4;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string sample_id = 5;
  if (this->sample_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sample_id());
  }

  // string reference_set_id = 11;
  if (this->reference_set_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reference_set_id());
  }

  // .google.genomics.v1.ReadGroup.Experiment experiment = 6;
  if (this->has_experiment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->experiment_);
  }

  // int32 predicted_insert_size = 7;
  if (this->predicted_insert_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->predicted_insert_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.genomics.v1.ReadGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.genomics.v1.ReadGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.genomics.v1.ReadGroup)
    MergeFrom(*source);
  }
}

void ReadGroup::MergeFrom(const ReadGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.genomics.v1.ReadGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  programs_.MergeFrom(from.programs_);
  info_.MergeFrom(from.info_);
  if (from.id().size() > 0) {
    set_id(from.id());
  }
  if (from.dataset_id().size() > 0) {
    set_dataset_id(from.dataset_id());
  }
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.sample_id().size() > 0) {
    set_sample_id(from.sample_id());
  }
  if (from.reference_set_id().size() > 0) {
    set_reference_set_id(from.reference_set_id());
  }
  if (from.has_experiment()) {
    mutable_experiment()->::google::genomics::v1::ReadGroup_Experiment::MergeFrom(from.experiment());
  }
  if (from.predicted_insert_size() != 0) {
    set_predicted_insert_size(from.predicted_insert_size());
  }
}

void ReadGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.genomics.v1.ReadGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadGroup::CopyFrom(const ReadGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.genomics.v1.ReadGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadGroup::IsInitialized() const {
  return true;
}

void ReadGroup::Swap(ReadGroup* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReadGroup* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReadGroup::UnsafeArenaSwap(ReadGroup* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReadGroup::InternalSwap(ReadGroup* other) {
  programs_.InternalSwap(&other->programs_);
  info_.Swap(&other->info_);
  id_.Swap(&other->id_);
  dataset_id_.Swap(&other->dataset_id_);
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  sample_id_.Swap(&other->sample_id_);
  reference_set_id_.Swap(&other->reference_set_id_);
  std::swap(experiment_, other->experiment_);
  std::swap(predicted_insert_size_, other->predicted_insert_size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadGroup::GetMetadata() const {
  protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fgenomics_2fv1_2freadgroup_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadGroup

// string id = 1;
void ReadGroup::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReadGroup::id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.id)
  return id_.Get();
}
void ReadGroup::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.id)
}
void ReadGroup::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.id)
}
void ReadGroup::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.id)
}
::std::string* ReadGroup::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup::release_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReadGroup::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.id)
}
void ReadGroup::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.id)
}

// string dataset_id = 2;
void ReadGroup::clear_dataset_id() {
  dataset_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReadGroup::dataset_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.dataset_id)
  return dataset_id_.Get();
}
void ReadGroup::set_dataset_id(const ::std::string& value) {
  
  dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.dataset_id)
}
void ReadGroup::set_dataset_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.dataset_id)
}
void ReadGroup::set_dataset_id(const char* value,
    size_t size) {
  
  dataset_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.dataset_id)
}
::std::string* ReadGroup::mutable_dataset_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.dataset_id)
  return dataset_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup::release_dataset_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.dataset_id)
  
  return dataset_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup::unsafe_arena_release_dataset_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.dataset_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return dataset_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReadGroup::set_allocated_dataset_id(::std::string* dataset_id) {
  if (dataset_id != NULL) {
    
  } else {
    
  }
  dataset_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataset_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.dataset_id)
}
void ReadGroup::unsafe_arena_set_allocated_dataset_id(
    ::std::string* dataset_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (dataset_id != NULL) {
    
  } else {
    
  }
  dataset_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      dataset_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.dataset_id)
}

// string name = 3;
void ReadGroup::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReadGroup::name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.name)
  return name_.Get();
}
void ReadGroup::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.name)
}
void ReadGroup::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.name)
}
void ReadGroup::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.name)
}
::std::string* ReadGroup::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup::release_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReadGroup::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.name)
}
void ReadGroup::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.name)
}

// string description = 4;
void ReadGroup::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReadGroup::description() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.description)
  return description_.Get();
}
void ReadGroup::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.description)
}
void ReadGroup::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.description)
}
void ReadGroup::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.description)
}
::std::string* ReadGroup::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup::release_description() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReadGroup::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.description)
}
void ReadGroup::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.description)
}

// string sample_id = 5;
void ReadGroup::clear_sample_id() {
  sample_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReadGroup::sample_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.sample_id)
  return sample_id_.Get();
}
void ReadGroup::set_sample_id(const ::std::string& value) {
  
  sample_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.sample_id)
}
void ReadGroup::set_sample_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sample_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.sample_id)
}
void ReadGroup::set_sample_id(const char* value,
    size_t size) {
  
  sample_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.sample_id)
}
::std::string* ReadGroup::mutable_sample_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.sample_id)
  return sample_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup::release_sample_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.sample_id)
  
  return sample_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup::unsafe_arena_release_sample_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.sample_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return sample_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReadGroup::set_allocated_sample_id(::std::string* sample_id) {
  if (sample_id != NULL) {
    
  } else {
    
  }
  sample_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sample_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.sample_id)
}
void ReadGroup::unsafe_arena_set_allocated_sample_id(
    ::std::string* sample_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (sample_id != NULL) {
    
  } else {
    
  }
  sample_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      sample_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.sample_id)
}

// .google.genomics.v1.ReadGroup.Experiment experiment = 6;
bool ReadGroup::has_experiment() const {
  return this != internal_default_instance() && experiment_ != NULL;
}
void ReadGroup::clear_experiment() {
  if (GetArenaNoVirtual() == NULL && experiment_ != NULL) delete experiment_;
  experiment_ = NULL;
}
const ::google::genomics::v1::ReadGroup_Experiment& ReadGroup::experiment() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.experiment)
  return experiment_ != NULL ? *experiment_
                         : *::google::genomics::v1::ReadGroup_Experiment::internal_default_instance();
}
::google::genomics::v1::ReadGroup_Experiment* ReadGroup::mutable_experiment() {
  
  if (experiment_ == NULL) {
    _slow_mutable_experiment();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.experiment)
  return experiment_;
}
::google::genomics::v1::ReadGroup_Experiment* ReadGroup::release_experiment() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.experiment)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_experiment();
  } else {
    ::google::genomics::v1::ReadGroup_Experiment* temp = experiment_;
    experiment_ = NULL;
    return temp;
  }
}
 void ReadGroup::set_allocated_experiment(::google::genomics::v1::ReadGroup_Experiment* experiment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete experiment_;
  }
  if (experiment != NULL) {
    _slow_set_allocated_experiment(message_arena, &experiment);
  }
  experiment_ = experiment;
  if (experiment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.experiment)
}

// int32 predicted_insert_size = 7;
void ReadGroup::clear_predicted_insert_size() {
  predicted_insert_size_ = 0;
}
::google::protobuf::int32 ReadGroup::predicted_insert_size() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.predicted_insert_size)
  return predicted_insert_size_;
}
void ReadGroup::set_predicted_insert_size(::google::protobuf::int32 value) {
  
  predicted_insert_size_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.predicted_insert_size)
}

// repeated .google.genomics.v1.ReadGroup.Program programs = 10;
int ReadGroup::programs_size() const {
  return programs_.size();
}
void ReadGroup::clear_programs() {
  programs_.Clear();
}
const ::google::genomics::v1::ReadGroup_Program& ReadGroup::programs(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.programs)
  return programs_.Get(index);
}
::google::genomics::v1::ReadGroup_Program* ReadGroup::mutable_programs(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.programs)
  return programs_.Mutable(index);
}
::google::genomics::v1::ReadGroup_Program* ReadGroup::add_programs() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.ReadGroup.programs)
  return programs_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReadGroup_Program >*
ReadGroup::mutable_programs() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.ReadGroup.programs)
  return &programs_;
}
const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::ReadGroup_Program >&
ReadGroup::programs() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.ReadGroup.programs)
  return programs_;
}

// string reference_set_id = 11;
void ReadGroup::clear_reference_set_id() {
  reference_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
const ::std::string& ReadGroup::reference_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.ReadGroup.reference_set_id)
  return reference_set_id_.Get();
}
void ReadGroup::set_reference_set_id(const ::std::string& value) {
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.ReadGroup.reference_set_id)
}
void ReadGroup::set_reference_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.ReadGroup.reference_set_id)
}
void ReadGroup::set_reference_set_id(const char* value,
    size_t size) {
  
  reference_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.ReadGroup.reference_set_id)
}
::std::string* ReadGroup::mutable_reference_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.ReadGroup.reference_set_id)
  return reference_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup::release_reference_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.ReadGroup.reference_set_id)
  
  return reference_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
::std::string* ReadGroup::unsafe_arena_release_reference_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.ReadGroup.reference_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reference_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
void ReadGroup::set_allocated_reference_set_id(::std::string* reference_set_id) {
  if (reference_set_id != NULL) {
    
  } else {
    
  }
  reference_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reference_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.ReadGroup.reference_set_id)
}
void ReadGroup::unsafe_arena_set_allocated_reference_set_id(
    ::std::string* reference_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reference_set_id != NULL) {
    
  } else {
    
  }
  reference_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reference_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.ReadGroup.reference_set_id)
}

// map<string, .google.protobuf.ListValue> info = 12;
int ReadGroup::info_size() const {
  return info_.size();
}
void ReadGroup::clear_info() {
  info_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
ReadGroup::info() const {
  // @@protoc_insertion_point(field_map:google.genomics.v1.ReadGroup.info)
  return info_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
ReadGroup::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:google.genomics.v1.ReadGroup.info)
  return info_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace genomics
}  // namespace google

// @@protoc_insertion_point(global_scope)
