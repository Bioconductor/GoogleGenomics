// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/genomics/v1/reads.proto

#include "google/genomics/v1/reads.pb.h"
#include "google/genomics/v1/reads.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace google {
namespace genomics {
namespace v1 {

static const char* StreamingReadService_method_names[] = {
  "/google.genomics.v1.StreamingReadService/StreamReads",
};

std::unique_ptr< StreamingReadService::Stub> StreamingReadService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< StreamingReadService::Stub> stub(new StreamingReadService::Stub(channel));
  return stub;
}

StreamingReadService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_StreamReads_(StreamingReadService_method_names[0], ::grpc::RpcMethod::SERVER_STREAMING, channel)
  {}

::grpc::ClientReader< ::google::genomics::v1::StreamReadsResponse>* StreamingReadService::Stub::StreamReadsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::StreamReadsRequest& request) {
  return new ::grpc::ClientReader< ::google::genomics::v1::StreamReadsResponse>(channel_.get(), rpcmethod_StreamReads_, context, request);
}

::grpc::ClientAsyncReader< ::google::genomics::v1::StreamReadsResponse>* StreamingReadService::Stub::AsyncStreamReadsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::StreamReadsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::ClientAsyncReader< ::google::genomics::v1::StreamReadsResponse>::Create(channel_.get(), cq, rpcmethod_StreamReads_, context, request, tag);
}

StreamingReadService::Service::Service() {
  AddMethod(new ::grpc::RpcServiceMethod(
      StreamingReadService_method_names[0],
      ::grpc::RpcMethod::SERVER_STREAMING,
      new ::grpc::ServerStreamingHandler< StreamingReadService::Service, ::google::genomics::v1::StreamReadsRequest, ::google::genomics::v1::StreamReadsResponse>(
          std::mem_fn(&StreamingReadService::Service::StreamReads), this)));
}

StreamingReadService::Service::~Service() {
}

::grpc::Status StreamingReadService::Service::StreamReads(::grpc::ServerContext* context, const ::google::genomics::v1::StreamReadsRequest* request, ::grpc::ServerWriter< ::google::genomics::v1::StreamReadsResponse>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


static const char* ReadServiceV1_method_names[] = {
  "/google.genomics.v1.ReadServiceV1/ImportReadGroupSets",
  "/google.genomics.v1.ReadServiceV1/ExportReadGroupSet",
  "/google.genomics.v1.ReadServiceV1/SearchReadGroupSets",
  "/google.genomics.v1.ReadServiceV1/UpdateReadGroupSet",
  "/google.genomics.v1.ReadServiceV1/DeleteReadGroupSet",
  "/google.genomics.v1.ReadServiceV1/GetReadGroupSet",
  "/google.genomics.v1.ReadServiceV1/ListCoverageBuckets",
  "/google.genomics.v1.ReadServiceV1/SearchReads",
};

std::unique_ptr< ReadServiceV1::Stub> ReadServiceV1::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< ReadServiceV1::Stub> stub(new ReadServiceV1::Stub(channel));
  return stub;
}

ReadServiceV1::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_ImportReadGroupSets_(ReadServiceV1_method_names[0], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ExportReadGroupSet_(ReadServiceV1_method_names[1], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SearchReadGroupSets_(ReadServiceV1_method_names[2], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateReadGroupSet_(ReadServiceV1_method_names[3], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteReadGroupSet_(ReadServiceV1_method_names[4], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetReadGroupSet_(ReadServiceV1_method_names[5], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListCoverageBuckets_(ReadServiceV1_method_names[6], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SearchReads_(ReadServiceV1_method_names[7], ::grpc::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ReadServiceV1::Stub::ImportReadGroupSets(::grpc::ClientContext* context, const ::google::genomics::v1::ImportReadGroupSetsRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_ImportReadGroupSets_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* ReadServiceV1::Stub::AsyncImportReadGroupSetsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::ImportReadGroupSetsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_ImportReadGroupSets_, context, request);
}

::grpc::Status ReadServiceV1::Stub::ExportReadGroupSet(::grpc::ClientContext* context, const ::google::genomics::v1::ExportReadGroupSetRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_ExportReadGroupSet_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* ReadServiceV1::Stub::AsyncExportReadGroupSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::ExportReadGroupSetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_ExportReadGroupSet_, context, request);
}

::grpc::Status ReadServiceV1::Stub::SearchReadGroupSets(::grpc::ClientContext* context, const ::google::genomics::v1::SearchReadGroupSetsRequest& request, ::google::genomics::v1::SearchReadGroupSetsResponse* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_SearchReadGroupSets_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchReadGroupSetsResponse>* ReadServiceV1::Stub::AsyncSearchReadGroupSetsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::SearchReadGroupSetsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchReadGroupSetsResponse>::Create(channel_.get(), cq, rpcmethod_SearchReadGroupSets_, context, request);
}

::grpc::Status ReadServiceV1::Stub::UpdateReadGroupSet(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateReadGroupSetRequest& request, ::google::genomics::v1::ReadGroupSet* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateReadGroupSet_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1::ReadGroupSet>* ReadServiceV1::Stub::AsyncUpdateReadGroupSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::UpdateReadGroupSetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::ReadGroupSet>::Create(channel_.get(), cq, rpcmethod_UpdateReadGroupSet_, context, request);
}

::grpc::Status ReadServiceV1::Stub::DeleteReadGroupSet(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteReadGroupSetRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteReadGroupSet_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ReadServiceV1::Stub::AsyncDeleteReadGroupSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::DeleteReadGroupSetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteReadGroupSet_, context, request);
}

::grpc::Status ReadServiceV1::Stub::GetReadGroupSet(::grpc::ClientContext* context, const ::google::genomics::v1::GetReadGroupSetRequest& request, ::google::genomics::v1::ReadGroupSet* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_GetReadGroupSet_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1::ReadGroupSet>* ReadServiceV1::Stub::AsyncGetReadGroupSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::GetReadGroupSetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::ReadGroupSet>::Create(channel_.get(), cq, rpcmethod_GetReadGroupSet_, context, request);
}

::grpc::Status ReadServiceV1::Stub::ListCoverageBuckets(::grpc::ClientContext* context, const ::google::genomics::v1::ListCoverageBucketsRequest& request, ::google::genomics::v1::ListCoverageBucketsResponse* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_ListCoverageBuckets_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1::ListCoverageBucketsResponse>* ReadServiceV1::Stub::AsyncListCoverageBucketsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::ListCoverageBucketsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::ListCoverageBucketsResponse>::Create(channel_.get(), cq, rpcmethod_ListCoverageBuckets_, context, request);
}

::grpc::Status ReadServiceV1::Stub::SearchReads(::grpc::ClientContext* context, const ::google::genomics::v1::SearchReadsRequest& request, ::google::genomics::v1::SearchReadsResponse* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_SearchReads_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchReadsResponse>* ReadServiceV1::Stub::AsyncSearchReadsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::SearchReadsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchReadsResponse>::Create(channel_.get(), cq, rpcmethod_SearchReads_, context, request);
}

ReadServiceV1::Service::Service() {
  AddMethod(new ::grpc::RpcServiceMethod(
      ReadServiceV1_method_names[0],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ReadServiceV1::Service, ::google::genomics::v1::ImportReadGroupSetsRequest, ::google::longrunning::Operation>(
          std::mem_fn(&ReadServiceV1::Service::ImportReadGroupSets), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ReadServiceV1_method_names[1],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ReadServiceV1::Service, ::google::genomics::v1::ExportReadGroupSetRequest, ::google::longrunning::Operation>(
          std::mem_fn(&ReadServiceV1::Service::ExportReadGroupSet), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ReadServiceV1_method_names[2],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ReadServiceV1::Service, ::google::genomics::v1::SearchReadGroupSetsRequest, ::google::genomics::v1::SearchReadGroupSetsResponse>(
          std::mem_fn(&ReadServiceV1::Service::SearchReadGroupSets), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ReadServiceV1_method_names[3],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ReadServiceV1::Service, ::google::genomics::v1::UpdateReadGroupSetRequest, ::google::genomics::v1::ReadGroupSet>(
          std::mem_fn(&ReadServiceV1::Service::UpdateReadGroupSet), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ReadServiceV1_method_names[4],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ReadServiceV1::Service, ::google::genomics::v1::DeleteReadGroupSetRequest, ::google::protobuf::Empty>(
          std::mem_fn(&ReadServiceV1::Service::DeleteReadGroupSet), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ReadServiceV1_method_names[5],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ReadServiceV1::Service, ::google::genomics::v1::GetReadGroupSetRequest, ::google::genomics::v1::ReadGroupSet>(
          std::mem_fn(&ReadServiceV1::Service::GetReadGroupSet), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ReadServiceV1_method_names[6],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ReadServiceV1::Service, ::google::genomics::v1::ListCoverageBucketsRequest, ::google::genomics::v1::ListCoverageBucketsResponse>(
          std::mem_fn(&ReadServiceV1::Service::ListCoverageBuckets), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ReadServiceV1_method_names[7],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ReadServiceV1::Service, ::google::genomics::v1::SearchReadsRequest, ::google::genomics::v1::SearchReadsResponse>(
          std::mem_fn(&ReadServiceV1::Service::SearchReads), this)));
}

ReadServiceV1::Service::~Service() {
}

::grpc::Status ReadServiceV1::Service::ImportReadGroupSets(::grpc::ServerContext* context, const ::google::genomics::v1::ImportReadGroupSetsRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ReadServiceV1::Service::ExportReadGroupSet(::grpc::ServerContext* context, const ::google::genomics::v1::ExportReadGroupSetRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ReadServiceV1::Service::SearchReadGroupSets(::grpc::ServerContext* context, const ::google::genomics::v1::SearchReadGroupSetsRequest* request, ::google::genomics::v1::SearchReadGroupSetsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ReadServiceV1::Service::UpdateReadGroupSet(::grpc::ServerContext* context, const ::google::genomics::v1::UpdateReadGroupSetRequest* request, ::google::genomics::v1::ReadGroupSet* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ReadServiceV1::Service::DeleteReadGroupSet(::grpc::ServerContext* context, const ::google::genomics::v1::DeleteReadGroupSetRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ReadServiceV1::Service::GetReadGroupSet(::grpc::ServerContext* context, const ::google::genomics::v1::GetReadGroupSetRequest* request, ::google::genomics::v1::ReadGroupSet* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ReadServiceV1::Service::ListCoverageBuckets(::grpc::ServerContext* context, const ::google::genomics::v1::ListCoverageBucketsRequest* request, ::google::genomics::v1::ListCoverageBucketsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ReadServiceV1::Service::SearchReads(::grpc::ServerContext* context, const ::google::genomics::v1::SearchReadsRequest* request, ::google::genomics::v1::SearchReadsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace genomics
}  // namespace v1

