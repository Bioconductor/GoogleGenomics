// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/genomics/v1/references.proto

#include "google/genomics/v1/references.pb.h"
#include "google/genomics/v1/references.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace google {
namespace genomics {
namespace v1 {

static const char* ReferenceServiceV1_method_names[] = {
  "/google.genomics.v1.ReferenceServiceV1/SearchReferenceSets",
  "/google.genomics.v1.ReferenceServiceV1/GetReferenceSet",
  "/google.genomics.v1.ReferenceServiceV1/SearchReferences",
  "/google.genomics.v1.ReferenceServiceV1/GetReference",
  "/google.genomics.v1.ReferenceServiceV1/ListBases",
};

std::unique_ptr< ReferenceServiceV1::Stub> ReferenceServiceV1::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< ReferenceServiceV1::Stub> stub(new ReferenceServiceV1::Stub(channel));
  return stub;
}

ReferenceServiceV1::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_SearchReferenceSets_(ReferenceServiceV1_method_names[0], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetReferenceSet_(ReferenceServiceV1_method_names[1], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SearchReferences_(ReferenceServiceV1_method_names[2], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetReference_(ReferenceServiceV1_method_names[3], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListBases_(ReferenceServiceV1_method_names[4], ::grpc::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ReferenceServiceV1::Stub::SearchReferenceSets(::grpc::ClientContext* context, const ::google::genomics::v1::SearchReferenceSetsRequest& request, ::google::genomics::v1::SearchReferenceSetsResponse* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_SearchReferenceSets_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchReferenceSetsResponse>* ReferenceServiceV1::Stub::AsyncSearchReferenceSetsRaw(::grpc::ClientContext* context, const ::google::genomics::v1::SearchReferenceSetsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchReferenceSetsResponse>::Create(channel_.get(), cq, rpcmethod_SearchReferenceSets_, context, request);
}

::grpc::Status ReferenceServiceV1::Stub::GetReferenceSet(::grpc::ClientContext* context, const ::google::genomics::v1::GetReferenceSetRequest& request, ::google::genomics::v1::ReferenceSet* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_GetReferenceSet_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1::ReferenceSet>* ReferenceServiceV1::Stub::AsyncGetReferenceSetRaw(::grpc::ClientContext* context, const ::google::genomics::v1::GetReferenceSetRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::ReferenceSet>::Create(channel_.get(), cq, rpcmethod_GetReferenceSet_, context, request);
}

::grpc::Status ReferenceServiceV1::Stub::SearchReferences(::grpc::ClientContext* context, const ::google::genomics::v1::SearchReferencesRequest& request, ::google::genomics::v1::SearchReferencesResponse* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_SearchReferences_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchReferencesResponse>* ReferenceServiceV1::Stub::AsyncSearchReferencesRaw(::grpc::ClientContext* context, const ::google::genomics::v1::SearchReferencesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::SearchReferencesResponse>::Create(channel_.get(), cq, rpcmethod_SearchReferences_, context, request);
}

::grpc::Status ReferenceServiceV1::Stub::GetReference(::grpc::ClientContext* context, const ::google::genomics::v1::GetReferenceRequest& request, ::google::genomics::v1::Reference* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_GetReference_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1::Reference>* ReferenceServiceV1::Stub::AsyncGetReferenceRaw(::grpc::ClientContext* context, const ::google::genomics::v1::GetReferenceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::Reference>::Create(channel_.get(), cq, rpcmethod_GetReference_, context, request);
}

::grpc::Status ReferenceServiceV1::Stub::ListBases(::grpc::ClientContext* context, const ::google::genomics::v1::ListBasesRequest& request, ::google::genomics::v1::ListBasesResponse* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_ListBases_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::genomics::v1::ListBasesResponse>* ReferenceServiceV1::Stub::AsyncListBasesRaw(::grpc::ClientContext* context, const ::google::genomics::v1::ListBasesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::ClientAsyncResponseReader< ::google::genomics::v1::ListBasesResponse>::Create(channel_.get(), cq, rpcmethod_ListBases_, context, request);
}

ReferenceServiceV1::Service::Service() {
  AddMethod(new ::grpc::RpcServiceMethod(
      ReferenceServiceV1_method_names[0],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ReferenceServiceV1::Service, ::google::genomics::v1::SearchReferenceSetsRequest, ::google::genomics::v1::SearchReferenceSetsResponse>(
          std::mem_fn(&ReferenceServiceV1::Service::SearchReferenceSets), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ReferenceServiceV1_method_names[1],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ReferenceServiceV1::Service, ::google::genomics::v1::GetReferenceSetRequest, ::google::genomics::v1::ReferenceSet>(
          std::mem_fn(&ReferenceServiceV1::Service::GetReferenceSet), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ReferenceServiceV1_method_names[2],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ReferenceServiceV1::Service, ::google::genomics::v1::SearchReferencesRequest, ::google::genomics::v1::SearchReferencesResponse>(
          std::mem_fn(&ReferenceServiceV1::Service::SearchReferences), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ReferenceServiceV1_method_names[3],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ReferenceServiceV1::Service, ::google::genomics::v1::GetReferenceRequest, ::google::genomics::v1::Reference>(
          std::mem_fn(&ReferenceServiceV1::Service::GetReference), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ReferenceServiceV1_method_names[4],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ReferenceServiceV1::Service, ::google::genomics::v1::ListBasesRequest, ::google::genomics::v1::ListBasesResponse>(
          std::mem_fn(&ReferenceServiceV1::Service::ListBases), this)));
}

ReferenceServiceV1::Service::~Service() {
}

::grpc::Status ReferenceServiceV1::Service::SearchReferenceSets(::grpc::ServerContext* context, const ::google::genomics::v1::SearchReferenceSetsRequest* request, ::google::genomics::v1::SearchReferenceSetsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ReferenceServiceV1::Service::GetReferenceSet(::grpc::ServerContext* context, const ::google::genomics::v1::GetReferenceSetRequest* request, ::google::genomics::v1::ReferenceSet* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ReferenceServiceV1::Service::SearchReferences(::grpc::ServerContext* context, const ::google::genomics::v1::SearchReferencesRequest* request, ::google::genomics::v1::SearchReferencesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ReferenceServiceV1::Service::GetReference(::grpc::ServerContext* context, const ::google::genomics::v1::GetReferenceRequest* request, ::google::genomics::v1::Reference* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ReferenceServiceV1::Service::ListBases(::grpc::ServerContext* context, const ::google::genomics::v1::ListBasesRequest* request, ::google::genomics::v1::ListBasesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace genomics
}  // namespace v1

