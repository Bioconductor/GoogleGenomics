// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/genomics/v1/readalignment.proto

#ifndef PROTOBUF_google_2fgenomics_2fv1_2freadalignment_2eproto__INCLUDED
#define PROTOBUF_google_2fgenomics_2fv1_2freadalignment_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/genomics/v1/cigar.pb.h"
#include "google/genomics/v1/position.pb.h"
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace api {
}  // namespace api
namespace genomics {
namespace v1 {
class CigarUnit;
class CigarUnitDefaultTypeInternal;
extern CigarUnitDefaultTypeInternal _CigarUnit_default_instance_;
class LinearAlignment;
class LinearAlignmentDefaultTypeInternal;
extern LinearAlignmentDefaultTypeInternal _LinearAlignment_default_instance_;
class Position;
class PositionDefaultTypeInternal;
extern PositionDefaultTypeInternal _Position_default_instance_;
class Read;
class ReadDefaultTypeInternal;
extern ReadDefaultTypeInternal _Read_default_instance_;
class Read_InfoEntry;
class Read_InfoEntryDefaultTypeInternal;
extern Read_InfoEntryDefaultTypeInternal _Read_InfoEntry_default_instance_;
}  // namespace v1
}  // namespace genomics
namespace protobuf {
class ListValue;
class ListValueDefaultTypeInternal;
extern ListValueDefaultTypeInternal _ListValue_default_instance_;
class Struct;
class StructDefaultTypeInternal;
extern StructDefaultTypeInternal _Struct_default_instance_;
class Struct_FieldsEntry;
class Struct_FieldsEntryDefaultTypeInternal;
extern Struct_FieldsEntryDefaultTypeInternal _Struct_FieldsEntry_default_instance_;
class Value;
class ValueDefaultTypeInternal;
extern ValueDefaultTypeInternal _Value_default_instance_;
}  // namespace protobuf
}  // namespace google

namespace google {
namespace genomics {
namespace v1 {

namespace protobuf_google_2fgenomics_2fv1_2freadalignment_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_google_2fgenomics_2fv1_2freadalignment_2eproto

// ===================================================================

class LinearAlignment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.LinearAlignment) */ {
 public:
  LinearAlignment();
  virtual ~LinearAlignment();

  LinearAlignment(const LinearAlignment& from);

  inline LinearAlignment& operator=(const LinearAlignment& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const LinearAlignment& default_instance();

  static inline const LinearAlignment* internal_default_instance() {
    return reinterpret_cast<const LinearAlignment*>(
               &_LinearAlignment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(LinearAlignment* other);
  void Swap(LinearAlignment* other);

  // implements Message ----------------------------------------------

  inline LinearAlignment* New() const PROTOBUF_FINAL { return New(NULL); }

  LinearAlignment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LinearAlignment& from);
  void MergeFrom(const LinearAlignment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LinearAlignment* other);
  protected:
  explicit LinearAlignment(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.genomics.v1.CigarUnit cigar = 3;
  int cigar_size() const;
  void clear_cigar();
  static const int kCigarFieldNumber = 3;
  const ::google::genomics::v1::CigarUnit& cigar(int index) const;
  ::google::genomics::v1::CigarUnit* mutable_cigar(int index);
  ::google::genomics::v1::CigarUnit* add_cigar();
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::CigarUnit >*
      mutable_cigar();
  const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::CigarUnit >&
      cigar() const;

  // .google.genomics.v1.Position position = 1;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  private:
  void _slow_mutable_position();
  void _slow_set_allocated_position(
      ::google::protobuf::Arena* message_arena, ::google::genomics::v1::Position** position);
  ::google::genomics::v1::Position* _slow_release_position();
  public:
  const ::google::genomics::v1::Position& position() const;
  ::google::genomics::v1::Position* mutable_position();
  ::google::genomics::v1::Position* release_position();
  void set_allocated_position(::google::genomics::v1::Position* position);
  ::google::genomics::v1::Position* unsafe_arena_release_position();
  void unsafe_arena_set_allocated_position(
      ::google::genomics::v1::Position* position);

  // int32 mapping_quality = 2;
  void clear_mapping_quality();
  static const int kMappingQualityFieldNumber = 2;
  ::google::protobuf::int32 mapping_quality() const;
  void set_mapping_quality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.LinearAlignment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::CigarUnit > cigar_;
  ::google::genomics::v1::Position* position_;
  ::google::protobuf::int32 mapping_quality_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2freadalignment_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class Read : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.genomics.v1.Read) */ {
 public:
  Read();
  virtual ~Read();

  Read(const Read& from);

  inline Read& operator=(const Read& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Read& default_instance();

  static inline const Read* internal_default_instance() {
    return reinterpret_cast<const Read*>(
               &_Read_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(Read* other);
  void Swap(Read* other);

  // implements Message ----------------------------------------------

  inline Read* New() const PROTOBUF_FINAL { return New(NULL); }

  Read* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Read& from);
  void MergeFrom(const Read& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Read* other);
  protected:
  explicit Read(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated int32 aligned_quality = 15;
  int aligned_quality_size() const;
  void clear_aligned_quality();
  static const int kAlignedQualityFieldNumber = 15;
  ::google::protobuf::int32 aligned_quality(int index) const;
  void set_aligned_quality(int index, ::google::protobuf::int32 value);
  void add_aligned_quality(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      aligned_quality() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_aligned_quality();

  // map<string, .google.protobuf.ListValue> info = 17;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 17;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
      info() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
      mutable_info();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);
  ::std::string* unsafe_arena_release_id();
  void unsafe_arena_set_allocated_id(
      ::std::string* id);

  // string read_group_id = 2;
  void clear_read_group_id();
  static const int kReadGroupIdFieldNumber = 2;
  const ::std::string& read_group_id() const;
  void set_read_group_id(const ::std::string& value);
  void set_read_group_id(const char* value);
  void set_read_group_id(const char* value, size_t size);
  ::std::string* mutable_read_group_id();
  ::std::string* release_read_group_id();
  void set_allocated_read_group_id(::std::string* read_group_id);
  ::std::string* unsafe_arena_release_read_group_id();
  void unsafe_arena_set_allocated_read_group_id(
      ::std::string* read_group_id);

  // string read_group_set_id = 3;
  void clear_read_group_set_id();
  static const int kReadGroupSetIdFieldNumber = 3;
  const ::std::string& read_group_set_id() const;
  void set_read_group_set_id(const ::std::string& value);
  void set_read_group_set_id(const char* value);
  void set_read_group_set_id(const char* value, size_t size);
  ::std::string* mutable_read_group_set_id();
  ::std::string* release_read_group_set_id();
  void set_allocated_read_group_set_id(::std::string* read_group_set_id);
  ::std::string* unsafe_arena_release_read_group_set_id();
  void unsafe_arena_set_allocated_read_group_set_id(
      ::std::string* read_group_set_id);

  // string fragment_name = 4;
  void clear_fragment_name();
  static const int kFragmentNameFieldNumber = 4;
  const ::std::string& fragment_name() const;
  void set_fragment_name(const ::std::string& value);
  void set_fragment_name(const char* value);
  void set_fragment_name(const char* value, size_t size);
  ::std::string* mutable_fragment_name();
  ::std::string* release_fragment_name();
  void set_allocated_fragment_name(::std::string* fragment_name);
  ::std::string* unsafe_arena_release_fragment_name();
  void unsafe_arena_set_allocated_fragment_name(
      ::std::string* fragment_name);

  // string aligned_sequence = 14;
  void clear_aligned_sequence();
  static const int kAlignedSequenceFieldNumber = 14;
  const ::std::string& aligned_sequence() const;
  void set_aligned_sequence(const ::std::string& value);
  void set_aligned_sequence(const char* value);
  void set_aligned_sequence(const char* value, size_t size);
  ::std::string* mutable_aligned_sequence();
  ::std::string* release_aligned_sequence();
  void set_allocated_aligned_sequence(::std::string* aligned_sequence);
  ::std::string* unsafe_arena_release_aligned_sequence();
  void unsafe_arena_set_allocated_aligned_sequence(
      ::std::string* aligned_sequence);

  // .google.genomics.v1.LinearAlignment alignment = 11;
  bool has_alignment() const;
  void clear_alignment();
  static const int kAlignmentFieldNumber = 11;
  private:
  void _slow_mutable_alignment();
  void _slow_set_allocated_alignment(
      ::google::protobuf::Arena* message_arena, ::google::genomics::v1::LinearAlignment** alignment);
  ::google::genomics::v1::LinearAlignment* _slow_release_alignment();
  public:
  const ::google::genomics::v1::LinearAlignment& alignment() const;
  ::google::genomics::v1::LinearAlignment* mutable_alignment();
  ::google::genomics::v1::LinearAlignment* release_alignment();
  void set_allocated_alignment(::google::genomics::v1::LinearAlignment* alignment);
  ::google::genomics::v1::LinearAlignment* unsafe_arena_release_alignment();
  void unsafe_arena_set_allocated_alignment(
      ::google::genomics::v1::LinearAlignment* alignment);

  // .google.genomics.v1.Position next_mate_position = 16;
  bool has_next_mate_position() const;
  void clear_next_mate_position();
  static const int kNextMatePositionFieldNumber = 16;
  private:
  void _slow_mutable_next_mate_position();
  void _slow_set_allocated_next_mate_position(
      ::google::protobuf::Arena* message_arena, ::google::genomics::v1::Position** next_mate_position);
  ::google::genomics::v1::Position* _slow_release_next_mate_position();
  public:
  const ::google::genomics::v1::Position& next_mate_position() const;
  ::google::genomics::v1::Position* mutable_next_mate_position();
  ::google::genomics::v1::Position* release_next_mate_position();
  void set_allocated_next_mate_position(::google::genomics::v1::Position* next_mate_position);
  ::google::genomics::v1::Position* unsafe_arena_release_next_mate_position();
  void unsafe_arena_set_allocated_next_mate_position(
      ::google::genomics::v1::Position* next_mate_position);

  // int32 fragment_length = 7;
  void clear_fragment_length();
  static const int kFragmentLengthFieldNumber = 7;
  ::google::protobuf::int32 fragment_length() const;
  void set_fragment_length(::google::protobuf::int32 value);

  // int32 read_number = 8;
  void clear_read_number();
  static const int kReadNumberFieldNumber = 8;
  ::google::protobuf::int32 read_number() const;
  void set_read_number(::google::protobuf::int32 value);

  // bool proper_placement = 5;
  void clear_proper_placement();
  static const int kProperPlacementFieldNumber = 5;
  bool proper_placement() const;
  void set_proper_placement(bool value);

  // bool duplicate_fragment = 6;
  void clear_duplicate_fragment();
  static const int kDuplicateFragmentFieldNumber = 6;
  bool duplicate_fragment() const;
  void set_duplicate_fragment(bool value);

  // bool failed_vendor_quality_checks = 10;
  void clear_failed_vendor_quality_checks();
  static const int kFailedVendorQualityChecksFieldNumber = 10;
  bool failed_vendor_quality_checks() const;
  void set_failed_vendor_quality_checks(bool value);

  // bool secondary_alignment = 12;
  void clear_secondary_alignment();
  static const int kSecondaryAlignmentFieldNumber = 12;
  bool secondary_alignment() const;
  void set_secondary_alignment(bool value);

  // int32 number_reads = 9;
  void clear_number_reads();
  static const int kNumberReadsFieldNumber = 9;
  ::google::protobuf::int32 number_reads() const;
  void set_number_reads(::google::protobuf::int32 value);

  // bool supplementary_alignment = 13;
  void clear_supplementary_alignment();
  static const int kSupplementaryAlignmentFieldNumber = 13;
  bool supplementary_alignment() const;
  void set_supplementary_alignment(bool value);

  // @@protoc_insertion_point(class_scope:google.genomics.v1.Read)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > aligned_quality_;
  mutable int _aligned_quality_cached_byte_size_;
  public:
  class Read_InfoEntry : public ::google::protobuf::internal::MapEntry<Read_InfoEntry, 
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<Read_InfoEntry, 
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    Read_InfoEntry();
    Read_InfoEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const Read_InfoEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_Read_InfoEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      Read_InfoEntry,
      ::std::string, ::google::protobuf::ListValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > info_;
  private:
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr read_group_id_;
  ::google::protobuf::internal::ArenaStringPtr read_group_set_id_;
  ::google::protobuf::internal::ArenaStringPtr fragment_name_;
  ::google::protobuf::internal::ArenaStringPtr aligned_sequence_;
  ::google::genomics::v1::LinearAlignment* alignment_;
  ::google::genomics::v1::Position* next_mate_position_;
  ::google::protobuf::int32 fragment_length_;
  ::google::protobuf::int32 read_number_;
  bool proper_placement_;
  bool duplicate_fragment_;
  bool failed_vendor_quality_checks_;
  bool secondary_alignment_;
  ::google::protobuf::int32 number_reads_;
  bool supplementary_alignment_;
  mutable int _cached_size_;
  friend struct protobuf_google_2fgenomics_2fv1_2freadalignment_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LinearAlignment

// .google.genomics.v1.Position position = 1;
inline bool LinearAlignment::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void LinearAlignment::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::google::genomics::v1::Position& LinearAlignment::position() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.LinearAlignment.position)
  return position_ != NULL ? *position_
                         : *::google::genomics::v1::Position::internal_default_instance();
}
inline ::google::genomics::v1::Position* LinearAlignment::mutable_position() {
  
  if (position_ == NULL) {
    _slow_mutable_position();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.LinearAlignment.position)
  return position_;
}
inline ::google::genomics::v1::Position* LinearAlignment::release_position() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.LinearAlignment.position)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_position();
  } else {
    ::google::genomics::v1::Position* temp = position_;
    position_ = NULL;
    return temp;
  }
}
inline  void LinearAlignment::set_allocated_position(::google::genomics::v1::Position* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position != NULL) {
    _slow_set_allocated_position(message_arena, &position);
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.LinearAlignment.position)
}

// int32 mapping_quality = 2;
inline void LinearAlignment::clear_mapping_quality() {
  mapping_quality_ = 0;
}
inline ::google::protobuf::int32 LinearAlignment::mapping_quality() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.LinearAlignment.mapping_quality)
  return mapping_quality_;
}
inline void LinearAlignment::set_mapping_quality(::google::protobuf::int32 value) {
  
  mapping_quality_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.LinearAlignment.mapping_quality)
}

// repeated .google.genomics.v1.CigarUnit cigar = 3;
inline int LinearAlignment::cigar_size() const {
  return cigar_.size();
}
inline void LinearAlignment::clear_cigar() {
  cigar_.Clear();
}
inline const ::google::genomics::v1::CigarUnit& LinearAlignment::cigar(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.LinearAlignment.cigar)
  return cigar_.Get(index);
}
inline ::google::genomics::v1::CigarUnit* LinearAlignment::mutable_cigar(int index) {
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.LinearAlignment.cigar)
  return cigar_.Mutable(index);
}
inline ::google::genomics::v1::CigarUnit* LinearAlignment::add_cigar() {
  // @@protoc_insertion_point(field_add:google.genomics.v1.LinearAlignment.cigar)
  return cigar_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::CigarUnit >*
LinearAlignment::mutable_cigar() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.LinearAlignment.cigar)
  return &cigar_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::genomics::v1::CigarUnit >&
LinearAlignment::cigar() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.LinearAlignment.cigar)
  return cigar_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Read

// string id = 1;
inline void Read::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Read::id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.id)
  return id_.Get();
}
inline void Read::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.Read.id)
}
inline void Read::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Read.id)
}
inline void Read::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Read.id)
}
inline ::std::string* Read::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Read.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Read::release_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Read.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Read::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Read.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Read::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Read.id)
}
inline void Read::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Read.id)
}

// string read_group_id = 2;
inline void Read::clear_read_group_id() {
  read_group_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Read::read_group_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.read_group_id)
  return read_group_id_.Get();
}
inline void Read::set_read_group_id(const ::std::string& value) {
  
  read_group_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.Read.read_group_id)
}
inline void Read::set_read_group_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  read_group_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Read.read_group_id)
}
inline void Read::set_read_group_id(const char* value,
    size_t size) {
  
  read_group_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Read.read_group_id)
}
inline ::std::string* Read::mutable_read_group_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Read.read_group_id)
  return read_group_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Read::release_read_group_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Read.read_group_id)
  
  return read_group_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Read::unsafe_arena_release_read_group_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Read.read_group_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return read_group_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Read::set_allocated_read_group_id(::std::string* read_group_id) {
  if (read_group_id != NULL) {
    
  } else {
    
  }
  read_group_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), read_group_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Read.read_group_id)
}
inline void Read::unsafe_arena_set_allocated_read_group_id(
    ::std::string* read_group_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (read_group_id != NULL) {
    
  } else {
    
  }
  read_group_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      read_group_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Read.read_group_id)
}

// string read_group_set_id = 3;
inline void Read::clear_read_group_set_id() {
  read_group_set_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Read::read_group_set_id() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.read_group_set_id)
  return read_group_set_id_.Get();
}
inline void Read::set_read_group_set_id(const ::std::string& value) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.Read.read_group_set_id)
}
inline void Read::set_read_group_set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Read.read_group_set_id)
}
inline void Read::set_read_group_set_id(const char* value,
    size_t size) {
  
  read_group_set_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Read.read_group_set_id)
}
inline ::std::string* Read::mutable_read_group_set_id() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Read.read_group_set_id)
  return read_group_set_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Read::release_read_group_set_id() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Read.read_group_set_id)
  
  return read_group_set_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Read::unsafe_arena_release_read_group_set_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Read.read_group_set_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return read_group_set_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Read::set_allocated_read_group_set_id(::std::string* read_group_set_id) {
  if (read_group_set_id != NULL) {
    
  } else {
    
  }
  read_group_set_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), read_group_set_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Read.read_group_set_id)
}
inline void Read::unsafe_arena_set_allocated_read_group_set_id(
    ::std::string* read_group_set_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (read_group_set_id != NULL) {
    
  } else {
    
  }
  read_group_set_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      read_group_set_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Read.read_group_set_id)
}

// string fragment_name = 4;
inline void Read::clear_fragment_name() {
  fragment_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Read::fragment_name() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.fragment_name)
  return fragment_name_.Get();
}
inline void Read::set_fragment_name(const ::std::string& value) {
  
  fragment_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.Read.fragment_name)
}
inline void Read::set_fragment_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  fragment_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Read.fragment_name)
}
inline void Read::set_fragment_name(const char* value,
    size_t size) {
  
  fragment_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Read.fragment_name)
}
inline ::std::string* Read::mutable_fragment_name() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Read.fragment_name)
  return fragment_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Read::release_fragment_name() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Read.fragment_name)
  
  return fragment_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Read::unsafe_arena_release_fragment_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Read.fragment_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return fragment_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Read::set_allocated_fragment_name(::std::string* fragment_name) {
  if (fragment_name != NULL) {
    
  } else {
    
  }
  fragment_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fragment_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Read.fragment_name)
}
inline void Read::unsafe_arena_set_allocated_fragment_name(
    ::std::string* fragment_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (fragment_name != NULL) {
    
  } else {
    
  }
  fragment_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      fragment_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Read.fragment_name)
}

// bool proper_placement = 5;
inline void Read::clear_proper_placement() {
  proper_placement_ = false;
}
inline bool Read::proper_placement() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.proper_placement)
  return proper_placement_;
}
inline void Read::set_proper_placement(bool value) {
  
  proper_placement_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Read.proper_placement)
}

// bool duplicate_fragment = 6;
inline void Read::clear_duplicate_fragment() {
  duplicate_fragment_ = false;
}
inline bool Read::duplicate_fragment() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.duplicate_fragment)
  return duplicate_fragment_;
}
inline void Read::set_duplicate_fragment(bool value) {
  
  duplicate_fragment_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Read.duplicate_fragment)
}

// int32 fragment_length = 7;
inline void Read::clear_fragment_length() {
  fragment_length_ = 0;
}
inline ::google::protobuf::int32 Read::fragment_length() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.fragment_length)
  return fragment_length_;
}
inline void Read::set_fragment_length(::google::protobuf::int32 value) {
  
  fragment_length_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Read.fragment_length)
}

// int32 read_number = 8;
inline void Read::clear_read_number() {
  read_number_ = 0;
}
inline ::google::protobuf::int32 Read::read_number() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.read_number)
  return read_number_;
}
inline void Read::set_read_number(::google::protobuf::int32 value) {
  
  read_number_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Read.read_number)
}

// int32 number_reads = 9;
inline void Read::clear_number_reads() {
  number_reads_ = 0;
}
inline ::google::protobuf::int32 Read::number_reads() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.number_reads)
  return number_reads_;
}
inline void Read::set_number_reads(::google::protobuf::int32 value) {
  
  number_reads_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Read.number_reads)
}

// bool failed_vendor_quality_checks = 10;
inline void Read::clear_failed_vendor_quality_checks() {
  failed_vendor_quality_checks_ = false;
}
inline bool Read::failed_vendor_quality_checks() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.failed_vendor_quality_checks)
  return failed_vendor_quality_checks_;
}
inline void Read::set_failed_vendor_quality_checks(bool value) {
  
  failed_vendor_quality_checks_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Read.failed_vendor_quality_checks)
}

// .google.genomics.v1.LinearAlignment alignment = 11;
inline bool Read::has_alignment() const {
  return this != internal_default_instance() && alignment_ != NULL;
}
inline void Read::clear_alignment() {
  if (GetArenaNoVirtual() == NULL && alignment_ != NULL) delete alignment_;
  alignment_ = NULL;
}
inline const ::google::genomics::v1::LinearAlignment& Read::alignment() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.alignment)
  return alignment_ != NULL ? *alignment_
                         : *::google::genomics::v1::LinearAlignment::internal_default_instance();
}
inline ::google::genomics::v1::LinearAlignment* Read::mutable_alignment() {
  
  if (alignment_ == NULL) {
    _slow_mutable_alignment();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Read.alignment)
  return alignment_;
}
inline ::google::genomics::v1::LinearAlignment* Read::release_alignment() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Read.alignment)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_alignment();
  } else {
    ::google::genomics::v1::LinearAlignment* temp = alignment_;
    alignment_ = NULL;
    return temp;
  }
}
inline  void Read::set_allocated_alignment(::google::genomics::v1::LinearAlignment* alignment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete alignment_;
  }
  if (alignment != NULL) {
    _slow_set_allocated_alignment(message_arena, &alignment);
  }
  alignment_ = alignment;
  if (alignment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Read.alignment)
}

// bool secondary_alignment = 12;
inline void Read::clear_secondary_alignment() {
  secondary_alignment_ = false;
}
inline bool Read::secondary_alignment() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.secondary_alignment)
  return secondary_alignment_;
}
inline void Read::set_secondary_alignment(bool value) {
  
  secondary_alignment_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Read.secondary_alignment)
}

// bool supplementary_alignment = 13;
inline void Read::clear_supplementary_alignment() {
  supplementary_alignment_ = false;
}
inline bool Read::supplementary_alignment() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.supplementary_alignment)
  return supplementary_alignment_;
}
inline void Read::set_supplementary_alignment(bool value) {
  
  supplementary_alignment_ = value;
  // @@protoc_insertion_point(field_set:google.genomics.v1.Read.supplementary_alignment)
}

// string aligned_sequence = 14;
inline void Read::clear_aligned_sequence() {
  aligned_sequence_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Read::aligned_sequence() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.aligned_sequence)
  return aligned_sequence_.Get();
}
inline void Read::set_aligned_sequence(const ::std::string& value) {
  
  aligned_sequence_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.genomics.v1.Read.aligned_sequence)
}
inline void Read::set_aligned_sequence(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  aligned_sequence_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.genomics.v1.Read.aligned_sequence)
}
inline void Read::set_aligned_sequence(const char* value,
    size_t size) {
  
  aligned_sequence_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.genomics.v1.Read.aligned_sequence)
}
inline ::std::string* Read::mutable_aligned_sequence() {
  
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Read.aligned_sequence)
  return aligned_sequence_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Read::release_aligned_sequence() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Read.aligned_sequence)
  
  return aligned_sequence_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Read::unsafe_arena_release_aligned_sequence() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.genomics.v1.Read.aligned_sequence)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return aligned_sequence_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Read::set_allocated_aligned_sequence(::std::string* aligned_sequence) {
  if (aligned_sequence != NULL) {
    
  } else {
    
  }
  aligned_sequence_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aligned_sequence,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Read.aligned_sequence)
}
inline void Read::unsafe_arena_set_allocated_aligned_sequence(
    ::std::string* aligned_sequence) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (aligned_sequence != NULL) {
    
  } else {
    
  }
  aligned_sequence_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      aligned_sequence, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.genomics.v1.Read.aligned_sequence)
}

// repeated int32 aligned_quality = 15;
inline int Read::aligned_quality_size() const {
  return aligned_quality_.size();
}
inline void Read::clear_aligned_quality() {
  aligned_quality_.Clear();
}
inline ::google::protobuf::int32 Read::aligned_quality(int index) const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.aligned_quality)
  return aligned_quality_.Get(index);
}
inline void Read::set_aligned_quality(int index, ::google::protobuf::int32 value) {
  aligned_quality_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.genomics.v1.Read.aligned_quality)
}
inline void Read::add_aligned_quality(::google::protobuf::int32 value) {
  aligned_quality_.Add(value);
  // @@protoc_insertion_point(field_add:google.genomics.v1.Read.aligned_quality)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Read::aligned_quality() const {
  // @@protoc_insertion_point(field_list:google.genomics.v1.Read.aligned_quality)
  return aligned_quality_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Read::mutable_aligned_quality() {
  // @@protoc_insertion_point(field_mutable_list:google.genomics.v1.Read.aligned_quality)
  return &aligned_quality_;
}

// .google.genomics.v1.Position next_mate_position = 16;
inline bool Read::has_next_mate_position() const {
  return this != internal_default_instance() && next_mate_position_ != NULL;
}
inline void Read::clear_next_mate_position() {
  if (GetArenaNoVirtual() == NULL && next_mate_position_ != NULL) delete next_mate_position_;
  next_mate_position_ = NULL;
}
inline const ::google::genomics::v1::Position& Read::next_mate_position() const {
  // @@protoc_insertion_point(field_get:google.genomics.v1.Read.next_mate_position)
  return next_mate_position_ != NULL ? *next_mate_position_
                         : *::google::genomics::v1::Position::internal_default_instance();
}
inline ::google::genomics::v1::Position* Read::mutable_next_mate_position() {
  
  if (next_mate_position_ == NULL) {
    _slow_mutable_next_mate_position();
  }
  // @@protoc_insertion_point(field_mutable:google.genomics.v1.Read.next_mate_position)
  return next_mate_position_;
}
inline ::google::genomics::v1::Position* Read::release_next_mate_position() {
  // @@protoc_insertion_point(field_release:google.genomics.v1.Read.next_mate_position)
  
  if (GetArenaNoVirtual() != NULL) {
    return _slow_release_next_mate_position();
  } else {
    ::google::genomics::v1::Position* temp = next_mate_position_;
    next_mate_position_ = NULL;
    return temp;
  }
}
inline  void Read::set_allocated_next_mate_position(::google::genomics::v1::Position* next_mate_position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete next_mate_position_;
  }
  if (next_mate_position != NULL) {
    _slow_set_allocated_next_mate_position(message_arena, &next_mate_position);
  }
  next_mate_position_ = next_mate_position;
  if (next_mate_position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:google.genomics.v1.Read.next_mate_position)
}

// map<string, .google.protobuf.ListValue> info = 17;
inline int Read::info_size() const {
  return info_.size();
}
inline void Read::clear_info() {
  info_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >&
Read::info() const {
  // @@protoc_insertion_point(field_map:google.genomics.v1.Read.info)
  return info_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::ListValue >*
Read::mutable_info() {
  // @@protoc_insertion_point(field_mutable_map:google.genomics.v1.Read.info)
  return info_.MutableMap();
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace v1
}  // namespace genomics
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fgenomics_2fv1_2freadalignment_2eproto__INCLUDED
